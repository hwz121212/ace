// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_IFR_EXTENDEDC_971WAJ_H_
#define _TAO_PIDL_IFR_EXTENDEDC_971WAJ_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/IFR_Client/ifr_client_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/String_Manager_T.h"
#include "tao/IFR_Client/IFR_BasicA.h"
#include "tao/AnyTypeCode/VisibilityA.h"
#include "tao/AnyTypeCode/ValueModifierA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/IFR_Client/IFR_BasicC.h"
#include "tao/AnyTypeCode/VisibilityC.h"
#include "tao/AnyTypeCode/ValueModifierC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_root\root_ch.cpp:155



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace CORBA
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_FIXEDDEF__VAR_OUT_CH_)
#define _CORBA_FIXEDDEF__VAR_OUT_CH_

  class FixedDef;
  using FixedDef_ptr = FixedDef*;
  using FixedDef_var = TAO_Objref_Var_T<FixedDef>;
  using FixedDef_out = TAO_Objref_Out_T<FixedDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export FixedDef
    : public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<FixedDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = FixedDef_ptr;
    using _var_type = FixedDef_var;
    using _out_type = FixedDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static FixedDef_ptr _duplicate (FixedDef_ptr obj);

    static void _tao_release (FixedDef_ptr obj);

    static FixedDef_ptr _narrow (::CORBA::Object_ptr obj);
    static FixedDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static FixedDef_ptr _nil ();

    virtual ::CORBA::UShort digits ();

    virtual void digits (
      ::CORBA::UShort digits);

    virtual ::CORBA::Short scale ();

    virtual void scale (
      ::CORBA::Short scale);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    FixedDef ();

    // Concrete non-local interface only.
    FixedDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    FixedDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~FixedDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    FixedDef (const FixedDef &) = delete;
    FixedDef (FixedDef &&) = delete;
    FixedDef &operator= (const FixedDef &) = delete;
    FixedDef &operator= (FixedDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_FixedDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct ValueMember;
  using ValueMember_var = ::TAO_Var_Var_T<ValueMember>;
  using ValueMember_out = ::TAO_Out_T<ValueMember>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export ValueMember
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ValueMember_var;
    using _out_type = ValueMember_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    ::CORBA::TypeCode_var type;
    CORBA::IDLType_var type_def;
    CORBA::Visibility access;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ValueMember;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_CORBA_VALUEMEMBERSEQ_CH_)
#define _CORBA_VALUEMEMBERSEQ_CH_

  class ValueMemberSeq;
  typedef ::TAO_VarSeq_Var_T<ValueMemberSeq> ValueMemberSeq_var;
  typedef ::TAO_Seq_Out_T<ValueMemberSeq> ValueMemberSeq_out;
  

  class TAO_IFR_CLIENT_Export ValueMemberSeq
    : public
        ::TAO::unbounded_value_sequence< ValueMember>
  {
  public:
    ValueMemberSeq () = default;
    ValueMemberSeq ( ::CORBA::ULong max);
    ValueMemberSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ValueMember* buffer,
      ::CORBA::Boolean release = false);
    ValueMemberSeq (const ValueMemberSeq &) = default;
    ValueMemberSeq (ValueMemberSeq &&) = default;
    ValueMemberSeq& operator= (const ValueMemberSeq &) = default;
    ValueMemberSeq& operator= (ValueMemberSeq &&) = default;
    virtual ~ValueMemberSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ValueMemberSeq_var;
    using _out_type = ValueMemberSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ValueMemberSeq;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_VALUEMEMBERDEF__VAR_OUT_CH_)
#define _CORBA_VALUEMEMBERDEF__VAR_OUT_CH_

  class ValueMemberDef;
  using ValueMemberDef_ptr = ValueMemberDef*;
  using ValueMemberDef_var = TAO_Objref_Var_T<ValueMemberDef>;
  using ValueMemberDef_out = TAO_Objref_Out_T<ValueMemberDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ValueMemberDef
    : public virtual ::CORBA::Contained
  
  {
  public:
    friend class TAO::Narrow_Utils<ValueMemberDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ValueMemberDef_ptr;
    using _var_type = ValueMemberDef_var;
    using _out_type = ValueMemberDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ValueMemberDef_ptr _duplicate (ValueMemberDef_ptr obj);

    static void _tao_release (ValueMemberDef_ptr obj);

    static ValueMemberDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ValueMemberDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ValueMemberDef_ptr _nil ();

    virtual ::CORBA::TypeCode_ptr type ();

    virtual ::CORBA::IDLType_ptr type_def ();

    virtual void type_def (
      ::CORBA::IDLType_ptr type_def);

    virtual ::CORBA::Visibility access ();

    virtual void access (
      ::CORBA::Visibility access);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ValueMemberDef ();

    // Concrete non-local interface only.
    ValueMemberDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ValueMemberDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ValueMemberDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ValueMemberDef (const ValueMemberDef &) = delete;
    ValueMemberDef (ValueMemberDef &&) = delete;
    ValueMemberDef &operator= (const ValueMemberDef &) = delete;
    ValueMemberDef &operator= (ValueMemberDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ValueMemberDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_VALUEDEF__VAR_OUT_CH_)
#define _CORBA_VALUEDEF__VAR_OUT_CH_

  class ValueDef;
  using ValueDef_ptr = ValueDef*;
  using ValueDef_var = TAO_Objref_Var_T<ValueDef>;
  using ValueDef_out = TAO_Objref_Out_T<ValueDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ValueDef
    : public virtual ::CORBA::Container,
      public virtual ::CORBA::Contained,
      public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<ValueDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ValueDef_ptr;
    using _var_type = ValueDef_var;
    using _out_type = ValueDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ValueDef_ptr _duplicate (ValueDef_ptr obj);

    static void _tao_release (ValueDef_ptr obj);

    static ValueDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ValueDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ValueDef_ptr _nil ();

    virtual ::CORBA::InterfaceDefSeq * supported_interfaces ();

    virtual void supported_interfaces (
      const ::CORBA::InterfaceDefSeq & supported_interfaces);

    virtual ::CORBA::InitializerSeq * initializers ();

    virtual void initializers (
      const ::CORBA::InitializerSeq & initializers);

    virtual ::CORBA::ValueDef_ptr base_value ();

    virtual void base_value (
      ::CORBA::ValueDef_ptr base_value);

    virtual ::CORBA::ValueDefSeq * abstract_base_values ();

    virtual void abstract_base_values (
      const ::CORBA::ValueDefSeq & abstract_base_values);

    virtual ::CORBA::Boolean is_abstract ();

    virtual void is_abstract (
      ::CORBA::Boolean is_abstract);

    virtual ::CORBA::Boolean is_custom ();

    virtual void is_custom (
      ::CORBA::Boolean is_custom);

    virtual ::CORBA::Boolean is_truncatable ();

    virtual void is_truncatable (
      ::CORBA::Boolean is_truncatable);

    virtual ::CORBA::Boolean is_a (
      const char * id);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct FullValueDescription;
    using FullValueDescription_var = ::TAO_Var_Var_T<FullValueDescription>;
    using FullValueDescription_out = ::TAO_Out_T<FullValueDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export FullValueDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = FullValueDescription_var;
      using _out_type = FullValueDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::CORBA::Boolean is_abstract;
      ::CORBA::Boolean is_custom;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      CORBA::OpDescriptionSeq operations;
      CORBA::AttrDescriptionSeq attributes;
      CORBA::ValueMemberSeq members;
      CORBA::InitializerSeq initializers;
      CORBA::RepositoryIdSeq supported_interfaces;
      CORBA::RepositoryIdSeq abstract_base_values;
      ::CORBA::Boolean is_truncatable;
      ::TAO::String_Manager base_value;
      ::CORBA::TypeCode_var type;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_FullValueDescription;

    virtual ::CORBA::ValueDef::FullValueDescription * describe_value ();

    virtual ::CORBA::ValueMemberDef_ptr create_value_member (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr type,
      ::CORBA::Visibility access);

    virtual ::CORBA::AttributeDef_ptr create_attribute (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr type,
      ::CORBA::AttributeMode mode);

    virtual ::CORBA::OperationDef_ptr create_operation (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr result,
      ::CORBA::OperationMode mode,
      const ::CORBA::ParDescriptionSeq & params,
      const ::CORBA::ExceptionDefSeq & exceptions,
      const ::CORBA::ContextIdSeq & contexts);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ValueDef ();

    // Concrete non-local interface only.
    ValueDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ValueDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ValueDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ValueDef (const ValueDef &) = delete;
    ValueDef (ValueDef &&) = delete;
    ValueDef &operator= (const ValueDef &) = delete;
    ValueDef &operator= (ValueDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ValueDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct ValueDescription;
  using ValueDescription_var = ::TAO_Var_Var_T<ValueDescription>;
  using ValueDescription_out = ::TAO_Out_T<ValueDescription>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export ValueDescription
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ValueDescription_var;
    using _out_type = ValueDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::CORBA::Boolean is_abstract;
    ::CORBA::Boolean is_custom;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    CORBA::RepositoryIdSeq supported_interfaces;
    CORBA::RepositoryIdSeq abstract_base_values;
    ::CORBA::Boolean is_truncatable;
    ::TAO::String_Manager base_value;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ValueDescription;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_EXTVALUEDEF__VAR_OUT_CH_)
#define _CORBA_EXTVALUEDEF__VAR_OUT_CH_

  class ExtValueDef;
  using ExtValueDef_ptr = ExtValueDef*;
  using ExtValueDef_var = TAO_Objref_Var_T<ExtValueDef>;
  using ExtValueDef_out = TAO_Objref_Out_T<ExtValueDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ExtValueDef
    : public virtual ::CORBA::ValueDef
  
  {
  public:
    friend class TAO::Narrow_Utils<ExtValueDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ExtValueDef_ptr;
    using _var_type = ExtValueDef_var;
    using _out_type = ExtValueDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ExtValueDef_ptr _duplicate (ExtValueDef_ptr obj);

    static void _tao_release (ExtValueDef_ptr obj);

    static ExtValueDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ExtValueDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ExtValueDef_ptr _nil ();

    virtual ::CORBA::ExtInitializerSeq * ext_initializers ();

    virtual void ext_initializers (
      const ::CORBA::ExtInitializerSeq & ext_initializers);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct ExtFullValueDescription;
    using ExtFullValueDescription_var = ::TAO_Var_Var_T<ExtFullValueDescription>;
    using ExtFullValueDescription_out = ::TAO_Out_T<ExtFullValueDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export ExtFullValueDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = ExtFullValueDescription_var;
      using _out_type = ExtFullValueDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::CORBA::Boolean is_abstract;
      ::CORBA::Boolean is_custom;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      CORBA::OpDescriptionSeq operations;
      CORBA::ExtAttrDescriptionSeq attributes;
      CORBA::ValueMemberSeq members;
      CORBA::ExtInitializerSeq initializers;
      CORBA::RepositoryIdSeq supported_interfaces;
      CORBA::RepositoryIdSeq abstract_base_values;
      ::CORBA::Boolean is_truncatable;
      ::TAO::String_Manager base_value;
      ::CORBA::TypeCode_var type;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_ExtFullValueDescription;

    virtual ::CORBA::ExtValueDef::ExtFullValueDescription * describe_ext_value ();

    virtual ::CORBA::ExtAttributeDef_ptr create_ext_attribute (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr type,
      ::CORBA::AttributeMode mode,
      const ::CORBA::ExceptionDefSeq & get_exceptions,
      const ::CORBA::ExceptionDefSeq & set_exceptions);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ExtValueDef ();

    // Concrete non-local interface only.
    ExtValueDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ExtValueDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ExtValueDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ExtValueDef (const ExtValueDef &) = delete;
    ExtValueDef (ExtValueDef &&) = delete;
    ExtValueDef &operator= (const ExtValueDef &) = delete;
    ExtValueDef &operator= (ExtValueDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExtValueDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_VALUEBOXDEF__VAR_OUT_CH_)
#define _CORBA_VALUEBOXDEF__VAR_OUT_CH_

  class ValueBoxDef;
  using ValueBoxDef_ptr = ValueBoxDef*;
  using ValueBoxDef_var = TAO_Objref_Var_T<ValueBoxDef>;
  using ValueBoxDef_out = TAO_Objref_Out_T<ValueBoxDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ValueBoxDef
    : public virtual ::CORBA::TypedefDef
  
  {
  public:
    friend class TAO::Narrow_Utils<ValueBoxDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ValueBoxDef_ptr;
    using _var_type = ValueBoxDef_var;
    using _out_type = ValueBoxDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ValueBoxDef_ptr _duplicate (ValueBoxDef_ptr obj);

    static void _tao_release (ValueBoxDef_ptr obj);

    static ValueBoxDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ValueBoxDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ValueBoxDef_ptr _nil ();

    virtual ::CORBA::IDLType_ptr original_type_def ();

    virtual void original_type_def (
      ::CORBA::IDLType_ptr original_type_def);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ValueBoxDef ();

    // Concrete non-local interface only.
    ValueBoxDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ValueBoxDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ValueBoxDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ValueBoxDef (const ValueBoxDef &) = delete;
    ValueBoxDef (ValueBoxDef &&) = delete;
    ValueBoxDef &operator= (const ValueBoxDef &) = delete;
    ValueBoxDef &operator= (ValueBoxDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ValueBoxDef;


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module CORBA
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_FIXEDDEF__ARG_TRAITS_)
#define _CORBA_FIXEDDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::FixedDef>
    : public Object_Arg_Traits_T<
        ::CORBA::FixedDef_ptr,
        ::CORBA::FixedDef_var,
        ::CORBA::FixedDef_out,
        TAO::Objref_Traits<CORBA::FixedDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ValueMember>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ValueMember,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::ValueMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ValueMemberSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_VALUEMEMBERDEF__ARG_TRAITS_)
#define _CORBA_VALUEMEMBERDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ValueMemberDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ValueMemberDef_ptr,
        ::CORBA::ValueMemberDef_var,
        ::CORBA::ValueMemberDef_out,
        TAO::Objref_Traits<CORBA::ValueMemberDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_VALUEDEF__ARG_TRAITS_)
#define _CORBA_VALUEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ValueDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ValueDef_ptr,
        ::CORBA::ValueDef_var,
        ::CORBA::ValueDef_out,
        TAO::Objref_Traits<CORBA::ValueDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ValueDef::FullValueDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ValueDef::FullValueDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ValueDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ValueDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_EXTVALUEDEF__ARG_TRAITS_)
#define _CORBA_EXTVALUEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtValueDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ExtValueDef_ptr,
        ::CORBA::ExtValueDef_var,
        ::CORBA::ExtValueDef_out,
        TAO::Objref_Traits<CORBA::ExtValueDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ExtValueDef::ExtFullValueDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtValueDef::ExtFullValueDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_VALUEBOXDEF__ARG_TRAITS_)
#define _CORBA_VALUEBOXDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ValueBoxDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ValueBoxDef_ptr,
        ::CORBA::ValueBoxDef_var,
        ::CORBA::ValueBoxDef_out,
        TAO::Objref_Traits<CORBA::ValueBoxDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CORBA_FIXEDDEF__TRAITS_)
#define _CORBA_FIXEDDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::FixedDef>
  {
    static ::CORBA::FixedDef_ptr duplicate (::CORBA::FixedDef_ptr p);
    static void release (::CORBA::FixedDef_ptr p);
    static ::CORBA::FixedDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::FixedDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_VALUEMEMBERDEF__TRAITS_)
#define _CORBA_VALUEMEMBERDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ValueMemberDef>
  {
    static ::CORBA::ValueMemberDef_ptr duplicate (::CORBA::ValueMemberDef_ptr p);
    static void release (::CORBA::ValueMemberDef_ptr p);
    static ::CORBA::ValueMemberDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ValueMemberDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_VALUEDEF__TRAITS_)
#define _CORBA_VALUEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ValueDef>
  {
    static ::CORBA::ValueDef_ptr duplicate (::CORBA::ValueDef_ptr p);
    static void release (::CORBA::ValueDef_ptr p);
    static ::CORBA::ValueDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ValueDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTVALUEDEF__TRAITS_)
#define _CORBA_EXTVALUEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ExtValueDef>
  {
    static ::CORBA::ExtValueDef_ptr duplicate (::CORBA::ExtValueDef_ptr p);
    static void release (::CORBA::ExtValueDef_ptr p);
    static ::CORBA::ExtValueDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ExtValueDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_VALUEBOXDEF__TRAITS_)
#define _CORBA_VALUEBOXDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ValueBoxDef>
  {
    static ::CORBA::ValueBoxDef_ptr duplicate (::CORBA::ValueBoxDef_ptr p);
    static void release (::CORBA::ValueBoxDef_ptr p);
    static ::CORBA::ValueBoxDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ValueBoxDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, FixedDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, FixedDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FixedDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::FixedDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::FixedDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::FixedDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ValueMember &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ValueMember*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ValueMember *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ValueMember &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueMember*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ValueMember *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ValueMemberSeq &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ValueMemberSeq*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ValueMemberSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::ValueMemberSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::ValueMemberSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ValueMemberSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ValueMemberDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ValueMemberDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ValueMemberDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueMemberDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueMemberDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ValueMemberDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ValueDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ValueDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ValueDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ValueDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ValueDef::FullValueDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ValueDef::FullValueDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ValueDef::FullValueDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ValueDef::FullValueDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueDef::FullValueDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ValueDef::FullValueDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ValueDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ValueDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ValueDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ValueDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ValueDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtValueDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtValueDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtValueDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtValueDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtValueDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtValueDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ExtValueDef::ExtFullValueDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ExtValueDef::ExtFullValueDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtValueDef::ExtFullValueDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ExtValueDef::ExtFullValueDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtValueDef::ExtFullValueDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtValueDef::ExtFullValueDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ValueBoxDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ValueBoxDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ValueBoxDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueBoxDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ValueBoxDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ValueBoxDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::FixedDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::FixedDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueMember &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueMember &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_ValueMemberSeq_H_
#define _TAO_CDR_OP_CORBA_ValueMemberSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ValueMemberSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ValueMemberSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ValueMemberSeq_H_ */


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueMemberDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueMemberDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueDef::FullValueDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueDef::FullValueDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtValueDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtValueDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtValueDef::ExtFullValueDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtValueDef::ExtFullValueDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueBoxDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueBoxDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "IFR_ExtendedC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

