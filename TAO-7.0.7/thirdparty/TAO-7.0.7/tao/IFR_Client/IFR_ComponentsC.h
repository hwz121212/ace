// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_IFR_COMPONENTSC_T12JDL_H_
#define _TAO_PIDL_IFR_COMPONENTSC_T12JDL_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/IFR_Client/ifr_client_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/String_Manager_T.h"
#include "tao/IFR_Client/IFR_ExtendedA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/IFR_Client/IFR_ExtendedC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_root\root_ch.cpp:155



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace CORBA
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

  namespace ComponentIR
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_COMPONENTDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_COMPONENTDEF__VAR_OUT_CH_

    class ComponentDef;
    using ComponentDef_ptr = ComponentDef*;
    using ComponentDef_var = TAO_Objref_Var_T<ComponentDef>;
    using ComponentDef_out = TAO_Objref_Out_T<ComponentDef>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_HOMEDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_HOMEDEF__VAR_OUT_CH_

    class HomeDef;
    using HomeDef_ptr = HomeDef*;
    using HomeDef_var = TAO_Objref_Var_T<HomeDef>;
    using HomeDef_out = TAO_Objref_Out_T<HomeDef>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_EVENTDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_EVENTDEF__VAR_OUT_CH_

    class EventDef;
    using EventDef_ptr = EventDef*;
    using EventDef_var = TAO_Objref_Var_T<EventDef>;
    using EventDef_out = TAO_Objref_Out_T<EventDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export EventDef
      : public virtual ::CORBA::ExtValueDef
    
    {
    public:
      friend class TAO::Narrow_Utils<EventDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = EventDef_ptr;
      using _var_type = EventDef_var;
      using _out_type = EventDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static EventDef_ptr _duplicate (EventDef_ptr obj);

      static void _tao_release (EventDef_ptr obj);

      static EventDef_ptr _narrow (::CORBA::Object_ptr obj);
      static EventDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static EventDef_ptr _nil ();

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      EventDef ();

      // Concrete non-local interface only.
      EventDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      EventDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~EventDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      EventDef (const EventDef &) = delete;
      EventDef (EventDef &&) = delete;
      EventDef &operator= (const EventDef &) = delete;
      EventDef &operator= (EventDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_EventDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_CONTAINER__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_CONTAINER__VAR_OUT_CH_

    class Container;
    using Container_ptr = Container*;
    using Container_var = TAO_Objref_Var_T<Container>;
    using Container_out = TAO_Objref_Out_T<Container>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export Container
      : public virtual ::CORBA::Container
    
    {
    public:
      friend class TAO::Narrow_Utils<Container>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = Container_ptr;
      using _var_type = Container_var;
      using _out_type = Container_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static Container_ptr _duplicate (Container_ptr obj);

      static void _tao_release (Container_ptr obj);

      static Container_ptr _narrow (::CORBA::Object_ptr obj);
      static Container_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static Container_ptr _nil ();

      virtual ::CORBA::ComponentIR::ComponentDef_ptr create_component (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::ComponentIR::ComponentDef_ptr base_component,
        const ::CORBA::InterfaceDefSeq & supports_interfaces);

      virtual ::CORBA::ComponentIR::HomeDef_ptr create_home (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::ComponentIR::HomeDef_ptr base_home,
        ::CORBA::ComponentIR::ComponentDef_ptr managed_component,
        const ::CORBA::InterfaceDefSeq & supports_interfaces,
        ::CORBA::ValueDef_ptr primary_key);

      virtual ::CORBA::ComponentIR::EventDef_ptr create_event (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::Boolean is_custom,
        ::CORBA::Boolean is_abstract,
        ::CORBA::ValueDef_ptr base_value,
        ::CORBA::Boolean is_truncatable,
        const ::CORBA::ValueDefSeq & abstract_base_values,
        const ::CORBA::InterfaceDefSeq & supported_interfaces,
        const ::CORBA::ExtInitializerSeq & initializers);

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      Container ();

      // Concrete non-local interface only.
      Container (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      Container (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~Container () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      Container (const Container &) = delete;
      Container (Container &&) = delete;
      Container &operator= (const Container &) = delete;
      Container &operator= (Container &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_Container;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_MODULEDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_MODULEDEF__VAR_OUT_CH_

    class ModuleDef;
    using ModuleDef_ptr = ModuleDef*;
    using ModuleDef_var = TAO_Objref_Var_T<ModuleDef>;
    using ModuleDef_out = TAO_Objref_Out_T<ModuleDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export ModuleDef
      : public virtual ::CORBA::ModuleDef,
        public virtual ::CORBA::ComponentIR::Container
    
    {
    public:
      friend class TAO::Narrow_Utils<ModuleDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = ModuleDef_ptr;
      using _var_type = ModuleDef_var;
      using _out_type = ModuleDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ModuleDef_ptr _duplicate (ModuleDef_ptr obj);

      static void _tao_release (ModuleDef_ptr obj);

      static ModuleDef_ptr _narrow (::CORBA::Object_ptr obj);
      static ModuleDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ModuleDef_ptr _nil ();

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      ModuleDef ();

      // Concrete non-local interface only.
      ModuleDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      ModuleDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~ModuleDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      ModuleDef (const ModuleDef &) = delete;
      ModuleDef (ModuleDef &&) = delete;
      ModuleDef &operator= (const ModuleDef &) = delete;
      ModuleDef &operator= (ModuleDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ModuleDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_REPOSITORY__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_REPOSITORY__VAR_OUT_CH_

    class Repository;
    using Repository_ptr = Repository*;
    using Repository_var = TAO_Objref_Var_T<Repository>;
    using Repository_out = TAO_Objref_Out_T<Repository>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export Repository
      : public virtual ::CORBA::Repository,
        public virtual ::CORBA::ComponentIR::Container
    
    {
    public:
      friend class TAO::Narrow_Utils<Repository>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = Repository_ptr;
      using _var_type = Repository_var;
      using _out_type = Repository_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static Repository_ptr _duplicate (Repository_ptr obj);

      static void _tao_release (Repository_ptr obj);

      static Repository_ptr _narrow (::CORBA::Object_ptr obj);
      static Repository_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static Repository_ptr _nil ();

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      Repository ();

      // Concrete non-local interface only.
      Repository (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      Repository (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~Repository () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      Repository (const Repository &) = delete;
      Repository (Repository &&) = delete;
      Repository &operator= (const Repository &) = delete;
      Repository &operator= (Repository &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_Repository;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_PROVIDESDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_PROVIDESDEF__VAR_OUT_CH_

    class ProvidesDef;
    using ProvidesDef_ptr = ProvidesDef*;
    using ProvidesDef_var = TAO_Objref_Var_T<ProvidesDef>;
    using ProvidesDef_out = TAO_Objref_Out_T<ProvidesDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export ProvidesDef
      : public virtual ::CORBA::Contained
    
    {
    public:
      friend class TAO::Narrow_Utils<ProvidesDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = ProvidesDef_ptr;
      using _var_type = ProvidesDef_var;
      using _out_type = ProvidesDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ProvidesDef_ptr _duplicate (ProvidesDef_ptr obj);

      static void _tao_release (ProvidesDef_ptr obj);

      static ProvidesDef_ptr _narrow (::CORBA::Object_ptr obj);
      static ProvidesDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ProvidesDef_ptr _nil ();

      virtual ::CORBA::InterfaceDef_ptr interface_type ();

      virtual void interface_type (
        ::CORBA::InterfaceDef_ptr interface_type);

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      ProvidesDef ();

      // Concrete non-local interface only.
      ProvidesDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      ProvidesDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~ProvidesDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      ProvidesDef (const ProvidesDef &) = delete;
      ProvidesDef (ProvidesDef &&) = delete;
      ProvidesDef &operator= (const ProvidesDef &) = delete;
      ProvidesDef &operator= (ProvidesDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ProvidesDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct ProvidesDescription;
    using ProvidesDescription_var = ::TAO_Var_Var_T<ProvidesDescription>;
    using ProvidesDescription_out = ::TAO_Out_T<ProvidesDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export ProvidesDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = ProvidesDescription_var;
      using _out_type = ProvidesDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      ::TAO::String_Manager interface_type;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ProvidesDescription;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_USESDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_USESDEF__VAR_OUT_CH_

    class UsesDef;
    using UsesDef_ptr = UsesDef*;
    using UsesDef_var = TAO_Objref_Var_T<UsesDef>;
    using UsesDef_out = TAO_Objref_Out_T<UsesDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export UsesDef
      : public virtual ::CORBA::Contained
    
    {
    public:
      friend class TAO::Narrow_Utils<UsesDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = UsesDef_ptr;
      using _var_type = UsesDef_var;
      using _out_type = UsesDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static UsesDef_ptr _duplicate (UsesDef_ptr obj);

      static void _tao_release (UsesDef_ptr obj);

      static UsesDef_ptr _narrow (::CORBA::Object_ptr obj);
      static UsesDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static UsesDef_ptr _nil ();

      virtual ::CORBA::InterfaceDef_ptr interface_type ();

      virtual void interface_type (
        ::CORBA::InterfaceDef_ptr interface_type);

      virtual ::CORBA::Boolean is_multiple ();

      virtual void is_multiple (
        ::CORBA::Boolean is_multiple);

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      UsesDef ();

      // Concrete non-local interface only.
      UsesDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      UsesDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~UsesDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      UsesDef (const UsesDef &) = delete;
      UsesDef (UsesDef &&) = delete;
      UsesDef &operator= (const UsesDef &) = delete;
      UsesDef &operator= (UsesDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_UsesDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct UsesDescription;
    using UsesDescription_var = ::TAO_Var_Var_T<UsesDescription>;
    using UsesDescription_out = ::TAO_Out_T<UsesDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export UsesDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = UsesDescription_var;
      using _out_type = UsesDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      ::TAO::String_Manager interface_type;
      ::CORBA::Boolean is_multiple;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_UsesDescription;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_EVENTPORTDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_EVENTPORTDEF__VAR_OUT_CH_

    class EventPortDef;
    using EventPortDef_ptr = EventPortDef*;
    using EventPortDef_var = TAO_Objref_Var_T<EventPortDef>;
    using EventPortDef_out = TAO_Objref_Out_T<EventPortDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export EventPortDef
      : public virtual ::CORBA::Contained
    
    {
    public:
      friend class TAO::Narrow_Utils<EventPortDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = EventPortDef_ptr;
      using _var_type = EventPortDef_var;
      using _out_type = EventPortDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static EventPortDef_ptr _duplicate (EventPortDef_ptr obj);

      static void _tao_release (EventPortDef_ptr obj);

      static EventPortDef_ptr _narrow (::CORBA::Object_ptr obj);
      static EventPortDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static EventPortDef_ptr _nil ();

      virtual ::CORBA::ComponentIR::EventDef_ptr event ();

      virtual void event (
        ::CORBA::ComponentIR::EventDef_ptr event);

      virtual ::CORBA::Boolean is_a (
        const char * event_id);

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      EventPortDef ();

      // Concrete non-local interface only.
      EventPortDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      EventPortDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~EventPortDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      EventPortDef (const EventPortDef &) = delete;
      EventPortDef (EventPortDef &&) = delete;
      EventPortDef &operator= (const EventPortDef &) = delete;
      EventPortDef &operator= (EventPortDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_EventPortDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct EventPortDescription;
    using EventPortDescription_var = ::TAO_Var_Var_T<EventPortDescription>;
    using EventPortDescription_out = ::TAO_Out_T<EventPortDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export EventPortDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = EventPortDescription_var;
      using _out_type = EventPortDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      ::TAO::String_Manager event;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_EventPortDescription;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_EMITSDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_EMITSDEF__VAR_OUT_CH_

    class EmitsDef;
    using EmitsDef_ptr = EmitsDef*;
    using EmitsDef_var = TAO_Objref_Var_T<EmitsDef>;
    using EmitsDef_out = TAO_Objref_Out_T<EmitsDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export EmitsDef
      : public virtual ::CORBA::ComponentIR::EventPortDef
    
    {
    public:
      friend class TAO::Narrow_Utils<EmitsDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = EmitsDef_ptr;
      using _var_type = EmitsDef_var;
      using _out_type = EmitsDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static EmitsDef_ptr _duplicate (EmitsDef_ptr obj);

      static void _tao_release (EmitsDef_ptr obj);

      static EmitsDef_ptr _narrow (::CORBA::Object_ptr obj);
      static EmitsDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static EmitsDef_ptr _nil ();

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      EmitsDef ();

      // Concrete non-local interface only.
      EmitsDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      EmitsDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~EmitsDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      EmitsDef (const EmitsDef &) = delete;
      EmitsDef (EmitsDef &&) = delete;
      EmitsDef &operator= (const EmitsDef &) = delete;
      EmitsDef &operator= (EmitsDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_EmitsDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_PUBLISHESDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_PUBLISHESDEF__VAR_OUT_CH_

    class PublishesDef;
    using PublishesDef_ptr = PublishesDef*;
    using PublishesDef_var = TAO_Objref_Var_T<PublishesDef>;
    using PublishesDef_out = TAO_Objref_Out_T<PublishesDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export PublishesDef
      : public virtual ::CORBA::ComponentIR::EventPortDef
    
    {
    public:
      friend class TAO::Narrow_Utils<PublishesDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = PublishesDef_ptr;
      using _var_type = PublishesDef_var;
      using _out_type = PublishesDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static PublishesDef_ptr _duplicate (PublishesDef_ptr obj);

      static void _tao_release (PublishesDef_ptr obj);

      static PublishesDef_ptr _narrow (::CORBA::Object_ptr obj);
      static PublishesDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static PublishesDef_ptr _nil ();

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      PublishesDef ();

      // Concrete non-local interface only.
      PublishesDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      PublishesDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~PublishesDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      PublishesDef (const PublishesDef &) = delete;
      PublishesDef (PublishesDef &&) = delete;
      PublishesDef &operator= (const PublishesDef &) = delete;
      PublishesDef &operator= (PublishesDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_PublishesDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_CONSUMESDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_CONSUMESDEF__VAR_OUT_CH_

    class ConsumesDef;
    using ConsumesDef_ptr = ConsumesDef*;
    using ConsumesDef_var = TAO_Objref_Var_T<ConsumesDef>;
    using ConsumesDef_out = TAO_Objref_Out_T<ConsumesDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export ConsumesDef
      : public virtual ::CORBA::ComponentIR::EventPortDef
    
    {
    public:
      friend class TAO::Narrow_Utils<ConsumesDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = ConsumesDef_ptr;
      using _var_type = ConsumesDef_var;
      using _out_type = ConsumesDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ConsumesDef_ptr _duplicate (ConsumesDef_ptr obj);

      static void _tao_release (ConsumesDef_ptr obj);

      static ConsumesDef_ptr _narrow (::CORBA::Object_ptr obj);
      static ConsumesDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ConsumesDef_ptr _nil ();

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      ConsumesDef ();

      // Concrete non-local interface only.
      ConsumesDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      ConsumesDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~ConsumesDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      ConsumesDef (const ConsumesDef &) = delete;
      ConsumesDef (ConsumesDef &&) = delete;
      ConsumesDef &operator= (const ConsumesDef &) = delete;
      ConsumesDef &operator= (ConsumesDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ConsumesDef;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export ComponentDef
      : public virtual ::CORBA::ExtInterfaceDef
    
    {
    public:
      friend class TAO::Narrow_Utils<ComponentDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = ComponentDef_ptr;
      using _var_type = ComponentDef_var;
      using _out_type = ComponentDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ComponentDef_ptr _duplicate (ComponentDef_ptr obj);

      static void _tao_release (ComponentDef_ptr obj);

      static ComponentDef_ptr _narrow (::CORBA::Object_ptr obj);
      static ComponentDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ComponentDef_ptr _nil ();

      virtual ::CORBA::ComponentIR::ComponentDef_ptr base_component ();

      virtual void base_component (
        ::CORBA::ComponentIR::ComponentDef_ptr base_component);

      virtual ::CORBA::InterfaceDefSeq * supported_interfaces ();

      virtual void supported_interfaces (
        const ::CORBA::InterfaceDefSeq & supported_interfaces);

      virtual ::CORBA::ComponentIR::ProvidesDef_ptr create_provides (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::InterfaceDef_ptr interface_type);

      virtual ::CORBA::ComponentIR::UsesDef_ptr create_uses (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::InterfaceDef_ptr interface_type,
        ::CORBA::Boolean is_multiple);

      virtual ::CORBA::ComponentIR::EmitsDef_ptr create_emits (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::ComponentIR::EventDef_ptr event);

      virtual ::CORBA::ComponentIR::PublishesDef_ptr create_publishes (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::ComponentIR::EventDef_ptr event);

      virtual ::CORBA::ComponentIR::ConsumesDef_ptr create_consumes (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::ComponentIR::EventDef_ptr event);

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      ComponentDef ();

      // Concrete non-local interface only.
      ComponentDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      ComponentDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~ComponentDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      ComponentDef (const ComponentDef &) = delete;
      ComponentDef (ComponentDef &&) = delete;
      ComponentDef &operator= (const ComponentDef &) = delete;
      ComponentDef &operator= (ComponentDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ComponentDef;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

    

#if !defined (_CORBA_COMPONENTIR_PROVIDESDESCRIPTIONSEQ_CH_)
#define _CORBA_COMPONENTIR_PROVIDESDESCRIPTIONSEQ_CH_

    class ProvidesDescriptionSeq;
    typedef ::TAO_VarSeq_Var_T<ProvidesDescriptionSeq> ProvidesDescriptionSeq_var;
    typedef ::TAO_Seq_Out_T<ProvidesDescriptionSeq> ProvidesDescriptionSeq_out;
    

    class TAO_IFR_CLIENT_Export ProvidesDescriptionSeq
      : public
          ::TAO::unbounded_value_sequence< ProvidesDescription>
    {
    public:
      ProvidesDescriptionSeq () = default;
      ProvidesDescriptionSeq ( ::CORBA::ULong max);
      ProvidesDescriptionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ProvidesDescription* buffer,
        ::CORBA::Boolean release = false);
      ProvidesDescriptionSeq (const ProvidesDescriptionSeq &) = default;
      ProvidesDescriptionSeq (ProvidesDescriptionSeq &&) = default;
      ProvidesDescriptionSeq& operator= (const ProvidesDescriptionSeq &) = default;
      ProvidesDescriptionSeq& operator= (ProvidesDescriptionSeq &&) = default;
      virtual ~ProvidesDescriptionSeq () = default;
      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = ProvidesDescriptionSeq_var;
      using _out_type = ProvidesDescriptionSeq_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ProvidesDescriptionSeq;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

    

#if !defined (_CORBA_COMPONENTIR_USESDESCRIPTIONSEQ_CH_)
#define _CORBA_COMPONENTIR_USESDESCRIPTIONSEQ_CH_

    class UsesDescriptionSeq;
    typedef ::TAO_VarSeq_Var_T<UsesDescriptionSeq> UsesDescriptionSeq_var;
    typedef ::TAO_Seq_Out_T<UsesDescriptionSeq> UsesDescriptionSeq_out;
    

    class TAO_IFR_CLIENT_Export UsesDescriptionSeq
      : public
          ::TAO::unbounded_value_sequence< UsesDescription>
    {
    public:
      UsesDescriptionSeq () = default;
      UsesDescriptionSeq ( ::CORBA::ULong max);
      UsesDescriptionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        UsesDescription* buffer,
        ::CORBA::Boolean release = false);
      UsesDescriptionSeq (const UsesDescriptionSeq &) = default;
      UsesDescriptionSeq (UsesDescriptionSeq &&) = default;
      UsesDescriptionSeq& operator= (const UsesDescriptionSeq &) = default;
      UsesDescriptionSeq& operator= (UsesDescriptionSeq &&) = default;
      virtual ~UsesDescriptionSeq () = default;
      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = UsesDescriptionSeq_var;
      using _out_type = UsesDescriptionSeq_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_UsesDescriptionSeq;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

    

#if !defined (_CORBA_COMPONENTIR_EVENTPORTDESCRIPTIONSEQ_CH_)
#define _CORBA_COMPONENTIR_EVENTPORTDESCRIPTIONSEQ_CH_

    class EventPortDescriptionSeq;
    typedef ::TAO_VarSeq_Var_T<EventPortDescriptionSeq> EventPortDescriptionSeq_var;
    typedef ::TAO_Seq_Out_T<EventPortDescriptionSeq> EventPortDescriptionSeq_out;
    

    class TAO_IFR_CLIENT_Export EventPortDescriptionSeq
      : public
          ::TAO::unbounded_value_sequence< EventPortDescription>
    {
    public:
      EventPortDescriptionSeq () = default;
      EventPortDescriptionSeq ( ::CORBA::ULong max);
      EventPortDescriptionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        EventPortDescription* buffer,
        ::CORBA::Boolean release = false);
      EventPortDescriptionSeq (const EventPortDescriptionSeq &) = default;
      EventPortDescriptionSeq (EventPortDescriptionSeq &&) = default;
      EventPortDescriptionSeq& operator= (const EventPortDescriptionSeq &) = default;
      EventPortDescriptionSeq& operator= (EventPortDescriptionSeq &&) = default;
      virtual ~EventPortDescriptionSeq () = default;
      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = EventPortDescriptionSeq_var;
      using _out_type = EventPortDescriptionSeq_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_EventPortDescriptionSeq;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct ComponentDescription;
    using ComponentDescription_var = ::TAO_Var_Var_T<ComponentDescription>;
    using ComponentDescription_out = ::TAO_Out_T<ComponentDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export ComponentDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = ComponentDescription_var;
      using _out_type = ComponentDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      ::TAO::String_Manager base_component;
      CORBA::RepositoryIdSeq supported_interfaces;
      CORBA::ComponentIR::ProvidesDescriptionSeq provided_interfaces;
      CORBA::ComponentIR::UsesDescriptionSeq used_interfaces;
      CORBA::ComponentIR::EventPortDescriptionSeq emits_events;
      CORBA::ComponentIR::EventPortDescriptionSeq publishes_events;
      CORBA::ComponentIR::EventPortDescriptionSeq consumes_events;
      CORBA::ExtAttrDescriptionSeq attributes;
      ::CORBA::TypeCode_var type;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ComponentDescription;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_FACTORYDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_FACTORYDEF__VAR_OUT_CH_

    class FactoryDef;
    using FactoryDef_ptr = FactoryDef*;
    using FactoryDef_var = TAO_Objref_Var_T<FactoryDef>;
    using FactoryDef_out = TAO_Objref_Out_T<FactoryDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export FactoryDef
      : public virtual ::CORBA::OperationDef
    
    {
    public:
      friend class TAO::Narrow_Utils<FactoryDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = FactoryDef_ptr;
      using _var_type = FactoryDef_var;
      using _out_type = FactoryDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static FactoryDef_ptr _duplicate (FactoryDef_ptr obj);

      static void _tao_release (FactoryDef_ptr obj);

      static FactoryDef_ptr _narrow (::CORBA::Object_ptr obj);
      static FactoryDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static FactoryDef_ptr _nil ();

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      FactoryDef ();

      // Concrete non-local interface only.
      FactoryDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      FactoryDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~FactoryDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      FactoryDef (const FactoryDef &) = delete;
      FactoryDef (FactoryDef &&) = delete;
      FactoryDef &operator= (const FactoryDef &) = delete;
      FactoryDef &operator= (FactoryDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_FactoryDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

    

#if !defined (_CORBA_COMPONENTIR_FINDERDEF__VAR_OUT_CH_)
#define _CORBA_COMPONENTIR_FINDERDEF__VAR_OUT_CH_

    class FinderDef;
    using FinderDef_ptr = FinderDef*;
    using FinderDef_var = TAO_Objref_Var_T<FinderDef>;
    using FinderDef_out = TAO_Objref_Out_T<FinderDef>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export FinderDef
      : public virtual ::CORBA::OperationDef
    
    {
    public:
      friend class TAO::Narrow_Utils<FinderDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = FinderDef_ptr;
      using _var_type = FinderDef_var;
      using _out_type = FinderDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static FinderDef_ptr _duplicate (FinderDef_ptr obj);

      static void _tao_release (FinderDef_ptr obj);

      static FinderDef_ptr _narrow (::CORBA::Object_ptr obj);
      static FinderDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static FinderDef_ptr _nil ();

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      FinderDef ();

      // Concrete non-local interface only.
      FinderDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      FinderDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~FinderDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      FinderDef (const FinderDef &) = delete;
      FinderDef (FinderDef &&) = delete;
      FinderDef &operator= (const FinderDef &) = delete;
      FinderDef &operator= (FinderDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_FinderDef;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

    

    class TAO_IFR_CLIENT_Export HomeDef
      : public virtual ::CORBA::ExtInterfaceDef
    
    {
    public:
      friend class TAO::Narrow_Utils<HomeDef>;
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      using _ptr_type = HomeDef_ptr;
      using _var_type = HomeDef_var;
      using _out_type = HomeDef_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static HomeDef_ptr _duplicate (HomeDef_ptr obj);

      static void _tao_release (HomeDef_ptr obj);

      static HomeDef_ptr _narrow (::CORBA::Object_ptr obj);
      static HomeDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static HomeDef_ptr _nil ();

      virtual ::CORBA::ComponentIR::HomeDef_ptr base_home ();

      virtual void base_home (
        ::CORBA::ComponentIR::HomeDef_ptr base_home);

      virtual ::CORBA::InterfaceDefSeq * supported_interfaces ();

      virtual void supported_interfaces (
        const ::CORBA::InterfaceDefSeq & supported_interfaces);

      virtual ::CORBA::ComponentIR::ComponentDef_ptr managed_component ();

      virtual void managed_component (
        ::CORBA::ComponentIR::ComponentDef_ptr managed_component);

      virtual ::CORBA::ValueDef_ptr primary_key ();

      virtual void primary_key (
        ::CORBA::ValueDef_ptr primary_key);

      virtual ::CORBA::ComponentIR::FactoryDef_ptr create_factory (
        const char * id,
        const char * name,
        const char * version,
        const ::CORBA::ParDescriptionSeq & params,
        const ::CORBA::ExceptionDefSeq & exceptions);

      virtual ::CORBA::ComponentIR::FinderDef_ptr create_finder (
        const char * id,
        const char * name,
        const char * version,
        const ::CORBA::ParDescriptionSeq & params,
        const ::CORBA::ExceptionDefSeq & exceptions);

      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      HomeDef ();

      // Concrete non-local interface only.
      HomeDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      HomeDef (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~HomeDef () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      HomeDef (const HomeDef &) = delete;
      HomeDef (HomeDef &&) = delete;
      HomeDef &operator= (const HomeDef &) = delete;
      HomeDef &operator= (HomeDef &&) = delete;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_HomeDef;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct HomeDescription;
    using HomeDescription_var = ::TAO_Var_Var_T<HomeDescription>;
    using HomeDescription_out = ::TAO_Out_T<HomeDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export HomeDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = HomeDescription_var;
      using _out_type = HomeDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      ::TAO::String_Manager base_home;
      ::TAO::String_Manager managed_component;
      CORBA::ValueDescription primary_key;
      CORBA::OpDescriptionSeq factories;
      CORBA::OpDescriptionSeq finders;
      CORBA::OpDescriptionSeq operations;
      CORBA::ExtAttrDescriptionSeq attributes;
      ::CORBA::TypeCode_var type;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_HomeDescription;
  
  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62

  
  } // module CORBA::ComponentIR


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module CORBA
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_COMPONENTDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_COMPONENTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::ComponentDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::ComponentDef_ptr,
        ::CORBA::ComponentIR::ComponentDef_var,
        ::CORBA::ComponentIR::ComponentDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::ComponentDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_HOMEDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_HOMEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::HomeDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::HomeDef_ptr,
        ::CORBA::ComponentIR::HomeDef_var,
        ::CORBA::ComponentIR::HomeDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::HomeDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_EVENTDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_EVENTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::EventDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::EventDef_ptr,
        ::CORBA::ComponentIR::EventDef_var,
        ::CORBA::ComponentIR::EventDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::EventDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_CONTAINER__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_CONTAINER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::Container>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::Container_ptr,
        ::CORBA::ComponentIR::Container_var,
        ::CORBA::ComponentIR::Container_out,
        TAO::Objref_Traits<CORBA::ComponentIR::Container>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_MODULEDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_MODULEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::ModuleDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::ModuleDef_ptr,
        ::CORBA::ComponentIR::ModuleDef_var,
        ::CORBA::ComponentIR::ModuleDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::ModuleDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_REPOSITORY__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_REPOSITORY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::Repository>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::Repository_ptr,
        ::CORBA::ComponentIR::Repository_var,
        ::CORBA::ComponentIR::Repository_out,
        TAO::Objref_Traits<CORBA::ComponentIR::Repository>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_PROVIDESDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_PROVIDESDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::ProvidesDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::ProvidesDef_ptr,
        ::CORBA::ComponentIR::ProvidesDef_var,
        ::CORBA::ComponentIR::ProvidesDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::ProvidesDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ComponentIR::ProvidesDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ComponentIR::ProvidesDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_USESDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_USESDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::UsesDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::UsesDef_ptr,
        ::CORBA::ComponentIR::UsesDef_var,
        ::CORBA::ComponentIR::UsesDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::UsesDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ComponentIR::UsesDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ComponentIR::UsesDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_EVENTPORTDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_EVENTPORTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::EventPortDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::EventPortDef_ptr,
        ::CORBA::ComponentIR::EventPortDef_var,
        ::CORBA::ComponentIR::EventPortDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::EventPortDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ComponentIR::EventPortDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ComponentIR::EventPortDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_EMITSDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_EMITSDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::EmitsDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::EmitsDef_ptr,
        ::CORBA::ComponentIR::EmitsDef_var,
        ::CORBA::ComponentIR::EmitsDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::EmitsDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_PUBLISHESDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_PUBLISHESDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::PublishesDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::PublishesDef_ptr,
        ::CORBA::ComponentIR::PublishesDef_var,
        ::CORBA::ComponentIR::PublishesDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::PublishesDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_CONSUMESDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_CONSUMESDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::ConsumesDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::ConsumesDef_ptr,
        ::CORBA::ComponentIR::ConsumesDef_var,
        ::CORBA::ComponentIR::ConsumesDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::ConsumesDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::ComponentIR::ProvidesDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ComponentIR::ProvidesDescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::ComponentIR::UsesDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ComponentIR::UsesDescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::ComponentIR::EventPortDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ComponentIR::EventPortDescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ComponentIR::ComponentDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ComponentIR::ComponentDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_FACTORYDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_FACTORYDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::FactoryDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::FactoryDef_ptr,
        ::CORBA::ComponentIR::FactoryDef_var,
        ::CORBA::ComponentIR::FactoryDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::FactoryDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_COMPONENTIR_FINDERDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_FINDERDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ComponentIR::FinderDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ComponentIR::FinderDef_ptr,
        ::CORBA::ComponentIR::FinderDef_var,
        ::CORBA::ComponentIR::FinderDef_out,
        TAO::Objref_Traits<CORBA::ComponentIR::FinderDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ComponentIR::HomeDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ComponentIR::HomeDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CORBA_COMPONENTIR_EVENTDEF__TRAITS_)
#define _CORBA_COMPONENTIR_EVENTDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::EventDef>
  {
    static ::CORBA::ComponentIR::EventDef_ptr duplicate (::CORBA::ComponentIR::EventDef_ptr p);
    static void release (::CORBA::ComponentIR::EventDef_ptr p);
    static ::CORBA::ComponentIR::EventDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::EventDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_CONTAINER__TRAITS_)
#define _CORBA_COMPONENTIR_CONTAINER__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::Container>
  {
    static ::CORBA::ComponentIR::Container_ptr duplicate (::CORBA::ComponentIR::Container_ptr p);
    static void release (::CORBA::ComponentIR::Container_ptr p);
    static ::CORBA::ComponentIR::Container_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::Container_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_MODULEDEF__TRAITS_)
#define _CORBA_COMPONENTIR_MODULEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::ModuleDef>
  {
    static ::CORBA::ComponentIR::ModuleDef_ptr duplicate (::CORBA::ComponentIR::ModuleDef_ptr p);
    static void release (::CORBA::ComponentIR::ModuleDef_ptr p);
    static ::CORBA::ComponentIR::ModuleDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::ModuleDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_REPOSITORY__TRAITS_)
#define _CORBA_COMPONENTIR_REPOSITORY__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::Repository>
  {
    static ::CORBA::ComponentIR::Repository_ptr duplicate (::CORBA::ComponentIR::Repository_ptr p);
    static void release (::CORBA::ComponentIR::Repository_ptr p);
    static ::CORBA::ComponentIR::Repository_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::Repository_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_PROVIDESDEF__TRAITS_)
#define _CORBA_COMPONENTIR_PROVIDESDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::ProvidesDef>
  {
    static ::CORBA::ComponentIR::ProvidesDef_ptr duplicate (::CORBA::ComponentIR::ProvidesDef_ptr p);
    static void release (::CORBA::ComponentIR::ProvidesDef_ptr p);
    static ::CORBA::ComponentIR::ProvidesDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::ProvidesDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_USESDEF__TRAITS_)
#define _CORBA_COMPONENTIR_USESDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::UsesDef>
  {
    static ::CORBA::ComponentIR::UsesDef_ptr duplicate (::CORBA::ComponentIR::UsesDef_ptr p);
    static void release (::CORBA::ComponentIR::UsesDef_ptr p);
    static ::CORBA::ComponentIR::UsesDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::UsesDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_EVENTPORTDEF__TRAITS_)
#define _CORBA_COMPONENTIR_EVENTPORTDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::EventPortDef>
  {
    static ::CORBA::ComponentIR::EventPortDef_ptr duplicate (::CORBA::ComponentIR::EventPortDef_ptr p);
    static void release (::CORBA::ComponentIR::EventPortDef_ptr p);
    static ::CORBA::ComponentIR::EventPortDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::EventPortDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_EMITSDEF__TRAITS_)
#define _CORBA_COMPONENTIR_EMITSDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::EmitsDef>
  {
    static ::CORBA::ComponentIR::EmitsDef_ptr duplicate (::CORBA::ComponentIR::EmitsDef_ptr p);
    static void release (::CORBA::ComponentIR::EmitsDef_ptr p);
    static ::CORBA::ComponentIR::EmitsDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::EmitsDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_PUBLISHESDEF__TRAITS_)
#define _CORBA_COMPONENTIR_PUBLISHESDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::PublishesDef>
  {
    static ::CORBA::ComponentIR::PublishesDef_ptr duplicate (::CORBA::ComponentIR::PublishesDef_ptr p);
    static void release (::CORBA::ComponentIR::PublishesDef_ptr p);
    static ::CORBA::ComponentIR::PublishesDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::PublishesDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_CONSUMESDEF__TRAITS_)
#define _CORBA_COMPONENTIR_CONSUMESDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::ConsumesDef>
  {
    static ::CORBA::ComponentIR::ConsumesDef_ptr duplicate (::CORBA::ComponentIR::ConsumesDef_ptr p);
    static void release (::CORBA::ComponentIR::ConsumesDef_ptr p);
    static ::CORBA::ComponentIR::ConsumesDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::ConsumesDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_COMPONENTDEF__TRAITS_)
#define _CORBA_COMPONENTIR_COMPONENTDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::ComponentDef>
  {
    static ::CORBA::ComponentIR::ComponentDef_ptr duplicate (::CORBA::ComponentIR::ComponentDef_ptr p);
    static void release (::CORBA::ComponentIR::ComponentDef_ptr p);
    static ::CORBA::ComponentIR::ComponentDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::ComponentDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_FACTORYDEF__TRAITS_)
#define _CORBA_COMPONENTIR_FACTORYDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::FactoryDef>
  {
    static ::CORBA::ComponentIR::FactoryDef_ptr duplicate (::CORBA::ComponentIR::FactoryDef_ptr p);
    static void release (::CORBA::ComponentIR::FactoryDef_ptr p);
    static ::CORBA::ComponentIR::FactoryDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::FactoryDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_FINDERDEF__TRAITS_)
#define _CORBA_COMPONENTIR_FINDERDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::FinderDef>
  {
    static ::CORBA::ComponentIR::FinderDef_ptr duplicate (::CORBA::ComponentIR::FinderDef_ptr p);
    static void release (::CORBA::ComponentIR::FinderDef_ptr p);
    static ::CORBA::ComponentIR::FinderDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::FinderDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_COMPONENTIR_HOMEDEF__TRAITS_)
#define _CORBA_COMPONENTIR_HOMEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ComponentIR::HomeDef>
  {
    static ::CORBA::ComponentIR::HomeDef_ptr duplicate (::CORBA::ComponentIR::HomeDef_ptr p);
    static void release (::CORBA::ComponentIR::HomeDef_ptr p);
    static ::CORBA::ComponentIR::HomeDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ComponentIR::HomeDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, EventDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, EventDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EventDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::EventDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::EventDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::EventDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, Container_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, Container_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Container_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::Container_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::Container_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::Container_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ModuleDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ModuleDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ModuleDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ModuleDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ModuleDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::ModuleDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, Repository_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, Repository_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Repository_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::Repository_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::Repository_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::Repository_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ProvidesDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ProvidesDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ProvidesDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ProvidesDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ProvidesDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::ProvidesDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ComponentIR::ProvidesDescription &); // copying version
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ComponentIR::ProvidesDescription*); // noncopying version
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ComponentIR::ProvidesDescription *&);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ComponentIR::ProvidesDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ProvidesDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ComponentIR::ProvidesDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, UsesDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, UsesDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, UsesDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::UsesDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::UsesDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::UsesDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ComponentIR::UsesDescription &); // copying version
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ComponentIR::UsesDescription*); // noncopying version
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ComponentIR::UsesDescription *&);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ComponentIR::UsesDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::UsesDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ComponentIR::UsesDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, EventPortDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, EventPortDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EventPortDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::EventPortDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::EventPortDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::EventPortDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ComponentIR::EventPortDescription &); // copying version
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ComponentIR::EventPortDescription*); // noncopying version
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ComponentIR::EventPortDescription *&);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ComponentIR::EventPortDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::EventPortDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ComponentIR::EventPortDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, EmitsDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, EmitsDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EmitsDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::EmitsDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::EmitsDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::EmitsDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, PublishesDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, PublishesDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PublishesDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::PublishesDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::PublishesDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::PublishesDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ConsumesDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ConsumesDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ConsumesDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ConsumesDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ConsumesDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::ConsumesDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ComponentDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ComponentDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ComponentDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ComponentDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ComponentDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::ComponentDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ComponentIR::ProvidesDescriptionSeq &); // copying version
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ComponentIR::ProvidesDescriptionSeq*); // noncopying version
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ComponentIR::ProvidesDescriptionSeq *&);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::ComponentIR::ProvidesDescriptionSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::ComponentIR::ProvidesDescriptionSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ComponentIR::ProvidesDescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ComponentIR::UsesDescriptionSeq &); // copying version
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ComponentIR::UsesDescriptionSeq*); // noncopying version
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ComponentIR::UsesDescriptionSeq *&);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::ComponentIR::UsesDescriptionSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::ComponentIR::UsesDescriptionSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ComponentIR::UsesDescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ComponentIR::EventPortDescriptionSeq &); // copying version
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ComponentIR::EventPortDescriptionSeq*); // noncopying version
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ComponentIR::EventPortDescriptionSeq *&);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::ComponentIR::EventPortDescriptionSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::ComponentIR::EventPortDescriptionSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ComponentIR::EventPortDescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ComponentIR::ComponentDescription &); // copying version
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ComponentIR::ComponentDescription*); // noncopying version
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ComponentIR::ComponentDescription *&);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ComponentIR::ComponentDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::ComponentDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ComponentIR::ComponentDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, FactoryDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, FactoryDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FactoryDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::FactoryDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::FactoryDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::FactoryDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, FinderDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, FinderDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FinderDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::FinderDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::FinderDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::FinderDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, HomeDef_ptr); // copying
    TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, HomeDef_ptr *); // non-copying
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, HomeDef_ptr &);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::HomeDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::HomeDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ComponentIR::HomeDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  
  namespace ComponentIR
  {
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ComponentIR::HomeDescription &); // copying version
    TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ComponentIR::HomeDescription*); // noncopying version
    TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ComponentIR::HomeDescription *&);
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ComponentIR::HomeDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ComponentIR::HomeDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ComponentIR::HomeDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::EventDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::EventDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::Container_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::Container_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::ModuleDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::ModuleDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::Repository_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::Repository_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::ProvidesDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::ProvidesDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::ProvidesDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::ProvidesDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::UsesDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::UsesDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::UsesDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::UsesDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::EventPortDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::EventPortDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::EventPortDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::EventPortDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::EmitsDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::EmitsDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::PublishesDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::PublishesDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::ConsumesDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::ConsumesDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::ComponentDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::ComponentDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_ComponentIR_ProvidesDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ComponentIR_ProvidesDescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::ProvidesDescriptionSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::ProvidesDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ComponentIR_ProvidesDescriptionSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_ComponentIR_UsesDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ComponentIR_UsesDescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::UsesDescriptionSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::UsesDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ComponentIR_UsesDescriptionSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_ComponentIR_EventPortDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ComponentIR_EventPortDescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::EventPortDescriptionSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::EventPortDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ComponentIR_EventPortDescriptionSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::ComponentDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::ComponentDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::FactoryDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::FactoryDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::FinderDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::FinderDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::HomeDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::HomeDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ComponentIR::HomeDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ComponentIR::HomeDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "IFR_ComponentsC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

