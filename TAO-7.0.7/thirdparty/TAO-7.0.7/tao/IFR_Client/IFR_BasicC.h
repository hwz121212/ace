// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_IFR_BASICC_8NDWQY_H_
#define _TAO_PIDL_IFR_BASICC_8NDWQY_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/IFR_Client/ifr_client_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/IFR_Client/IFR_BaseA.h"
#include "tao/AnyTypeCode/ParameterModeA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/AnyTypeCode/Any_Arg_Traits.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/IFR_Client/IFR_BaseC.h"
#include "tao/ParameterModeC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_root\root_ch.cpp:155



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace CORBA
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_PRIMITIVEDEF__VAR_OUT_CH_)
#define _CORBA_PRIMITIVEDEF__VAR_OUT_CH_

  class PrimitiveDef;
  using PrimitiveDef_ptr = PrimitiveDef*;
  using PrimitiveDef_var = TAO_Objref_Var_T<PrimitiveDef>;
  using PrimitiveDef_out = TAO_Objref_Out_T<PrimitiveDef>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_STRINGDEF__VAR_OUT_CH_)
#define _CORBA_STRINGDEF__VAR_OUT_CH_

  class StringDef;
  using StringDef_ptr = StringDef*;
  using StringDef_var = TAO_Objref_Var_T<StringDef>;
  using StringDef_out = TAO_Objref_Out_T<StringDef>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_SEQUENCEDEF__VAR_OUT_CH_)
#define _CORBA_SEQUENCEDEF__VAR_OUT_CH_

  class SequenceDef;
  using SequenceDef_ptr = SequenceDef*;
  using SequenceDef_var = TAO_Objref_Var_T<SequenceDef>;
  using SequenceDef_out = TAO_Objref_Out_T<SequenceDef>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_ARRAYDEF__VAR_OUT_CH_)
#define _CORBA_ARRAYDEF__VAR_OUT_CH_

  class ArrayDef;
  using ArrayDef_ptr = ArrayDef*;
  using ArrayDef_var = TAO_Objref_Var_T<ArrayDef>;
  using ArrayDef_out = TAO_Objref_Out_T<ArrayDef>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_WSTRINGDEF__VAR_OUT_CH_)
#define _CORBA_WSTRINGDEF__VAR_OUT_CH_

  class WstringDef;
  using WstringDef_ptr = WstringDef*;
  using WstringDef_var = TAO_Objref_Var_T<WstringDef>;
  using WstringDef_out = TAO_Objref_Out_T<WstringDef>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_FIXEDDEF__VAR_OUT_CH_)
#define _CORBA_FIXEDDEF__VAR_OUT_CH_

  class FixedDef;
  using FixedDef_ptr = FixedDef*;
  using FixedDef_var = TAO_Objref_Var_T<FixedDef>;
  using FixedDef_out = TAO_Objref_Out_T<FixedDef>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\enum_ch.cpp:39

  enum PrimitiveKind
  {
    pk_null,
    pk_void,
    pk_short,
    pk_long,
    pk_ushort,
    pk_ulong,
    pk_float,
    pk_double,
    pk_boolean,
    pk_char,
    pk_octet,
    pk_any,
    pk_TypeCode,
    pk_Principal,
    pk_string,
    pk_objref,
    pk_longlong,
    pk_ulonglong,
    pk_longdouble,
    pk_wchar,
    pk_wstring,
    pk_value_base
  };

  typedef PrimitiveKind &PrimitiveKind_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_PrimitiveKind;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_REPOSITORY__VAR_OUT_CH_)
#define _CORBA_REPOSITORY__VAR_OUT_CH_

  class Repository;
  using Repository_ptr = Repository*;
  using Repository_var = TAO_Objref_Var_T<Repository>;
  using Repository_out = TAO_Objref_Out_T<Repository>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export Repository
    : public virtual ::CORBA::Container
  
  {
  public:
    friend class TAO::Narrow_Utils<Repository>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = Repository_ptr;
    using _var_type = Repository_var;
    using _out_type = Repository_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Repository_ptr _duplicate (Repository_ptr obj);

    static void _tao_release (Repository_ptr obj);

    static Repository_ptr _narrow (::CORBA::Object_ptr obj);
    static Repository_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Repository_ptr _nil ();

    virtual ::CORBA::Contained_ptr lookup_id (
      const char * search_id);

    virtual ::CORBA::TypeCode_ptr get_canonical_typecode (
      ::CORBA::TypeCode_ptr tc);

    virtual ::CORBA::PrimitiveDef_ptr get_primitive (
      ::CORBA::PrimitiveKind kind);

    virtual ::CORBA::StringDef_ptr create_string (
      ::CORBA::ULong bound);

    virtual ::CORBA::WstringDef_ptr create_wstring (
      ::CORBA::ULong bound);

    virtual ::CORBA::SequenceDef_ptr create_sequence (
      ::CORBA::ULong bound,
      ::CORBA::IDLType_ptr element_type);

    virtual ::CORBA::ArrayDef_ptr create_array (
      ::CORBA::ULong length,
      ::CORBA::IDLType_ptr element_type);

    virtual ::CORBA::FixedDef_ptr create_fixed (
      ::CORBA::UShort digits,
      ::CORBA::Short scale);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    Repository ();

    // Concrete non-local interface only.
    Repository (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Repository (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~Repository () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    Repository (const Repository &) = delete;
    Repository (Repository &&) = delete;
    Repository &operator= (const Repository &) = delete;
    Repository &operator= (Repository &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_Repository;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_MODULEDEF__VAR_OUT_CH_)
#define _CORBA_MODULEDEF__VAR_OUT_CH_

  class ModuleDef;
  using ModuleDef_ptr = ModuleDef*;
  using ModuleDef_var = TAO_Objref_Var_T<ModuleDef>;
  using ModuleDef_out = TAO_Objref_Out_T<ModuleDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ModuleDef
    : public virtual ::CORBA::Container,
      public virtual ::CORBA::Contained
  
  {
  public:
    friend class TAO::Narrow_Utils<ModuleDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ModuleDef_ptr;
    using _var_type = ModuleDef_var;
    using _out_type = ModuleDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ModuleDef_ptr _duplicate (ModuleDef_ptr obj);

    static void _tao_release (ModuleDef_ptr obj);

    static ModuleDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ModuleDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ModuleDef_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ModuleDef ();

    // Concrete non-local interface only.
    ModuleDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ModuleDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ModuleDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ModuleDef (const ModuleDef &) = delete;
    ModuleDef (ModuleDef &&) = delete;
    ModuleDef &operator= (const ModuleDef &) = delete;
    ModuleDef &operator= (ModuleDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ModuleDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct ModuleDescription;
  using ModuleDescription_var = ::TAO_Var_Var_T<ModuleDescription>;
  using ModuleDescription_out = ::TAO_Out_T<ModuleDescription>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export ModuleDescription
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ModuleDescription_var;
    using _out_type = ModuleDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ModuleDescription;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_CONSTANTDEF__VAR_OUT_CH_)
#define _CORBA_CONSTANTDEF__VAR_OUT_CH_

  class ConstantDef;
  using ConstantDef_ptr = ConstantDef*;
  using ConstantDef_var = TAO_Objref_Var_T<ConstantDef>;
  using ConstantDef_out = TAO_Objref_Out_T<ConstantDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ConstantDef
    : public virtual ::CORBA::Contained
  
  {
  public:
    friend class TAO::Narrow_Utils<ConstantDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ConstantDef_ptr;
    using _var_type = ConstantDef_var;
    using _out_type = ConstantDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ConstantDef_ptr _duplicate (ConstantDef_ptr obj);

    static void _tao_release (ConstantDef_ptr obj);

    static ConstantDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ConstantDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ConstantDef_ptr _nil ();

    virtual ::CORBA::TypeCode_ptr type ();

    virtual ::CORBA::IDLType_ptr type_def ();

    virtual void type_def (
      ::CORBA::IDLType_ptr type_def);

    virtual ::CORBA::Any * value ();

    virtual void value (
      const ::CORBA::Any & value);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ConstantDef ();

    // Concrete non-local interface only.
    ConstantDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ConstantDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ConstantDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ConstantDef (const ConstantDef &) = delete;
    ConstantDef (ConstantDef &&) = delete;
    ConstantDef &operator= (const ConstantDef &) = delete;
    ConstantDef &operator= (ConstantDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ConstantDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct ConstantDescription;
  using ConstantDescription_var = ::TAO_Var_Var_T<ConstantDescription>;
  using ConstantDescription_out = ::TAO_Out_T<ConstantDescription>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export ConstantDescription
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ConstantDescription_var;
    using _out_type = ConstantDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    ::CORBA::TypeCode_var type;
    ::CORBA::Any value;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ConstantDescription;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_STRUCTDEF__VAR_OUT_CH_)
#define _CORBA_STRUCTDEF__VAR_OUT_CH_

  class StructDef;
  using StructDef_ptr = StructDef*;
  using StructDef_var = TAO_Objref_Var_T<StructDef>;
  using StructDef_out = TAO_Objref_Out_T<StructDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export StructDef
    : public virtual ::CORBA::TypedefDef,
      public virtual ::CORBA::Container
  
  {
  public:
    friend class TAO::Narrow_Utils<StructDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = StructDef_ptr;
    using _var_type = StructDef_var;
    using _out_type = StructDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static StructDef_ptr _duplicate (StructDef_ptr obj);

    static void _tao_release (StructDef_ptr obj);

    static StructDef_ptr _narrow (::CORBA::Object_ptr obj);
    static StructDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static StructDef_ptr _nil ();

    virtual ::CORBA::StructMemberSeq * members ();

    virtual void members (
      const ::CORBA::StructMemberSeq & members);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    StructDef ();

    // Concrete non-local interface only.
    StructDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    StructDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~StructDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    StructDef (const StructDef &) = delete;
    StructDef (StructDef &&) = delete;
    StructDef &operator= (const StructDef &) = delete;
    StructDef &operator= (StructDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_StructDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_UNIONDEF__VAR_OUT_CH_)
#define _CORBA_UNIONDEF__VAR_OUT_CH_

  class UnionDef;
  using UnionDef_ptr = UnionDef*;
  using UnionDef_var = TAO_Objref_Var_T<UnionDef>;
  using UnionDef_out = TAO_Objref_Out_T<UnionDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export UnionDef
    : public virtual ::CORBA::TypedefDef,
      public virtual ::CORBA::Container
  
  {
  public:
    friend class TAO::Narrow_Utils<UnionDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = UnionDef_ptr;
    using _var_type = UnionDef_var;
    using _out_type = UnionDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static UnionDef_ptr _duplicate (UnionDef_ptr obj);

    static void _tao_release (UnionDef_ptr obj);

    static UnionDef_ptr _narrow (::CORBA::Object_ptr obj);
    static UnionDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static UnionDef_ptr _nil ();

    virtual ::CORBA::TypeCode_ptr discriminator_type ();

    virtual ::CORBA::IDLType_ptr discriminator_type_def ();

    virtual void discriminator_type_def (
      ::CORBA::IDLType_ptr discriminator_type_def);

    virtual ::CORBA::UnionMemberSeq * members ();

    virtual void members (
      const ::CORBA::UnionMemberSeq & members);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    UnionDef ();

    // Concrete non-local interface only.
    UnionDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    UnionDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~UnionDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    UnionDef (const UnionDef &) = delete;
    UnionDef (UnionDef &&) = delete;
    UnionDef &operator= (const UnionDef &) = delete;
    UnionDef &operator= (UnionDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_UnionDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_ENUMDEF__VAR_OUT_CH_)
#define _CORBA_ENUMDEF__VAR_OUT_CH_

  class EnumDef;
  using EnumDef_ptr = EnumDef*;
  using EnumDef_var = TAO_Objref_Var_T<EnumDef>;
  using EnumDef_out = TAO_Objref_Out_T<EnumDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export EnumDef
    : public virtual ::CORBA::TypedefDef
  
  {
  public:
    friend class TAO::Narrow_Utils<EnumDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = EnumDef_ptr;
    using _var_type = EnumDef_var;
    using _out_type = EnumDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static EnumDef_ptr _duplicate (EnumDef_ptr obj);

    static void _tao_release (EnumDef_ptr obj);

    static EnumDef_ptr _narrow (::CORBA::Object_ptr obj);
    static EnumDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static EnumDef_ptr _nil ();

    virtual ::CORBA::EnumMemberSeq * members ();

    virtual void members (
      const ::CORBA::EnumMemberSeq & members);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    EnumDef ();

    // Concrete non-local interface only.
    EnumDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    EnumDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~EnumDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    EnumDef (const EnumDef &) = delete;
    EnumDef (EnumDef &&) = delete;
    EnumDef &operator= (const EnumDef &) = delete;
    EnumDef &operator= (EnumDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_EnumDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_ALIASDEF__VAR_OUT_CH_)
#define _CORBA_ALIASDEF__VAR_OUT_CH_

  class AliasDef;
  using AliasDef_ptr = AliasDef*;
  using AliasDef_var = TAO_Objref_Var_T<AliasDef>;
  using AliasDef_out = TAO_Objref_Out_T<AliasDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export AliasDef
    : public virtual ::CORBA::TypedefDef
  
  {
  public:
    friend class TAO::Narrow_Utils<AliasDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = AliasDef_ptr;
    using _var_type = AliasDef_var;
    using _out_type = AliasDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static AliasDef_ptr _duplicate (AliasDef_ptr obj);

    static void _tao_release (AliasDef_ptr obj);

    static AliasDef_ptr _narrow (::CORBA::Object_ptr obj);
    static AliasDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AliasDef_ptr _nil ();

    virtual ::CORBA::IDLType_ptr original_type_def ();

    virtual void original_type_def (
      ::CORBA::IDLType_ptr original_type_def);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    AliasDef ();

    // Concrete non-local interface only.
    AliasDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    AliasDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~AliasDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    AliasDef (const AliasDef &) = delete;
    AliasDef (AliasDef &&) = delete;
    AliasDef &operator= (const AliasDef &) = delete;
    AliasDef &operator= (AliasDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_AliasDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_NATIVEDEF__VAR_OUT_CH_)
#define _CORBA_NATIVEDEF__VAR_OUT_CH_

  class NativeDef;
  using NativeDef_ptr = NativeDef*;
  using NativeDef_var = TAO_Objref_Var_T<NativeDef>;
  using NativeDef_out = TAO_Objref_Out_T<NativeDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export NativeDef
    : public virtual ::CORBA::TypedefDef
  
  {
  public:
    friend class TAO::Narrow_Utils<NativeDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = NativeDef_ptr;
    using _var_type = NativeDef_var;
    using _out_type = NativeDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static NativeDef_ptr _duplicate (NativeDef_ptr obj);

    static void _tao_release (NativeDef_ptr obj);

    static NativeDef_ptr _narrow (::CORBA::Object_ptr obj);
    static NativeDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static NativeDef_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    NativeDef ();

    // Concrete non-local interface only.
    NativeDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    NativeDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~NativeDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    NativeDef (const NativeDef &) = delete;
    NativeDef (NativeDef &&) = delete;
    NativeDef &operator= (const NativeDef &) = delete;
    NativeDef &operator= (NativeDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_NativeDef;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export PrimitiveDef
    : public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<PrimitiveDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = PrimitiveDef_ptr;
    using _var_type = PrimitiveDef_var;
    using _out_type = PrimitiveDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PrimitiveDef_ptr _duplicate (PrimitiveDef_ptr obj);

    static void _tao_release (PrimitiveDef_ptr obj);

    static PrimitiveDef_ptr _narrow (::CORBA::Object_ptr obj);
    static PrimitiveDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PrimitiveDef_ptr _nil ();

    virtual ::CORBA::PrimitiveKind kind ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    PrimitiveDef ();

    // Concrete non-local interface only.
    PrimitiveDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    PrimitiveDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~PrimitiveDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    PrimitiveDef (const PrimitiveDef &) = delete;
    PrimitiveDef (PrimitiveDef &&) = delete;
    PrimitiveDef &operator= (const PrimitiveDef &) = delete;
    PrimitiveDef &operator= (PrimitiveDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_PrimitiveDef;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export StringDef
    : public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<StringDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = StringDef_ptr;
    using _var_type = StringDef_var;
    using _out_type = StringDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static StringDef_ptr _duplicate (StringDef_ptr obj);

    static void _tao_release (StringDef_ptr obj);

    static StringDef_ptr _narrow (::CORBA::Object_ptr obj);
    static StringDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static StringDef_ptr _nil ();

    virtual ::CORBA::ULong bound ();

    virtual void bound (
      ::CORBA::ULong bound);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    StringDef ();

    // Concrete non-local interface only.
    StringDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    StringDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~StringDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    StringDef (const StringDef &) = delete;
    StringDef (StringDef &&) = delete;
    StringDef &operator= (const StringDef &) = delete;
    StringDef &operator= (StringDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_StringDef;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export WstringDef
    : public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<WstringDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = WstringDef_ptr;
    using _var_type = WstringDef_var;
    using _out_type = WstringDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static WstringDef_ptr _duplicate (WstringDef_ptr obj);

    static void _tao_release (WstringDef_ptr obj);

    static WstringDef_ptr _narrow (::CORBA::Object_ptr obj);
    static WstringDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static WstringDef_ptr _nil ();

    virtual ::CORBA::ULong bound ();

    virtual void bound (
      ::CORBA::ULong bound);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    WstringDef ();

    // Concrete non-local interface only.
    WstringDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    WstringDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~WstringDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    WstringDef (const WstringDef &) = delete;
    WstringDef (WstringDef &&) = delete;
    WstringDef &operator= (const WstringDef &) = delete;
    WstringDef &operator= (WstringDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_WstringDef;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export SequenceDef
    : public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<SequenceDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = SequenceDef_ptr;
    using _var_type = SequenceDef_var;
    using _out_type = SequenceDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SequenceDef_ptr _duplicate (SequenceDef_ptr obj);

    static void _tao_release (SequenceDef_ptr obj);

    static SequenceDef_ptr _narrow (::CORBA::Object_ptr obj);
    static SequenceDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SequenceDef_ptr _nil ();

    virtual ::CORBA::ULong bound ();

    virtual void bound (
      ::CORBA::ULong bound);

    virtual ::CORBA::TypeCode_ptr element_type ();

    virtual ::CORBA::IDLType_ptr element_type_def ();

    virtual void element_type_def (
      ::CORBA::IDLType_ptr element_type_def);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    SequenceDef ();

    // Concrete non-local interface only.
    SequenceDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SequenceDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~SequenceDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    SequenceDef (const SequenceDef &) = delete;
    SequenceDef (SequenceDef &&) = delete;
    SequenceDef &operator= (const SequenceDef &) = delete;
    SequenceDef &operator= (SequenceDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_SequenceDef;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ArrayDef
    : public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<ArrayDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ArrayDef_ptr;
    using _var_type = ArrayDef_var;
    using _out_type = ArrayDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ArrayDef_ptr _duplicate (ArrayDef_ptr obj);

    static void _tao_release (ArrayDef_ptr obj);

    static ArrayDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ArrayDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ArrayDef_ptr _nil ();

    virtual ::CORBA::ULong length ();

    virtual void length (
      ::CORBA::ULong length);

    virtual ::CORBA::TypeCode_ptr element_type ();

    virtual ::CORBA::IDLType_ptr element_type_def ();

    virtual void element_type_def (
      ::CORBA::IDLType_ptr element_type_def);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ArrayDef ();

    // Concrete non-local interface only.
    ArrayDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ArrayDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ArrayDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ArrayDef (const ArrayDef &) = delete;
    ArrayDef (ArrayDef &&) = delete;
    ArrayDef &operator= (const ArrayDef &) = delete;
    ArrayDef &operator= (ArrayDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ArrayDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_EXCEPTIONDEF__VAR_OUT_CH_)
#define _CORBA_EXCEPTIONDEF__VAR_OUT_CH_

  class ExceptionDef;
  using ExceptionDef_ptr = ExceptionDef*;
  using ExceptionDef_var = TAO_Objref_Var_T<ExceptionDef>;
  using ExceptionDef_out = TAO_Objref_Out_T<ExceptionDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ExceptionDef
    : public virtual ::CORBA::Contained,
      public virtual ::CORBA::Container
  
  {
  public:
    friend class TAO::Narrow_Utils<ExceptionDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ExceptionDef_ptr;
    using _var_type = ExceptionDef_var;
    using _out_type = ExceptionDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ExceptionDef_ptr _duplicate (ExceptionDef_ptr obj);

    static void _tao_release (ExceptionDef_ptr obj);

    static ExceptionDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ExceptionDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ExceptionDef_ptr _nil ();

    virtual ::CORBA::TypeCode_ptr type ();

    virtual ::CORBA::StructMemberSeq * members ();

    virtual void members (
      const ::CORBA::StructMemberSeq & members);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ExceptionDef ();

    // Concrete non-local interface only.
    ExceptionDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ExceptionDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ExceptionDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ExceptionDef (const ExceptionDef &) = delete;
    ExceptionDef (ExceptionDef &&) = delete;
    ExceptionDef &operator= (const ExceptionDef &) = delete;
    ExceptionDef &operator= (ExceptionDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExceptionDef;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_CORBA_EXCEPTIONDEFSEQ_CH_)
#define _CORBA_EXCEPTIONDEFSEQ_CH_

  class ExceptionDefSeq;
  typedef ::TAO_VarSeq_Var_T<ExceptionDefSeq> ExceptionDefSeq_var;
  typedef ::TAO_Seq_Out_T<ExceptionDefSeq> ExceptionDefSeq_out;
  

  class TAO_IFR_CLIENT_Export ExceptionDefSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            ExceptionDef,
            ExceptionDef_var
          >
  {
  public:
    ExceptionDefSeq () = default;
    ExceptionDefSeq ( ::CORBA::ULong max);
    ExceptionDefSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ExceptionDef_ptr* buffer,
      ::CORBA::Boolean release = false);
    ExceptionDefSeq (const ExceptionDefSeq &) = default;
    ExceptionDefSeq (ExceptionDefSeq &&) = default;
    ExceptionDefSeq& operator= (const ExceptionDefSeq &) = default;
    ExceptionDefSeq& operator= (ExceptionDefSeq &&) = default;
    virtual ~ExceptionDefSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ExceptionDefSeq_var;
    using _out_type = ExceptionDefSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExceptionDefSeq;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\enum_ch.cpp:39

  enum AttributeMode
  {
    ATTR_NORMAL,
    ATTR_READONLY
  };

  typedef AttributeMode &AttributeMode_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_AttributeMode;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_ATTRIBUTEDEF__VAR_OUT_CH_)
#define _CORBA_ATTRIBUTEDEF__VAR_OUT_CH_

  class AttributeDef;
  using AttributeDef_ptr = AttributeDef*;
  using AttributeDef_var = TAO_Objref_Var_T<AttributeDef>;
  using AttributeDef_out = TAO_Objref_Out_T<AttributeDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export AttributeDef
    : public virtual ::CORBA::Contained
  
  {
  public:
    friend class TAO::Narrow_Utils<AttributeDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = AttributeDef_ptr;
    using _var_type = AttributeDef_var;
    using _out_type = AttributeDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static AttributeDef_ptr _duplicate (AttributeDef_ptr obj);

    static void _tao_release (AttributeDef_ptr obj);

    static AttributeDef_ptr _narrow (::CORBA::Object_ptr obj);
    static AttributeDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AttributeDef_ptr _nil ();

    virtual ::CORBA::TypeCode_ptr type ();

    virtual ::CORBA::IDLType_ptr type_def ();

    virtual void type_def (
      ::CORBA::IDLType_ptr type_def);

    virtual ::CORBA::AttributeMode mode ();

    virtual void mode (
      ::CORBA::AttributeMode mode);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    AttributeDef ();

    // Concrete non-local interface only.
    AttributeDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    AttributeDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~AttributeDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    AttributeDef (const AttributeDef &) = delete;
    AttributeDef (AttributeDef &&) = delete;
    AttributeDef &operator= (const AttributeDef &) = delete;
    AttributeDef &operator= (AttributeDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_AttributeDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct AttributeDescription;
  using AttributeDescription_var = ::TAO_Var_Var_T<AttributeDescription>;
  using AttributeDescription_out = ::TAO_Out_T<AttributeDescription>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export AttributeDescription
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = AttributeDescription_var;
    using _out_type = AttributeDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    ::CORBA::TypeCode_var type;
    CORBA::AttributeMode mode;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_AttributeDescription;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct ExtAttributeDescription;
  using ExtAttributeDescription_var = ::TAO_Var_Var_T<ExtAttributeDescription>;
  using ExtAttributeDescription_out = ::TAO_Out_T<ExtAttributeDescription>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export ExtAttributeDescription
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ExtAttributeDescription_var;
    using _out_type = ExtAttributeDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    ::CORBA::TypeCode_var type;
    CORBA::AttributeMode mode;
    CORBA::ExcDescriptionSeq get_exceptions;
    CORBA::ExcDescriptionSeq put_exceptions;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExtAttributeDescription;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_EXTATTRIBUTEDEF__VAR_OUT_CH_)
#define _CORBA_EXTATTRIBUTEDEF__VAR_OUT_CH_

  class ExtAttributeDef;
  using ExtAttributeDef_ptr = ExtAttributeDef*;
  using ExtAttributeDef_var = TAO_Objref_Var_T<ExtAttributeDef>;
  using ExtAttributeDef_out = TAO_Objref_Out_T<ExtAttributeDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ExtAttributeDef
    : public virtual ::CORBA::AttributeDef
  
  {
  public:
    friend class TAO::Narrow_Utils<ExtAttributeDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ExtAttributeDef_ptr;
    using _var_type = ExtAttributeDef_var;
    using _out_type = ExtAttributeDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ExtAttributeDef_ptr _duplicate (ExtAttributeDef_ptr obj);

    static void _tao_release (ExtAttributeDef_ptr obj);

    static ExtAttributeDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ExtAttributeDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ExtAttributeDef_ptr _nil ();

    virtual ::CORBA::ExcDescriptionSeq * get_exceptions ();

    virtual void get_exceptions (
      const ::CORBA::ExcDescriptionSeq & get_exceptions);

    virtual ::CORBA::ExcDescriptionSeq * set_exceptions ();

    virtual void set_exceptions (
      const ::CORBA::ExcDescriptionSeq & set_exceptions);

    virtual ::CORBA::ExtAttributeDescription * describe_attribute ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ExtAttributeDef ();

    // Concrete non-local interface only.
    ExtAttributeDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ExtAttributeDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ExtAttributeDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ExtAttributeDef (const ExtAttributeDef &) = delete;
    ExtAttributeDef (ExtAttributeDef &&) = delete;
    ExtAttributeDef &operator= (const ExtAttributeDef &) = delete;
    ExtAttributeDef &operator= (ExtAttributeDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExtAttributeDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\enum_ch.cpp:39

  enum OperationMode
  {
    OP_NORMAL,
    OP_ONEWAY
  };

  typedef OperationMode &OperationMode_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_OperationMode;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct ParameterDescription;
  using ParameterDescription_var = ::TAO_Var_Var_T<ParameterDescription>;
  using ParameterDescription_out = ::TAO_Out_T<ParameterDescription>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export ParameterDescription
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ParameterDescription_var;
    using _out_type = ParameterDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::CORBA::TypeCode_var type;
    CORBA::IDLType_var type_def;
    CORBA::ParameterMode mode;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ParameterDescription;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_CORBA_PARDESCRIPTIONSEQ_CH_)
#define _CORBA_PARDESCRIPTIONSEQ_CH_

  class ParDescriptionSeq;
  typedef ::TAO_VarSeq_Var_T<ParDescriptionSeq> ParDescriptionSeq_var;
  typedef ::TAO_Seq_Out_T<ParDescriptionSeq> ParDescriptionSeq_out;
  

  class TAO_IFR_CLIENT_Export ParDescriptionSeq
    : public
        ::TAO::unbounded_value_sequence< ParameterDescription>
  {
  public:
    ParDescriptionSeq () = default;
    ParDescriptionSeq ( ::CORBA::ULong max);
    ParDescriptionSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ParameterDescription* buffer,
      ::CORBA::Boolean release = false);
    ParDescriptionSeq (const ParDescriptionSeq &) = default;
    ParDescriptionSeq (ParDescriptionSeq &&) = default;
    ParDescriptionSeq& operator= (const ParDescriptionSeq &) = default;
    ParDescriptionSeq& operator= (ParDescriptionSeq &&) = default;
    virtual ~ParDescriptionSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ParDescriptionSeq_var;
    using _out_type = ParDescriptionSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ParDescriptionSeq;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:399

  typedef char * ContextIdentifier;
  typedef ::CORBA::String_var ContextIdentifier_var;
  typedef ::CORBA::String_out ContextIdentifier_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ContextIdentifier;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_CORBA_CONTEXTIDSEQ_CH_)
#define _CORBA_CONTEXTIDSEQ_CH_

  class ContextIdSeq;
  typedef ::TAO_VarSeq_Var_T<ContextIdSeq> ContextIdSeq_var;
  typedef ::TAO_Seq_Out_T<ContextIdSeq> ContextIdSeq_out;
  

  class TAO_IFR_CLIENT_Export ContextIdSeq
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    ContextIdSeq () = default;
    ContextIdSeq ( ::CORBA::ULong max);
    ContextIdSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer,
      ::CORBA::Boolean release = false);
    ContextIdSeq (const ContextIdSeq &) = default;
    ContextIdSeq (ContextIdSeq &&) = default;
    ContextIdSeq& operator= (const ContextIdSeq &) = default;
    ContextIdSeq& operator= (ContextIdSeq &&) = default;
    virtual ~ContextIdSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ContextIdSeq_var;
    using _out_type = ContextIdSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ContextIdSeq;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_OPERATIONDEF__VAR_OUT_CH_)
#define _CORBA_OPERATIONDEF__VAR_OUT_CH_

  class OperationDef;
  using OperationDef_ptr = OperationDef*;
  using OperationDef_var = TAO_Objref_Var_T<OperationDef>;
  using OperationDef_out = TAO_Objref_Out_T<OperationDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export OperationDef
    : public virtual ::CORBA::Contained
  
  {
  public:
    friend class TAO::Narrow_Utils<OperationDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = OperationDef_ptr;
    using _var_type = OperationDef_var;
    using _out_type = OperationDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static OperationDef_ptr _duplicate (OperationDef_ptr obj);

    static void _tao_release (OperationDef_ptr obj);

    static OperationDef_ptr _narrow (::CORBA::Object_ptr obj);
    static OperationDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static OperationDef_ptr _nil ();

    virtual ::CORBA::TypeCode_ptr result ();

    virtual ::CORBA::IDLType_ptr result_def ();

    virtual void result_def (
      ::CORBA::IDLType_ptr result_def);

    virtual ::CORBA::ParDescriptionSeq * params ();

    virtual void params (
      const ::CORBA::ParDescriptionSeq & params);

    virtual ::CORBA::OperationMode mode ();

    virtual void mode (
      ::CORBA::OperationMode mode);

    virtual ::CORBA::ContextIdSeq * contexts ();

    virtual void contexts (
      const ::CORBA::ContextIdSeq & contexts);

    virtual ::CORBA::ExceptionDefSeq * exceptions ();

    virtual void exceptions (
      const ::CORBA::ExceptionDefSeq & exceptions);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    OperationDef ();

    // Concrete non-local interface only.
    OperationDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    OperationDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~OperationDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    OperationDef (const OperationDef &) = delete;
    OperationDef (OperationDef &&) = delete;
    OperationDef &operator= (const OperationDef &) = delete;
    OperationDef &operator= (OperationDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_OperationDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct OperationDescription;
  using OperationDescription_var = ::TAO_Var_Var_T<OperationDescription>;
  using OperationDescription_out = ::TAO_Out_T<OperationDescription>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export OperationDescription
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = OperationDescription_var;
    using _out_type = OperationDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    ::CORBA::TypeCode_var result;
    CORBA::OperationMode mode;
    CORBA::ContextIdSeq contexts;
    CORBA::ParDescriptionSeq parameters;
    CORBA::ExcDescriptionSeq exceptions;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_OperationDescription;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_CORBA_REPOSITORYIDSEQ_CH_)
#define _CORBA_REPOSITORYIDSEQ_CH_

  class RepositoryIdSeq;
  typedef ::TAO_VarSeq_Var_T<RepositoryIdSeq> RepositoryIdSeq_var;
  typedef ::TAO_Seq_Out_T<RepositoryIdSeq> RepositoryIdSeq_out;
  

  class TAO_IFR_CLIENT_Export RepositoryIdSeq
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    RepositoryIdSeq () = default;
    RepositoryIdSeq ( ::CORBA::ULong max);
    RepositoryIdSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer,
      ::CORBA::Boolean release = false);
    RepositoryIdSeq (const RepositoryIdSeq &) = default;
    RepositoryIdSeq (RepositoryIdSeq &&) = default;
    RepositoryIdSeq& operator= (const RepositoryIdSeq &) = default;
    RepositoryIdSeq& operator= (RepositoryIdSeq &&) = default;
    virtual ~RepositoryIdSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = RepositoryIdSeq_var;
    using _out_type = RepositoryIdSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_RepositoryIdSeq;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_CORBA_OPDESCRIPTIONSEQ_CH_)
#define _CORBA_OPDESCRIPTIONSEQ_CH_

  class OpDescriptionSeq;
  typedef ::TAO_VarSeq_Var_T<OpDescriptionSeq> OpDescriptionSeq_var;
  typedef ::TAO_Seq_Out_T<OpDescriptionSeq> OpDescriptionSeq_out;
  

  class TAO_IFR_CLIENT_Export OpDescriptionSeq
    : public
        ::TAO::unbounded_value_sequence< OperationDescription>
  {
  public:
    OpDescriptionSeq () = default;
    OpDescriptionSeq ( ::CORBA::ULong max);
    OpDescriptionSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      OperationDescription* buffer,
      ::CORBA::Boolean release = false);
    OpDescriptionSeq (const OpDescriptionSeq &) = default;
    OpDescriptionSeq (OpDescriptionSeq &&) = default;
    OpDescriptionSeq& operator= (const OpDescriptionSeq &) = default;
    OpDescriptionSeq& operator= (OpDescriptionSeq &&) = default;
    virtual ~OpDescriptionSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = OpDescriptionSeq_var;
    using _out_type = OpDescriptionSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_OpDescriptionSeq;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_CORBA_ATTRDESCRIPTIONSEQ_CH_)
#define _CORBA_ATTRDESCRIPTIONSEQ_CH_

  class AttrDescriptionSeq;
  typedef ::TAO_VarSeq_Var_T<AttrDescriptionSeq> AttrDescriptionSeq_var;
  typedef ::TAO_Seq_Out_T<AttrDescriptionSeq> AttrDescriptionSeq_out;
  

  class TAO_IFR_CLIENT_Export AttrDescriptionSeq
    : public
        ::TAO::unbounded_value_sequence< AttributeDescription>
  {
  public:
    AttrDescriptionSeq () = default;
    AttrDescriptionSeq ( ::CORBA::ULong max);
    AttrDescriptionSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      AttributeDescription* buffer,
      ::CORBA::Boolean release = false);
    AttrDescriptionSeq (const AttrDescriptionSeq &) = default;
    AttrDescriptionSeq (AttrDescriptionSeq &&) = default;
    AttrDescriptionSeq& operator= (const AttrDescriptionSeq &) = default;
    AttrDescriptionSeq& operator= (AttrDescriptionSeq &&) = default;
    virtual ~AttrDescriptionSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = AttrDescriptionSeq_var;
    using _out_type = AttrDescriptionSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_AttrDescriptionSeq;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_CORBA_EXTATTRDESCRIPTIONSEQ_CH_)
#define _CORBA_EXTATTRDESCRIPTIONSEQ_CH_

  class ExtAttrDescriptionSeq;
  typedef ::TAO_VarSeq_Var_T<ExtAttrDescriptionSeq> ExtAttrDescriptionSeq_var;
  typedef ::TAO_Seq_Out_T<ExtAttrDescriptionSeq> ExtAttrDescriptionSeq_out;
  

  class TAO_IFR_CLIENT_Export ExtAttrDescriptionSeq
    : public
        ::TAO::unbounded_value_sequence< ExtAttributeDescription>
  {
  public:
    ExtAttrDescriptionSeq () = default;
    ExtAttrDescriptionSeq ( ::CORBA::ULong max);
    ExtAttrDescriptionSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ExtAttributeDescription* buffer,
      ::CORBA::Boolean release = false);
    ExtAttrDescriptionSeq (const ExtAttrDescriptionSeq &) = default;
    ExtAttrDescriptionSeq (ExtAttrDescriptionSeq &&) = default;
    ExtAttrDescriptionSeq& operator= (const ExtAttrDescriptionSeq &) = default;
    ExtAttrDescriptionSeq& operator= (ExtAttrDescriptionSeq &&) = default;
    virtual ~ExtAttrDescriptionSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ExtAttrDescriptionSeq_var;
    using _out_type = ExtAttrDescriptionSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExtAttrDescriptionSeq;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_INTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_INTERFACEDEF__VAR_OUT_CH_

  class InterfaceDef;
  using InterfaceDef_ptr = InterfaceDef*;
  using InterfaceDef_var = TAO_Objref_Var_T<InterfaceDef>;
  using InterfaceDef_out = TAO_Objref_Out_T<InterfaceDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export InterfaceDef
    : public virtual ::CORBA::Container,
      public virtual ::CORBA::Contained,
      public virtual ::CORBA::IDLType
  
  {
  public:
    friend class TAO::Narrow_Utils<InterfaceDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = InterfaceDef_ptr;
    using _var_type = InterfaceDef_var;
    using _out_type = InterfaceDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static InterfaceDef_ptr _duplicate (InterfaceDef_ptr obj);

    static void _tao_release (InterfaceDef_ptr obj);

    static InterfaceDef_ptr _narrow (::CORBA::Object_ptr obj);
    static InterfaceDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static InterfaceDef_ptr _nil ();

    virtual ::CORBA::InterfaceDefSeq * base_interfaces ();

    virtual void base_interfaces (
      const ::CORBA::InterfaceDefSeq & base_interfaces);

    virtual ::CORBA::Boolean is_a (
      const char * interface_id);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct FullInterfaceDescription;
    using FullInterfaceDescription_var = ::TAO_Var_Var_T<FullInterfaceDescription>;
    using FullInterfaceDescription_out = ::TAO_Out_T<FullInterfaceDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export FullInterfaceDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = FullInterfaceDescription_var;
      using _out_type = FullInterfaceDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      CORBA::OpDescriptionSeq operations;
      CORBA::AttrDescriptionSeq attributes;
      CORBA::RepositoryIdSeq base_interfaces;
      ::CORBA::TypeCode_var type;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_FullInterfaceDescription;

    virtual ::CORBA::InterfaceDef::FullInterfaceDescription * describe_interface ();

    virtual ::CORBA::AttributeDef_ptr create_attribute (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr type,
      ::CORBA::AttributeMode mode);

    virtual ::CORBA::OperationDef_ptr create_operation (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr result,
      ::CORBA::OperationMode mode,
      const ::CORBA::ParDescriptionSeq & params,
      const ::CORBA::ExceptionDefSeq & exceptions,
      const ::CORBA::ContextIdSeq & contexts);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    InterfaceDef ();

    // Concrete non-local interface only.
    InterfaceDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    InterfaceDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~InterfaceDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    InterfaceDef (const InterfaceDef &) = delete;
    InterfaceDef (InterfaceDef &&) = delete;
    InterfaceDef &operator= (const InterfaceDef &) = delete;
    InterfaceDef &operator= (InterfaceDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_InterfaceDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct InterfaceDescription;
  using InterfaceDescription_var = ::TAO_Var_Var_T<InterfaceDescription>;
  using InterfaceDescription_out = ::TAO_Out_T<InterfaceDescription>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IFR_CLIENT_Export InterfaceDescription
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = InterfaceDescription_var;
    using _out_type = InterfaceDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager id;
    ::TAO::String_Manager defined_in;
    ::TAO::String_Manager version;
    CORBA::RepositoryIdSeq base_interfaces;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_InterfaceDescription;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_INTERFACEATTREXTENSION__VAR_OUT_CH_)
#define _CORBA_INTERFACEATTREXTENSION__VAR_OUT_CH_

  class InterfaceAttrExtension;
  using InterfaceAttrExtension_ptr = InterfaceAttrExtension*;
  using InterfaceAttrExtension_var = TAO_Objref_Var_T<InterfaceAttrExtension>;
  using InterfaceAttrExtension_out = TAO_Objref_Out_T<InterfaceAttrExtension>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export InterfaceAttrExtension
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<InterfaceAttrExtension>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = InterfaceAttrExtension_ptr;
    using _var_type = InterfaceAttrExtension_var;
    using _out_type = InterfaceAttrExtension_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static InterfaceAttrExtension_ptr _duplicate (InterfaceAttrExtension_ptr obj);

    static void _tao_release (InterfaceAttrExtension_ptr obj);

    static InterfaceAttrExtension_ptr _narrow (::CORBA::Object_ptr obj);
    static InterfaceAttrExtension_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static InterfaceAttrExtension_ptr _nil ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

    

    struct ExtFullInterfaceDescription;
    using ExtFullInterfaceDescription_var = ::TAO_Var_Var_T<ExtFullInterfaceDescription>;
    using ExtFullInterfaceDescription_out = ::TAO_Out_T<ExtFullInterfaceDescription>;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

    

    struct TAO_IFR_CLIENT_Export ExtFullInterfaceDescription
    {
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = ExtFullInterfaceDescription_var;
      using _out_type = ExtFullInterfaceDescription_out;

      static void _tao_any_destructor (void *);
      
      ::TAO::String_Manager name;
      ::TAO::String_Manager id;
      ::TAO::String_Manager defined_in;
      ::TAO::String_Manager version;
      CORBA::OpDescriptionSeq operations;
      CORBA::ExtAttrDescriptionSeq attributes;
      CORBA::RepositoryIdSeq base_interfaces;
      ::CORBA::TypeCode_var type;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_ExtFullInterfaceDescription;

    virtual ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription * describe_ext_interface ();

    virtual ::CORBA::ExtAttributeDef_ptr create_ext_attribute (
      const char * id,
      const char * name,
      const char * version,
      ::CORBA::IDLType_ptr type,
      ::CORBA::AttributeMode mode,
      const ::CORBA::ExceptionDefSeq & get_exceptions,
      const ::CORBA::ExceptionDefSeq & set_exceptions);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    InterfaceAttrExtension ();

    // Concrete non-local interface only.
    InterfaceAttrExtension (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    InterfaceAttrExtension (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~InterfaceAttrExtension () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    InterfaceAttrExtension (const InterfaceAttrExtension &) = delete;
    InterfaceAttrExtension (InterfaceAttrExtension &&) = delete;
    InterfaceAttrExtension &operator= (const InterfaceAttrExtension &) = delete;
    InterfaceAttrExtension &operator= (InterfaceAttrExtension &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_InterfaceAttrExtension;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_EXTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTINTERFACEDEF__VAR_OUT_CH_

  class ExtInterfaceDef;
  using ExtInterfaceDef_ptr = ExtInterfaceDef*;
  using ExtInterfaceDef_var = TAO_Objref_Var_T<ExtInterfaceDef>;
  using ExtInterfaceDef_out = TAO_Objref_Out_T<ExtInterfaceDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ExtInterfaceDef
    : public virtual ::CORBA::InterfaceDef,
      public virtual ::CORBA::InterfaceAttrExtension
  
  {
  public:
    friend class TAO::Narrow_Utils<ExtInterfaceDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ExtInterfaceDef_ptr;
    using _var_type = ExtInterfaceDef_var;
    using _out_type = ExtInterfaceDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ExtInterfaceDef_ptr _duplicate (ExtInterfaceDef_ptr obj);

    static void _tao_release (ExtInterfaceDef_ptr obj);

    static ExtInterfaceDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ExtInterfaceDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ExtInterfaceDef_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ExtInterfaceDef ();

    // Concrete non-local interface only.
    ExtInterfaceDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ExtInterfaceDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ExtInterfaceDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ExtInterfaceDef (const ExtInterfaceDef &) = delete;
    ExtInterfaceDef (ExtInterfaceDef &&) = delete;
    ExtInterfaceDef &operator= (const ExtInterfaceDef &) = delete;
    ExtInterfaceDef &operator= (ExtInterfaceDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_ABSTRACTINTERFACEDEF__VAR_OUT_CH_

  class AbstractInterfaceDef;
  using AbstractInterfaceDef_ptr = AbstractInterfaceDef*;
  using AbstractInterfaceDef_var = TAO_Objref_Var_T<AbstractInterfaceDef>;
  using AbstractInterfaceDef_out = TAO_Objref_Out_T<AbstractInterfaceDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export AbstractInterfaceDef
    : public virtual ::CORBA::InterfaceDef
  
  {
  public:
    friend class TAO::Narrow_Utils<AbstractInterfaceDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = AbstractInterfaceDef_ptr;
    using _var_type = AbstractInterfaceDef_var;
    using _out_type = AbstractInterfaceDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static AbstractInterfaceDef_ptr _duplicate (AbstractInterfaceDef_ptr obj);

    static void _tao_release (AbstractInterfaceDef_ptr obj);

    static AbstractInterfaceDef_ptr _narrow (::CORBA::Object_ptr obj);
    static AbstractInterfaceDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AbstractInterfaceDef_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    AbstractInterfaceDef ();

    // Concrete non-local interface only.
    AbstractInterfaceDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    AbstractInterfaceDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~AbstractInterfaceDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    AbstractInterfaceDef (const AbstractInterfaceDef &) = delete;
    AbstractInterfaceDef (AbstractInterfaceDef &&) = delete;
    AbstractInterfaceDef &operator= (const AbstractInterfaceDef &) = delete;
    AbstractInterfaceDef &operator= (AbstractInterfaceDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__VAR_OUT_CH_

  class ExtAbstractInterfaceDef;
  using ExtAbstractInterfaceDef_ptr = ExtAbstractInterfaceDef*;
  using ExtAbstractInterfaceDef_var = TAO_Objref_Var_T<ExtAbstractInterfaceDef>;
  using ExtAbstractInterfaceDef_out = TAO_Objref_Out_T<ExtAbstractInterfaceDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ExtAbstractInterfaceDef
    : public virtual ::CORBA::AbstractInterfaceDef,
      public virtual ::CORBA::InterfaceAttrExtension
  
  {
  public:
    friend class TAO::Narrow_Utils<ExtAbstractInterfaceDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ExtAbstractInterfaceDef_ptr;
    using _var_type = ExtAbstractInterfaceDef_var;
    using _out_type = ExtAbstractInterfaceDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ExtAbstractInterfaceDef_ptr _duplicate (ExtAbstractInterfaceDef_ptr obj);

    static void _tao_release (ExtAbstractInterfaceDef_ptr obj);

    static ExtAbstractInterfaceDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ExtAbstractInterfaceDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ExtAbstractInterfaceDef_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ExtAbstractInterfaceDef ();

    // Concrete non-local interface only.
    ExtAbstractInterfaceDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ExtAbstractInterfaceDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ExtAbstractInterfaceDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ExtAbstractInterfaceDef (const ExtAbstractInterfaceDef &) = delete;
    ExtAbstractInterfaceDef (ExtAbstractInterfaceDef &&) = delete;
    ExtAbstractInterfaceDef &operator= (const ExtAbstractInterfaceDef &) = delete;
    ExtAbstractInterfaceDef &operator= (ExtAbstractInterfaceDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_LOCALINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_LOCALINTERFACEDEF__VAR_OUT_CH_

  class LocalInterfaceDef;
  using LocalInterfaceDef_ptr = LocalInterfaceDef*;
  using LocalInterfaceDef_var = TAO_Objref_Var_T<LocalInterfaceDef>;
  using LocalInterfaceDef_out = TAO_Objref_Out_T<LocalInterfaceDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export LocalInterfaceDef
    : public virtual ::CORBA::InterfaceDef
  
  {
  public:
    friend class TAO::Narrow_Utils<LocalInterfaceDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = LocalInterfaceDef_ptr;
    using _var_type = LocalInterfaceDef_var;
    using _out_type = LocalInterfaceDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static LocalInterfaceDef_ptr _duplicate (LocalInterfaceDef_ptr obj);

    static void _tao_release (LocalInterfaceDef_ptr obj);

    static LocalInterfaceDef_ptr _narrow (::CORBA::Object_ptr obj);
    static LocalInterfaceDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static LocalInterfaceDef_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    LocalInterfaceDef ();

    // Concrete non-local interface only.
    LocalInterfaceDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    LocalInterfaceDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~LocalInterfaceDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    LocalInterfaceDef (const LocalInterfaceDef &) = delete;
    LocalInterfaceDef (LocalInterfaceDef &&) = delete;
    LocalInterfaceDef &operator= (const LocalInterfaceDef &) = delete;
    LocalInterfaceDef &operator= (LocalInterfaceDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDef;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTLOCALINTERFACEDEF__VAR_OUT_CH_

  class ExtLocalInterfaceDef;
  using ExtLocalInterfaceDef_ptr = ExtLocalInterfaceDef*;
  using ExtLocalInterfaceDef_var = TAO_Objref_Var_T<ExtLocalInterfaceDef>;
  using ExtLocalInterfaceDef_out = TAO_Objref_Out_T<ExtLocalInterfaceDef>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IFR_CLIENT_Export ExtLocalInterfaceDef
    : public virtual ::CORBA::LocalInterfaceDef,
      public virtual ::CORBA::InterfaceAttrExtension
  
  {
  public:
    friend class TAO::Narrow_Utils<ExtLocalInterfaceDef>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ExtLocalInterfaceDef_ptr;
    using _var_type = ExtLocalInterfaceDef_var;
    using _out_type = ExtLocalInterfaceDef_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ExtLocalInterfaceDef_ptr _duplicate (ExtLocalInterfaceDef_ptr obj);

    static void _tao_release (ExtLocalInterfaceDef_ptr obj);

    static ExtLocalInterfaceDef_ptr _narrow (::CORBA::Object_ptr obj);
    static ExtLocalInterfaceDef_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ExtLocalInterfaceDef_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ExtLocalInterfaceDef ();

    // Concrete non-local interface only.
    ExtLocalInterfaceDef (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ExtLocalInterfaceDef (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ExtLocalInterfaceDef () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ExtLocalInterfaceDef (const ExtLocalInterfaceDef &) = delete;
    ExtLocalInterfaceDef (ExtLocalInterfaceDef &&) = delete;
    ExtLocalInterfaceDef &operator= (const ExtLocalInterfaceDef &) = delete;
    ExtLocalInterfaceDef &operator= (ExtLocalInterfaceDef &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IFR_CLIENT_Export ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDef;


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module CORBA
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_PRIMITIVEDEF__ARG_TRAITS_)
#define _CORBA_PRIMITIVEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::PrimitiveDef>
    : public Object_Arg_Traits_T<
        ::CORBA::PrimitiveDef_ptr,
        ::CORBA::PrimitiveDef_var,
        ::CORBA::PrimitiveDef_out,
        TAO::Objref_Traits<CORBA::PrimitiveDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_STRINGDEF__ARG_TRAITS_)
#define _CORBA_STRINGDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::StringDef>
    : public Object_Arg_Traits_T<
        ::CORBA::StringDef_ptr,
        ::CORBA::StringDef_var,
        ::CORBA::StringDef_out,
        TAO::Objref_Traits<CORBA::StringDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_SEQUENCEDEF__ARG_TRAITS_)
#define _CORBA_SEQUENCEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::SequenceDef>
    : public Object_Arg_Traits_T<
        ::CORBA::SequenceDef_ptr,
        ::CORBA::SequenceDef_var,
        ::CORBA::SequenceDef_out,
        TAO::Objref_Traits<CORBA::SequenceDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_ARRAYDEF__ARG_TRAITS_)
#define _CORBA_ARRAYDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ArrayDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ArrayDef_ptr,
        ::CORBA::ArrayDef_var,
        ::CORBA::ArrayDef_out,
        TAO::Objref_Traits<CORBA::ArrayDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_WSTRINGDEF__ARG_TRAITS_)
#define _CORBA_WSTRINGDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::WstringDef>
    : public Object_Arg_Traits_T<
        ::CORBA::WstringDef_ptr,
        ::CORBA::WstringDef_var,
        ::CORBA::WstringDef_out,
        TAO::Objref_Traits<CORBA::WstringDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_FIXEDDEF__ARG_TRAITS_)
#define _CORBA_FIXEDDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::FixedDef>
    : public Object_Arg_Traits_T<
        ::CORBA::FixedDef_ptr,
        ::CORBA::FixedDef_var,
        ::CORBA::FixedDef_out,
        TAO::Objref_Traits<CORBA::FixedDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::CORBA::PrimitiveKind>
    : public
        Basic_Arg_Traits_T<
            ::CORBA::PrimitiveKind,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_REPOSITORY__ARG_TRAITS_)
#define _CORBA_REPOSITORY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::Repository>
    : public Object_Arg_Traits_T<
        ::CORBA::Repository_ptr,
        ::CORBA::Repository_var,
        ::CORBA::Repository_out,
        TAO::Objref_Traits<CORBA::Repository>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_MODULEDEF__ARG_TRAITS_)
#define _CORBA_MODULEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ModuleDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ModuleDef_ptr,
        ::CORBA::ModuleDef_var,
        ::CORBA::ModuleDef_out,
        TAO::Objref_Traits<CORBA::ModuleDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ModuleDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ModuleDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_CONSTANTDEF__ARG_TRAITS_)
#define _CORBA_CONSTANTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ConstantDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ConstantDef_ptr,
        ::CORBA::ConstantDef_var,
        ::CORBA::ConstantDef_out,
        TAO::Objref_Traits<CORBA::ConstantDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ConstantDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ConstantDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_STRUCTDEF__ARG_TRAITS_)
#define _CORBA_STRUCTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::StructDef>
    : public Object_Arg_Traits_T<
        ::CORBA::StructDef_ptr,
        ::CORBA::StructDef_var,
        ::CORBA::StructDef_out,
        TAO::Objref_Traits<CORBA::StructDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_UNIONDEF__ARG_TRAITS_)
#define _CORBA_UNIONDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::UnionDef>
    : public Object_Arg_Traits_T<
        ::CORBA::UnionDef_ptr,
        ::CORBA::UnionDef_var,
        ::CORBA::UnionDef_out,
        TAO::Objref_Traits<CORBA::UnionDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_ENUMDEF__ARG_TRAITS_)
#define _CORBA_ENUMDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::EnumDef>
    : public Object_Arg_Traits_T<
        ::CORBA::EnumDef_ptr,
        ::CORBA::EnumDef_var,
        ::CORBA::EnumDef_out,
        TAO::Objref_Traits<CORBA::EnumDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_ALIASDEF__ARG_TRAITS_)
#define _CORBA_ALIASDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::AliasDef>
    : public Object_Arg_Traits_T<
        ::CORBA::AliasDef_ptr,
        ::CORBA::AliasDef_var,
        ::CORBA::AliasDef_out,
        TAO::Objref_Traits<CORBA::AliasDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_NATIVEDEF__ARG_TRAITS_)
#define _CORBA_NATIVEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::NativeDef>
    : public Object_Arg_Traits_T<
        ::CORBA::NativeDef_ptr,
        ::CORBA::NativeDef_var,
        ::CORBA::NativeDef_out,
        TAO::Objref_Traits<CORBA::NativeDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_EXCEPTIONDEF__ARG_TRAITS_)
#define _CORBA_EXCEPTIONDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExceptionDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ExceptionDef_ptr,
        ::CORBA::ExceptionDef_var,
        ::CORBA::ExceptionDef_out,
        TAO::Objref_Traits<CORBA::ExceptionDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::ExceptionDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExceptionDefSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::CORBA::AttributeMode>
    : public
        Basic_Arg_Traits_T<
            ::CORBA::AttributeMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_ATTRIBUTEDEF__ARG_TRAITS_)
#define _CORBA_ATTRIBUTEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::AttributeDef>
    : public Object_Arg_Traits_T<
        ::CORBA::AttributeDef_ptr,
        ::CORBA::AttributeDef_var,
        ::CORBA::AttributeDef_out,
        TAO::Objref_Traits<CORBA::AttributeDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::AttributeDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::AttributeDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ExtAttributeDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtAttributeDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_)
#define _CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtAttributeDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ExtAttributeDef_ptr,
        ::CORBA::ExtAttributeDef_var,
        ::CORBA::ExtAttributeDef_out,
        TAO::Objref_Traits<CORBA::ExtAttributeDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::CORBA::OperationMode>
    : public
        Basic_Arg_Traits_T<
            ::CORBA::OperationMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::ParameterDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ParameterDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::ParDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ParDescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::ContextIdSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ContextIdSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_OPERATIONDEF__ARG_TRAITS_)
#define _CORBA_OPERATIONDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::OperationDef>
    : public Object_Arg_Traits_T<
        ::CORBA::OperationDef_ptr,
        ::CORBA::OperationDef_var,
        ::CORBA::OperationDef_out,
        TAO::Objref_Traits<CORBA::OperationDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::OperationDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::OperationDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::RepositoryIdSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::RepositoryIdSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::OpDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::OpDescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::AttrDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::AttrDescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::CORBA::ExtAttrDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::ExtAttrDescriptionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_INTERFACEDEF__ARG_TRAITS_)
#define _CORBA_INTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::InterfaceDef>
    : public Object_Arg_Traits_T<
        ::CORBA::InterfaceDef_ptr,
        ::CORBA::InterfaceDef_var,
        ::CORBA::InterfaceDef_out,
        TAO::Objref_Traits<CORBA::InterfaceDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::InterfaceDef::FullInterfaceDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::InterfaceDef::FullInterfaceDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::InterfaceDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::InterfaceDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_INTERFACEATTREXTENSION__ARG_TRAITS_)
#define _CORBA_INTERFACEATTREXTENSION__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::InterfaceAttrExtension>
    : public Object_Arg_Traits_T<
        ::CORBA::InterfaceAttrExtension_ptr,
        ::CORBA::InterfaceAttrExtension_var,
        ::CORBA::InterfaceAttrExtension_out,
        TAO::Objref_Traits<CORBA::InterfaceAttrExtension>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_EXTINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_EXTINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtInterfaceDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ExtInterfaceDef_ptr,
        ::CORBA::ExtInterfaceDef_var,
        ::CORBA::ExtInterfaceDef_out,
        TAO::Objref_Traits<CORBA::ExtInterfaceDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_ABSTRACTINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::AbstractInterfaceDef>
    : public Object_Arg_Traits_T<
        ::CORBA::AbstractInterfaceDef_ptr,
        ::CORBA::AbstractInterfaceDef_var,
        ::CORBA::AbstractInterfaceDef_out,
        TAO::Objref_Traits<CORBA::AbstractInterfaceDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtAbstractInterfaceDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ExtAbstractInterfaceDef_ptr,
        ::CORBA::ExtAbstractInterfaceDef_var,
        ::CORBA::ExtAbstractInterfaceDef_out,
        TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_LOCALINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_LOCALINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::LocalInterfaceDef>
    : public Object_Arg_Traits_T<
        ::CORBA::LocalInterfaceDef_ptr,
        ::CORBA::LocalInterfaceDef_var,
        ::CORBA::LocalInterfaceDef_out,
        TAO::Objref_Traits<CORBA::LocalInterfaceDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_EXTLOCALINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::ExtLocalInterfaceDef>
    : public Object_Arg_Traits_T<
        ::CORBA::ExtLocalInterfaceDef_ptr,
        ::CORBA::ExtLocalInterfaceDef_var,
        ::CORBA::ExtLocalInterfaceDef_out,
        TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CORBA_FIXEDDEF__TRAITS_)
#define _CORBA_FIXEDDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::FixedDef>
  {
    static ::CORBA::FixedDef_ptr duplicate (::CORBA::FixedDef_ptr p);
    static void release (::CORBA::FixedDef_ptr p);
    static ::CORBA::FixedDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::FixedDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_REPOSITORY__TRAITS_)
#define _CORBA_REPOSITORY__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::Repository>
  {
    static ::CORBA::Repository_ptr duplicate (::CORBA::Repository_ptr p);
    static void release (::CORBA::Repository_ptr p);
    static ::CORBA::Repository_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::Repository_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_MODULEDEF__TRAITS_)
#define _CORBA_MODULEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ModuleDef>
  {
    static ::CORBA::ModuleDef_ptr duplicate (::CORBA::ModuleDef_ptr p);
    static void release (::CORBA::ModuleDef_ptr p);
    static ::CORBA::ModuleDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ModuleDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_CONSTANTDEF__TRAITS_)
#define _CORBA_CONSTANTDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ConstantDef>
  {
    static ::CORBA::ConstantDef_ptr duplicate (::CORBA::ConstantDef_ptr p);
    static void release (::CORBA::ConstantDef_ptr p);
    static ::CORBA::ConstantDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ConstantDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_STRUCTDEF__TRAITS_)
#define _CORBA_STRUCTDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::StructDef>
  {
    static ::CORBA::StructDef_ptr duplicate (::CORBA::StructDef_ptr p);
    static void release (::CORBA::StructDef_ptr p);
    static ::CORBA::StructDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::StructDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_UNIONDEF__TRAITS_)
#define _CORBA_UNIONDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::UnionDef>
  {
    static ::CORBA::UnionDef_ptr duplicate (::CORBA::UnionDef_ptr p);
    static void release (::CORBA::UnionDef_ptr p);
    static ::CORBA::UnionDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::UnionDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ENUMDEF__TRAITS_)
#define _CORBA_ENUMDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::EnumDef>
  {
    static ::CORBA::EnumDef_ptr duplicate (::CORBA::EnumDef_ptr p);
    static void release (::CORBA::EnumDef_ptr p);
    static ::CORBA::EnumDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::EnumDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ALIASDEF__TRAITS_)
#define _CORBA_ALIASDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::AliasDef>
  {
    static ::CORBA::AliasDef_ptr duplicate (::CORBA::AliasDef_ptr p);
    static void release (::CORBA::AliasDef_ptr p);
    static ::CORBA::AliasDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::AliasDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_NATIVEDEF__TRAITS_)
#define _CORBA_NATIVEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::NativeDef>
  {
    static ::CORBA::NativeDef_ptr duplicate (::CORBA::NativeDef_ptr p);
    static void release (::CORBA::NativeDef_ptr p);
    static ::CORBA::NativeDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::NativeDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_PRIMITIVEDEF__TRAITS_)
#define _CORBA_PRIMITIVEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::PrimitiveDef>
  {
    static ::CORBA::PrimitiveDef_ptr duplicate (::CORBA::PrimitiveDef_ptr p);
    static void release (::CORBA::PrimitiveDef_ptr p);
    static ::CORBA::PrimitiveDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::PrimitiveDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_STRINGDEF__TRAITS_)
#define _CORBA_STRINGDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::StringDef>
  {
    static ::CORBA::StringDef_ptr duplicate (::CORBA::StringDef_ptr p);
    static void release (::CORBA::StringDef_ptr p);
    static ::CORBA::StringDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::StringDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_WSTRINGDEF__TRAITS_)
#define _CORBA_WSTRINGDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::WstringDef>
  {
    static ::CORBA::WstringDef_ptr duplicate (::CORBA::WstringDef_ptr p);
    static void release (::CORBA::WstringDef_ptr p);
    static ::CORBA::WstringDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::WstringDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCEDEF__TRAITS_)
#define _CORBA_SEQUENCEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::SequenceDef>
  {
    static ::CORBA::SequenceDef_ptr duplicate (::CORBA::SequenceDef_ptr p);
    static void release (::CORBA::SequenceDef_ptr p);
    static ::CORBA::SequenceDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::SequenceDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ARRAYDEF__TRAITS_)
#define _CORBA_ARRAYDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ArrayDef>
  {
    static ::CORBA::ArrayDef_ptr duplicate (::CORBA::ArrayDef_ptr p);
    static void release (::CORBA::ArrayDef_ptr p);
    static ::CORBA::ArrayDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ArrayDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXCEPTIONDEF__TRAITS_)
#define _CORBA_EXCEPTIONDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ExceptionDef>
  {
    static ::CORBA::ExceptionDef_ptr duplicate (::CORBA::ExceptionDef_ptr p);
    static void release (::CORBA::ExceptionDef_ptr p);
    static ::CORBA::ExceptionDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ExceptionDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ATTRIBUTEDEF__TRAITS_)
#define _CORBA_ATTRIBUTEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::AttributeDef>
  {
    static ::CORBA::AttributeDef_ptr duplicate (::CORBA::AttributeDef_ptr p);
    static void release (::CORBA::AttributeDef_ptr p);
    static ::CORBA::AttributeDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::AttributeDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTATTRIBUTEDEF__TRAITS_)
#define _CORBA_EXTATTRIBUTEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ExtAttributeDef>
  {
    static ::CORBA::ExtAttributeDef_ptr duplicate (::CORBA::ExtAttributeDef_ptr p);
    static void release (::CORBA::ExtAttributeDef_ptr p);
    static ::CORBA::ExtAttributeDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ExtAttributeDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_OPERATIONDEF__TRAITS_)
#define _CORBA_OPERATIONDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::OperationDef>
  {
    static ::CORBA::OperationDef_ptr duplicate (::CORBA::OperationDef_ptr p);
    static void release (::CORBA::OperationDef_ptr p);
    static ::CORBA::OperationDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::OperationDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_INTERFACEDEF__TRAITS_)
#define _CORBA_INTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::InterfaceDef>
  {
    static ::CORBA::InterfaceDef_ptr duplicate (::CORBA::InterfaceDef_ptr p);
    static void release (::CORBA::InterfaceDef_ptr p);
    static ::CORBA::InterfaceDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::InterfaceDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_INTERFACEATTREXTENSION__TRAITS_)
#define _CORBA_INTERFACEATTREXTENSION__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::InterfaceAttrExtension>
  {
    static ::CORBA::InterfaceAttrExtension_ptr duplicate (::CORBA::InterfaceAttrExtension_ptr p);
    static void release (::CORBA::InterfaceAttrExtension_ptr p);
    static ::CORBA::InterfaceAttrExtension_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::InterfaceAttrExtension_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTINTERFACEDEF__TRAITS_)
#define _CORBA_EXTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ExtInterfaceDef>
  {
    static ::CORBA::ExtInterfaceDef_ptr duplicate (::CORBA::ExtInterfaceDef_ptr p);
    static void release (::CORBA::ExtInterfaceDef_ptr p);
    static ::CORBA::ExtInterfaceDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ExtInterfaceDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__TRAITS_)
#define _CORBA_ABSTRACTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::AbstractInterfaceDef>
  {
    static ::CORBA::AbstractInterfaceDef_ptr duplicate (::CORBA::AbstractInterfaceDef_ptr p);
    static void release (::CORBA::AbstractInterfaceDef_ptr p);
    static ::CORBA::AbstractInterfaceDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::AbstractInterfaceDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__TRAITS_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ExtAbstractInterfaceDef>
  {
    static ::CORBA::ExtAbstractInterfaceDef_ptr duplicate (::CORBA::ExtAbstractInterfaceDef_ptr p);
    static void release (::CORBA::ExtAbstractInterfaceDef_ptr p);
    static ::CORBA::ExtAbstractInterfaceDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ExtAbstractInterfaceDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_LOCALINTERFACEDEF__TRAITS_)
#define _CORBA_LOCALINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::LocalInterfaceDef>
  {
    static ::CORBA::LocalInterfaceDef_ptr duplicate (::CORBA::LocalInterfaceDef_ptr p);
    static void release (::CORBA::LocalInterfaceDef_ptr p);
    static ::CORBA::LocalInterfaceDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::LocalInterfaceDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__TRAITS_)
#define _CORBA_EXTLOCALINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_CLIENT_Export Objref_Traits< ::CORBA::ExtLocalInterfaceDef>
  {
    static ::CORBA::ExtLocalInterfaceDef_ptr duplicate (::CORBA::ExtLocalInterfaceDef_ptr p);
    static void release (::CORBA::ExtLocalInterfaceDef_ptr p);
    static ::CORBA::ExtLocalInterfaceDef_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CORBA::ExtLocalInterfaceDef_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface_fwd\any_op_ch.cpp:48



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, FixedDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, FixedDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, FixedDef *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::FixedDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::FixedDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::FixedDef *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\any_op_ch.cpp:31



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  

  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::PrimitiveKind);
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::PrimitiveKind &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::PrimitiveKind);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::PrimitiveKind &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, Repository_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, Repository_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Repository_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::Repository_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::Repository_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::Repository_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ModuleDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ModuleDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ModuleDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ModuleDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ModuleDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ModuleDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ModuleDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ModuleDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ModuleDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ModuleDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ModuleDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ModuleDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ConstantDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ConstantDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ConstantDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ConstantDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ConstantDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ConstantDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ConstantDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ConstantDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ConstantDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ConstantDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ConstantDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ConstantDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, StructDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, StructDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StructDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::StructDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::StructDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::StructDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, UnionDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, UnionDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, UnionDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::UnionDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::UnionDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::UnionDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, EnumDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, EnumDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EnumDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::EnumDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::EnumDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::EnumDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, AliasDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, AliasDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AliasDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::AliasDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::AliasDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::AliasDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, NativeDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, NativeDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NativeDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::NativeDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::NativeDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::NativeDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, PrimitiveDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, PrimitiveDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PrimitiveDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::PrimitiveDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::PrimitiveDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::PrimitiveDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, StringDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, StringDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StringDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::StringDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::StringDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::StringDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, WstringDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, WstringDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, WstringDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::WstringDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::WstringDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::WstringDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, SequenceDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, SequenceDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SequenceDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::SequenceDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::SequenceDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::SequenceDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ArrayDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ArrayDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ArrayDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ArrayDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ArrayDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ArrayDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExceptionDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExceptionDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExceptionDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExceptionDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExceptionDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExceptionDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ExceptionDefSeq &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ExceptionDefSeq*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExceptionDefSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::ExceptionDefSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::ExceptionDefSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExceptionDefSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\any_op_ch.cpp:31



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  

  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::AttributeMode);
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::AttributeMode &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::AttributeMode);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::AttributeMode &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, AttributeDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, AttributeDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AttributeDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::AttributeDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::AttributeDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::AttributeDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::AttributeDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::AttributeDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::AttributeDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::AttributeDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::AttributeDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::AttributeDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ExtAttributeDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ExtAttributeDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtAttributeDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ExtAttributeDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtAttributeDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtAttributeDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtAttributeDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtAttributeDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtAttributeDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtAttributeDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtAttributeDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtAttributeDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\any_op_ch.cpp:31



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  

  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::OperationMode);
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::CORBA::OperationMode &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::OperationMode);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::OperationMode &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::ParameterDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::ParameterDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ParameterDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::ParameterDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ParameterDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ParameterDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ParDescriptionSeq &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ParDescriptionSeq*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ParDescriptionSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::ParDescriptionSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::ParDescriptionSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ParDescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ContextIdSeq &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ContextIdSeq*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ContextIdSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::ContextIdSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::ContextIdSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ContextIdSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, OperationDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, OperationDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OperationDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::OperationDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::OperationDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::OperationDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::OperationDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::OperationDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::OperationDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::OperationDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::OperationDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::OperationDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::RepositoryIdSeq &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::RepositoryIdSeq*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::RepositoryIdSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::RepositoryIdSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::RepositoryIdSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::RepositoryIdSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::OpDescriptionSeq &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::OpDescriptionSeq*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::OpDescriptionSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::OpDescriptionSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::OpDescriptionSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::OpDescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::AttrDescriptionSeq &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::AttrDescriptionSeq*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::AttrDescriptionSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::AttrDescriptionSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::AttrDescriptionSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::AttrDescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const ::CORBA::ExtAttrDescriptionSeq &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ::CORBA::ExtAttrDescriptionSeq*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::ExtAttrDescriptionSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, const CORBA::ExtAttrDescriptionSeq &); // copying version
TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, CORBA::ExtAttrDescriptionSeq*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::ExtAttrDescriptionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, InterfaceDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, InterfaceDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, InterfaceDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::InterfaceDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::InterfaceDef::FullInterfaceDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::InterfaceDef::FullInterfaceDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::InterfaceDef::FullInterfaceDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::InterfaceDef::FullInterfaceDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceDef::FullInterfaceDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::InterfaceDef::FullInterfaceDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::InterfaceDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::InterfaceDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::InterfaceDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::InterfaceDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::InterfaceDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, InterfaceAttrExtension_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, InterfaceAttrExtension_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, InterfaceAttrExtension_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceAttrExtension_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceAttrExtension_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::InterfaceAttrExtension_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &); // copying version
  TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription*); // noncopying version
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &); // copying version
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription*); // noncopying version
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtInterfaceDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtInterfaceDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtInterfaceDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtInterfaceDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtInterfaceDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtInterfaceDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, AbstractInterfaceDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, AbstractInterfaceDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AbstractInterfaceDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::AbstractInterfaceDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::AbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::AbstractInterfaceDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtAbstractInterfaceDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtAbstractInterfaceDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtAbstractInterfaceDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, LocalInterfaceDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, LocalInterfaceDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LocalInterfaceDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::LocalInterfaceDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::LocalInterfaceDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::LocalInterfaceDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtLocalInterfaceDef_ptr); // copying
  TAO_IFR_CLIENT_Export void operator<<= ( ::CORBA::Any &, ExtLocalInterfaceDef_ptr *); // non-copying
  TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtLocalInterfaceDef_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr); // copying
TAO_IFR_CLIENT_Export void operator<<= (::CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr *); // non-copying
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface_fwd\cdr_op_ch.cpp:46



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::FixedDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::FixedDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:33



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CORBA::PrimitiveKind _tao_enumerator);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::PrimitiveKind &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Repository_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Repository_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ModuleDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ModuleDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ModuleDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ModuleDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ConstantDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ConstantDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ConstantDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ConstantDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StructDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StructDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::UnionDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::UnionDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::EnumDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::EnumDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AliasDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AliasDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::NativeDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::NativeDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::PrimitiveDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PrimitiveDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StringDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StringDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::WstringDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::WstringDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::SequenceDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::SequenceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ArrayDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ArrayDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExceptionDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExceptionDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExceptionDefSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExceptionDefSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:33



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CORBA::AttributeMode _tao_enumerator);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::AttributeMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAttributeDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAttributeDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAttributeDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAttributeDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:33



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CORBA::OperationMode _tao_enumerator);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::OperationMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ParameterDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ParameterDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ParDescriptionSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ParDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_ContextIdSeq_H_
#define _TAO_CDR_OP_CORBA_ContextIdSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ContextIdSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ContextIdSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ContextIdSeq_H_ */


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_
#define _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::RepositoryIdSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::RepositoryIdSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::OpDescriptionSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::OpDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AttrDescriptionSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AttrDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAttrDescriptionSeq &_tao_sequence);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAttrDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_ */


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef::FullInterfaceDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef::FullInterfaceDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceAttrExtension_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceAttrExtension_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &);
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtInterfaceDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AbstractInterfaceDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AbstractInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAbstractInterfaceDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAbstractInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::LocalInterfaceDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::LocalInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IFR_CLIENT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtLocalInterfaceDef_ptr );
TAO_IFR_CLIENT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtLocalInterfaceDef_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "IFR_BasicC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

