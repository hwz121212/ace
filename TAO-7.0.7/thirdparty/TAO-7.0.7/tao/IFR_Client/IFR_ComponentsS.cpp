// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:622

#ifndef _TAO_IDL_IFR_COMPONENTSS_NNL7BA_CPP_
#define _TAO_IDL_IFR_COMPONENTSS_NNL7BA_CPP_


#include "IFR_ComponentsS.h"
#include "tao/PortableServer/Operation_Table_Dynamic_Hash.h"
#include "tao/PortableServer/Upcall_Command.h"
#include "tao/PortableServer/Upcall_Wrapper.h"
#include "tao/TAO_Server_Request.h"
#include "tao/ORB_Core.h"
#include "tao/Profile.h"
#include "tao/Stub.h"
#include "tao/IFR_Client_Adapter.h"
#include "tao/Object_T.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/DynamicC.h"
#include "tao/CDR.h"
#include "tao/operation_details.h"
#include "tao/PortableInterceptor.h"
#include "ace/Dynamic_Service.h"
#include "ace/Malloc_Allocator.h"
#include "cstring"

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



static const TAO_operation_db_entry CORBA_ComponentIR_EventDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::EventDef::destroy_skel), nullptr},
  {"lookup", std::addressof(POA_CORBA::ComponentIR::EventDef::lookup_skel), nullptr},
  {"contents", std::addressof(POA_CORBA::ComponentIR::EventDef::contents_skel), nullptr},
  {"lookup_name", std::addressof(POA_CORBA::ComponentIR::EventDef::lookup_name_skel), nullptr},
  {"describe_contents", std::addressof(POA_CORBA::ComponentIR::EventDef::describe_contents_skel), nullptr},
  {"create_module", std::addressof(POA_CORBA::ComponentIR::EventDef::create_module_skel), nullptr},
  {"create_constant", std::addressof(POA_CORBA::ComponentIR::EventDef::create_constant_skel), nullptr},
  {"create_struct", std::addressof(POA_CORBA::ComponentIR::EventDef::create_struct_skel), nullptr},
  {"create_union", std::addressof(POA_CORBA::ComponentIR::EventDef::create_union_skel), nullptr},
  {"create_enum", std::addressof(POA_CORBA::ComponentIR::EventDef::create_enum_skel), nullptr},
  {"create_alias", std::addressof(POA_CORBA::ComponentIR::EventDef::create_alias_skel), nullptr},
  {"create_interface", std::addressof(POA_CORBA::ComponentIR::EventDef::create_interface_skel), nullptr},
  {"create_value", std::addressof(POA_CORBA::ComponentIR::EventDef::create_value_skel), nullptr},
  {"create_value_box", std::addressof(POA_CORBA::ComponentIR::EventDef::create_value_box_skel), nullptr},
  {"create_exception", std::addressof(POA_CORBA::ComponentIR::EventDef::create_exception_skel), nullptr},
  {"create_native", std::addressof(POA_CORBA::ComponentIR::EventDef::create_native_skel), nullptr},
  {"create_abstract_interface", std::addressof(POA_CORBA::ComponentIR::EventDef::create_abstract_interface_skel), nullptr},
  {"create_local_interface", std::addressof(POA_CORBA::ComponentIR::EventDef::create_local_interface_skel), nullptr},
  {"create_ext_value", std::addressof(POA_CORBA::ComponentIR::EventDef::create_ext_value_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::EventDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::EventDef::move_skel), nullptr},
  {"_get_type", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_type_skel), nullptr},
  {"_get_supported_interfaces", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_supported_interfaces_skel), nullptr},
  {"_set_supported_interfaces", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_supported_interfaces_skel), nullptr},
  {"_get_initializers", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_initializers_skel), nullptr},
  {"_set_initializers", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_initializers_skel), nullptr},
  {"_get_base_value", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_base_value_skel), nullptr},
  {"_set_base_value", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_base_value_skel), nullptr},
  {"_get_abstract_base_values", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_abstract_base_values_skel), nullptr},
  {"_set_abstract_base_values", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_abstract_base_values_skel), nullptr},
  {"_get_is_abstract", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_is_abstract_skel), nullptr},
  {"_set_is_abstract", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_is_abstract_skel), nullptr},
  {"_get_is_custom", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_is_custom_skel), nullptr},
  {"_set_is_custom", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_is_custom_skel), nullptr},
  {"_get_is_truncatable", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_is_truncatable_skel), nullptr},
  {"_set_is_truncatable", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_is_truncatable_skel), nullptr},
  {"is_a", std::addressof(POA_CORBA::ComponentIR::EventDef::is_a_skel), nullptr},
  {"describe_value", std::addressof(POA_CORBA::ComponentIR::EventDef::describe_value_skel), nullptr},
  {"create_value_member", std::addressof(POA_CORBA::ComponentIR::EventDef::create_value_member_skel), nullptr},
  {"create_attribute", std::addressof(POA_CORBA::ComponentIR::EventDef::create_attribute_skel), nullptr},
  {"create_operation", std::addressof(POA_CORBA::ComponentIR::EventDef::create_operation_skel), nullptr},
  {"_get_ext_initializers", std::addressof(POA_CORBA::ComponentIR::EventDef::_get_ext_initializers_skel), nullptr},
  {"_set_ext_initializers", std::addressof(POA_CORBA::ComponentIR::EventDef::_set_ext_initializers_skel), nullptr},
  {"describe_ext_value", std::addressof(POA_CORBA::ComponentIR::EventDef::describe_ext_value_skel), nullptr},
  {"create_ext_attribute", std::addressof(POA_CORBA::ComponentIR::EventDef::create_ext_attribute_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_EventDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (180);
static char _tao_CORBA_ComponentIR_EventDef_optable_pool [_tao_CORBA_ComponentIR_EventDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_EventDef_allocator (_tao_CORBA_ComponentIR_EventDef_optable_pool, _tao_CORBA_ComponentIR_EventDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_EventDef_optable (
    CORBA_ComponentIR_EventDef_operations,
    60,
    120,
    &_tao_CORBA_ComponentIR_EventDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::EventDef::EventDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_EventDef_optable);
}

POA_CORBA::ComponentIR::EventDef::EventDef (const EventDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Container (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::IDLType (rhs),
    POA_CORBA::ValueDef (rhs),
    POA_CORBA::ExtValueDef (rhs)
{
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::EventDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/IDLType:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ValueDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ExtValueDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/EventDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::EventDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/EventDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::EventDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::EventDef *
POA_CORBA::ComponentIR::EventDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::EventDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_Container_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::Container::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::Container::destroy_skel), nullptr},
  {"lookup", std::addressof(POA_CORBA::ComponentIR::Container::lookup_skel), nullptr},
  {"contents", std::addressof(POA_CORBA::ComponentIR::Container::contents_skel), nullptr},
  {"lookup_name", std::addressof(POA_CORBA::ComponentIR::Container::lookup_name_skel), nullptr},
  {"describe_contents", std::addressof(POA_CORBA::ComponentIR::Container::describe_contents_skel), nullptr},
  {"create_module", std::addressof(POA_CORBA::ComponentIR::Container::create_module_skel), nullptr},
  {"create_constant", std::addressof(POA_CORBA::ComponentIR::Container::create_constant_skel), nullptr},
  {"create_struct", std::addressof(POA_CORBA::ComponentIR::Container::create_struct_skel), nullptr},
  {"create_union", std::addressof(POA_CORBA::ComponentIR::Container::create_union_skel), nullptr},
  {"create_enum", std::addressof(POA_CORBA::ComponentIR::Container::create_enum_skel), nullptr},
  {"create_alias", std::addressof(POA_CORBA::ComponentIR::Container::create_alias_skel), nullptr},
  {"create_interface", std::addressof(POA_CORBA::ComponentIR::Container::create_interface_skel), nullptr},
  {"create_value", std::addressof(POA_CORBA::ComponentIR::Container::create_value_skel), nullptr},
  {"create_value_box", std::addressof(POA_CORBA::ComponentIR::Container::create_value_box_skel), nullptr},
  {"create_exception", std::addressof(POA_CORBA::ComponentIR::Container::create_exception_skel), nullptr},
  {"create_native", std::addressof(POA_CORBA::ComponentIR::Container::create_native_skel), nullptr},
  {"create_abstract_interface", std::addressof(POA_CORBA::ComponentIR::Container::create_abstract_interface_skel), nullptr},
  {"create_local_interface", std::addressof(POA_CORBA::ComponentIR::Container::create_local_interface_skel), nullptr},
  {"create_ext_value", std::addressof(POA_CORBA::ComponentIR::Container::create_ext_value_skel), nullptr},
  {"create_component", std::addressof(POA_CORBA::ComponentIR::Container::create_component_skel), nullptr},
  {"create_home", std::addressof(POA_CORBA::ComponentIR::Container::create_home_skel), nullptr},
  {"create_event", std::addressof(POA_CORBA::ComponentIR::Container::create_event_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_Container_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (84);
static char _tao_CORBA_ComponentIR_Container_optable_pool [_tao_CORBA_ComponentIR_Container_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_Container_allocator (_tao_CORBA_ComponentIR_Container_optable_pool, _tao_CORBA_ComponentIR_Container_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_Container_optable (
    CORBA_ComponentIR_Container_operations,
    28,
    56,
    &_tao_CORBA_ComponentIR_Container_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::Container::Container ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_Container_optable);
}

POA_CORBA::ComponentIR::Container::Container (const Container& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Container (rhs)
{
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_component_Container
      : public TAO::Upcall_Command
    {
    public:
      inline create_component_Container (
        POA_CORBA::ComponentIR::Container * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::ComponentDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::ComponentDef> (
            this->operation_details_,
            this->args_,
            4);
          
        TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_type arg_5 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDefSeq> (
            this->operation_details_,
            this->args_,
            5);
          
        retval =
          this->servant_->create_component (
            arg_1
            , arg_2
            , arg_3
            , arg_4
            , arg_5);
      }
    
    private:
      POA_CORBA::ComponentIR::Container * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::Container::create_component_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_val _tao_base_component;
  TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supports_interfaces;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_base_component),
      std::addressof(_tao_supports_interfaces)
    };
  
  POA_CORBA::ComponentIR::Container * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::Container *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_component_Container command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 6
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_home_Container
      : public TAO::Upcall_Command
    {
    public:
      inline create_home_Container (
        POA_CORBA::ComponentIR::Container * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::HomeDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::HomeDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::ComponentIR::HomeDef>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::HomeDef> (
            this->operation_details_,
            this->args_,
            4);
          
        TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_type arg_5 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::ComponentDef> (
            this->operation_details_,
            this->args_,
            5);
          
        TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_type arg_6 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDefSeq> (
            this->operation_details_,
            this->args_,
            6);
          
        TAO::SArg_Traits< ::CORBA::ValueDef>::in_arg_type arg_7 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ValueDef> (
            this->operation_details_,
            this->args_,
            7);
          
        retval =
          this->servant_->create_home (
            arg_1
            , arg_2
            , arg_3
            , arg_4
            , arg_5
            , arg_6
            , arg_7);
      }
    
    private:
      POA_CORBA::ComponentIR::Container * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::Container::create_home_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::HomeDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::ComponentIR::HomeDef>::in_arg_val _tao_base_home;
  TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_val _tao_managed_component;
  TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supports_interfaces;
  TAO::SArg_Traits< ::CORBA::ValueDef>::in_arg_val _tao_primary_key;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_base_home),
      std::addressof(_tao_managed_component),
      std::addressof(_tao_supports_interfaces),
      std::addressof(_tao_primary_key)
    };
  
  POA_CORBA::ComponentIR::Container * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::Container *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_home_Container command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 8
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_event_Container
      : public TAO::Upcall_Command
    {
    public:
      inline create_event_Container (
        POA_CORBA::ComponentIR::Container * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::EventDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
            this->operation_details_,
            this->args_,
            4);
          
        TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_5 =
          TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
            this->operation_details_,
            this->args_,
            5);
          
        TAO::SArg_Traits< ::CORBA::ValueDef>::in_arg_type arg_6 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ValueDef> (
            this->operation_details_,
            this->args_,
            6);
          
        TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_7 =
          TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
            this->operation_details_,
            this->args_,
            7);
          
        TAO::SArg_Traits< ::CORBA::ValueDefSeq>::in_arg_type arg_8 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ValueDefSeq> (
            this->operation_details_,
            this->args_,
            8);
          
        TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_type arg_9 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDefSeq> (
            this->operation_details_,
            this->args_,
            9);
          
        TAO::SArg_Traits< ::CORBA::ExtInitializerSeq>::in_arg_type arg_10 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ExtInitializerSeq> (
            this->operation_details_,
            this->args_,
            10);
          
        retval =
          this->servant_->create_event (
            arg_1
            , arg_2
            , arg_3
            , arg_4
            , arg_5
            , arg_6
            , arg_7
            , arg_8
            , arg_9
            , arg_10);
      }
    
    private:
      POA_CORBA::ComponentIR::Container * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::Container::create_event_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_custom;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_abstract;
  TAO::SArg_Traits< ::CORBA::ValueDef>::in_arg_val _tao_base_value;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_truncatable;
  TAO::SArg_Traits< ::CORBA::ValueDefSeq>::in_arg_val _tao_abstract_base_values;
  TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supported_interfaces;
  TAO::SArg_Traits< ::CORBA::ExtInitializerSeq>::in_arg_val _tao_initializers;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_is_custom),
      std::addressof(_tao_is_abstract),
      std::addressof(_tao_base_value),
      std::addressof(_tao_is_truncatable),
      std::addressof(_tao_abstract_base_values),
      std::addressof(_tao_supported_interfaces),
      std::addressof(_tao_initializers)
    };
  
  POA_CORBA::ComponentIR::Container * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::Container *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_event_Container command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 11
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::Container::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::Container::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/Container:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::Container::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::Container *
POA_CORBA::ComponentIR::Container::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::Container>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_ModuleDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::ModuleDef::destroy_skel), nullptr},
  {"lookup", std::addressof(POA_CORBA::ComponentIR::ModuleDef::lookup_skel), nullptr},
  {"contents", std::addressof(POA_CORBA::ComponentIR::ModuleDef::contents_skel), nullptr},
  {"lookup_name", std::addressof(POA_CORBA::ComponentIR::ModuleDef::lookup_name_skel), nullptr},
  {"describe_contents", std::addressof(POA_CORBA::ComponentIR::ModuleDef::describe_contents_skel), nullptr},
  {"create_module", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_module_skel), nullptr},
  {"create_constant", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_constant_skel), nullptr},
  {"create_struct", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_struct_skel), nullptr},
  {"create_union", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_union_skel), nullptr},
  {"create_enum", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_enum_skel), nullptr},
  {"create_alias", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_alias_skel), nullptr},
  {"create_interface", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_interface_skel), nullptr},
  {"create_value", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_value_skel), nullptr},
  {"create_value_box", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_value_box_skel), nullptr},
  {"create_exception", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_exception_skel), nullptr},
  {"create_native", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_native_skel), nullptr},
  {"create_abstract_interface", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_abstract_interface_skel), nullptr},
  {"create_local_interface", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_local_interface_skel), nullptr},
  {"create_ext_value", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_ext_value_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::ModuleDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::ModuleDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::ModuleDef::move_skel), nullptr},
  {"create_component", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_component_skel), nullptr},
  {"create_home", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_home_skel), nullptr},
  {"create_event", std::addressof(POA_CORBA::ComponentIR::ModuleDef::create_event_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_ModuleDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (117);
static char _tao_CORBA_ComponentIR_ModuleDef_optable_pool [_tao_CORBA_ComponentIR_ModuleDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_ModuleDef_allocator (_tao_CORBA_ComponentIR_ModuleDef_optable_pool, _tao_CORBA_ComponentIR_ModuleDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_ModuleDef_optable (
    CORBA_ComponentIR_ModuleDef_operations,
    39,
    78,
    &_tao_CORBA_ComponentIR_ModuleDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::ModuleDef::ModuleDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_ModuleDef_optable);
}

POA_CORBA::ComponentIR::ModuleDef::ModuleDef (const ModuleDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Container (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::ModuleDef (rhs),
    POA_CORBA::ComponentIR::Container (rhs)
{
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::ModuleDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ModuleDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/ModuleDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::ModuleDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/ModuleDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::ModuleDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::ModuleDef *
POA_CORBA::ComponentIR::ModuleDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::ModuleDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_Repository_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::Repository::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::Repository::destroy_skel), nullptr},
  {"lookup", std::addressof(POA_CORBA::ComponentIR::Repository::lookup_skel), nullptr},
  {"contents", std::addressof(POA_CORBA::ComponentIR::Repository::contents_skel), nullptr},
  {"lookup_name", std::addressof(POA_CORBA::ComponentIR::Repository::lookup_name_skel), nullptr},
  {"describe_contents", std::addressof(POA_CORBA::ComponentIR::Repository::describe_contents_skel), nullptr},
  {"create_module", std::addressof(POA_CORBA::ComponentIR::Repository::create_module_skel), nullptr},
  {"create_constant", std::addressof(POA_CORBA::ComponentIR::Repository::create_constant_skel), nullptr},
  {"create_struct", std::addressof(POA_CORBA::ComponentIR::Repository::create_struct_skel), nullptr},
  {"create_union", std::addressof(POA_CORBA::ComponentIR::Repository::create_union_skel), nullptr},
  {"create_enum", std::addressof(POA_CORBA::ComponentIR::Repository::create_enum_skel), nullptr},
  {"create_alias", std::addressof(POA_CORBA::ComponentIR::Repository::create_alias_skel), nullptr},
  {"create_interface", std::addressof(POA_CORBA::ComponentIR::Repository::create_interface_skel), nullptr},
  {"create_value", std::addressof(POA_CORBA::ComponentIR::Repository::create_value_skel), nullptr},
  {"create_value_box", std::addressof(POA_CORBA::ComponentIR::Repository::create_value_box_skel), nullptr},
  {"create_exception", std::addressof(POA_CORBA::ComponentIR::Repository::create_exception_skel), nullptr},
  {"create_native", std::addressof(POA_CORBA::ComponentIR::Repository::create_native_skel), nullptr},
  {"create_abstract_interface", std::addressof(POA_CORBA::ComponentIR::Repository::create_abstract_interface_skel), nullptr},
  {"create_local_interface", std::addressof(POA_CORBA::ComponentIR::Repository::create_local_interface_skel), nullptr},
  {"create_ext_value", std::addressof(POA_CORBA::ComponentIR::Repository::create_ext_value_skel), nullptr},
  {"lookup_id", std::addressof(POA_CORBA::ComponentIR::Repository::lookup_id_skel), nullptr},
  {"get_canonical_typecode", std::addressof(POA_CORBA::ComponentIR::Repository::get_canonical_typecode_skel), nullptr},
  {"get_primitive", std::addressof(POA_CORBA::ComponentIR::Repository::get_primitive_skel), nullptr},
  {"create_string", std::addressof(POA_CORBA::ComponentIR::Repository::create_string_skel), nullptr},
  {"create_wstring", std::addressof(POA_CORBA::ComponentIR::Repository::create_wstring_skel), nullptr},
  {"create_sequence", std::addressof(POA_CORBA::ComponentIR::Repository::create_sequence_skel), nullptr},
  {"create_array", std::addressof(POA_CORBA::ComponentIR::Repository::create_array_skel), nullptr},
  {"create_fixed", std::addressof(POA_CORBA::ComponentIR::Repository::create_fixed_skel), nullptr},
  {"create_component", std::addressof(POA_CORBA::ComponentIR::Repository::create_component_skel), nullptr},
  {"create_home", std::addressof(POA_CORBA::ComponentIR::Repository::create_home_skel), nullptr},
  {"create_event", std::addressof(POA_CORBA::ComponentIR::Repository::create_event_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_Repository_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (108);
static char _tao_CORBA_ComponentIR_Repository_optable_pool [_tao_CORBA_ComponentIR_Repository_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_Repository_allocator (_tao_CORBA_ComponentIR_Repository_optable_pool, _tao_CORBA_ComponentIR_Repository_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_Repository_optable (
    CORBA_ComponentIR_Repository_operations,
    36,
    72,
    &_tao_CORBA_ComponentIR_Repository_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::Repository::Repository ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_Repository_optable);
}

POA_CORBA::ComponentIR::Repository::Repository (const Repository& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Container (rhs),
    POA_CORBA::Repository (rhs),
    POA_CORBA::ComponentIR::Container (rhs)
{
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::Repository::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Repository:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/Repository:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::Repository::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/Repository:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::Repository::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::Repository *
POA_CORBA::ComponentIR::Repository::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::Repository>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_ProvidesDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::destroy_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::move_skel), nullptr},
  {"_get_interface_type", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_get_interface_type_skel), nullptr},
  {"_set_interface_type", std::addressof(POA_CORBA::ComponentIR::ProvidesDef::_set_interface_type_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_ProvidesDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (60);
static char _tao_CORBA_ComponentIR_ProvidesDef_optable_pool [_tao_CORBA_ComponentIR_ProvidesDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_ProvidesDef_allocator (_tao_CORBA_ComponentIR_ProvidesDef_optable_pool, _tao_CORBA_ComponentIR_ProvidesDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_ProvidesDef_optable (
    CORBA_ComponentIR_ProvidesDef_operations,
    20,
    40,
    &_tao_CORBA_ComponentIR_ProvidesDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::ProvidesDef::ProvidesDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_ProvidesDef_optable);
}

POA_CORBA::ComponentIR::ProvidesDef::ProvidesDef (const ProvidesDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Contained (rhs)
{
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_interface_type_ProvidesDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_interface_type_ProvidesDef (
        POA_CORBA::ComponentIR::ProvidesDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::InterfaceDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::InterfaceDef> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->interface_type ();
      }
    
    private:
      POA_CORBA::ComponentIR::ProvidesDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ProvidesDef::_get_interface_type_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::InterfaceDef>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::ProvidesDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ProvidesDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_interface_type_ProvidesDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_interface_type_ProvidesDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_interface_type_ProvidesDef (
        POA_CORBA::ComponentIR::ProvidesDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::InterfaceDef>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDef> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->interface_type (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::ProvidesDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ProvidesDef::_set_interface_type_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::InterfaceDef>::in_arg_val _tao_interface_type;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_interface_type)
    };
  
  POA_CORBA::ComponentIR::ProvidesDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ProvidesDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_interface_type_ProvidesDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::ProvidesDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/ProvidesDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::ProvidesDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/ProvidesDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::ProvidesDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::ProvidesDef *
POA_CORBA::ComponentIR::ProvidesDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::ProvidesDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_UsesDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::UsesDef::destroy_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::UsesDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::UsesDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::UsesDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::UsesDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::UsesDef::move_skel), nullptr},
  {"_get_interface_type", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_interface_type_skel), nullptr},
  {"_set_interface_type", std::addressof(POA_CORBA::ComponentIR::UsesDef::_set_interface_type_skel), nullptr},
  {"_get_is_multiple", std::addressof(POA_CORBA::ComponentIR::UsesDef::_get_is_multiple_skel), nullptr},
  {"_set_is_multiple", std::addressof(POA_CORBA::ComponentIR::UsesDef::_set_is_multiple_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_UsesDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (66);
static char _tao_CORBA_ComponentIR_UsesDef_optable_pool [_tao_CORBA_ComponentIR_UsesDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_UsesDef_allocator (_tao_CORBA_ComponentIR_UsesDef_optable_pool, _tao_CORBA_ComponentIR_UsesDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_UsesDef_optable (
    CORBA_ComponentIR_UsesDef_operations,
    22,
    44,
    &_tao_CORBA_ComponentIR_UsesDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::UsesDef::UsesDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_UsesDef_optable);
}

POA_CORBA::ComponentIR::UsesDef::UsesDef (const UsesDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Contained (rhs)
{
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_interface_type_UsesDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_interface_type_UsesDef (
        POA_CORBA::ComponentIR::UsesDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::InterfaceDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::InterfaceDef> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->interface_type ();
      }
    
    private:
      POA_CORBA::ComponentIR::UsesDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::UsesDef::_get_interface_type_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::InterfaceDef>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::UsesDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::UsesDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_interface_type_UsesDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_interface_type_UsesDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_interface_type_UsesDef (
        POA_CORBA::ComponentIR::UsesDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::InterfaceDef>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDef> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->interface_type (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::UsesDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::UsesDef::_set_interface_type_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::InterfaceDef>::in_arg_val _tao_interface_type;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_interface_type)
    };
  
  POA_CORBA::ComponentIR::UsesDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::UsesDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_interface_type_UsesDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_is_multiple_UsesDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_is_multiple_UsesDef (
        POA_CORBA::ComponentIR::UsesDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::ACE_InputCDR::to_boolean> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->is_multiple ();
      }
    
    private:
      POA_CORBA::ComponentIR::UsesDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::UsesDef::_get_is_multiple_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::UsesDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::UsesDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_is_multiple_UsesDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_is_multiple_UsesDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_is_multiple_UsesDef (
        POA_CORBA::ComponentIR::UsesDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->is_multiple (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::UsesDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::UsesDef::_set_is_multiple_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_multiple;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_is_multiple)
    };
  
  POA_CORBA::ComponentIR::UsesDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::UsesDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_is_multiple_UsesDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::UsesDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/UsesDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::UsesDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/UsesDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::UsesDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::UsesDef *
POA_CORBA::ComponentIR::UsesDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::UsesDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_EventPortDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::EventPortDef::destroy_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::EventPortDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::EventPortDef::move_skel), nullptr},
  {"_get_event", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_get_event_skel), nullptr},
  {"_set_event", std::addressof(POA_CORBA::ComponentIR::EventPortDef::_set_event_skel), nullptr},
  {"is_a", std::addressof(POA_CORBA::ComponentIR::EventPortDef::is_a_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_EventPortDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (63);
static char _tao_CORBA_ComponentIR_EventPortDef_optable_pool [_tao_CORBA_ComponentIR_EventPortDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_EventPortDef_allocator (_tao_CORBA_ComponentIR_EventPortDef_optable_pool, _tao_CORBA_ComponentIR_EventPortDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_EventPortDef_optable (
    CORBA_ComponentIR_EventPortDef_operations,
    21,
    42,
    &_tao_CORBA_ComponentIR_EventPortDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::EventPortDef::EventPortDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_EventPortDef_optable);
}

POA_CORBA::ComponentIR::EventPortDef::EventPortDef (const EventPortDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Contained (rhs)
{
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_event_EventPortDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_event_EventPortDef (
        POA_CORBA::ComponentIR::EventPortDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::EventDef> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->event ();
      }
    
    private:
      POA_CORBA::ComponentIR::EventPortDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::EventPortDef::_get_event_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::EventPortDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::EventPortDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_event_EventPortDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_event_EventPortDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_event_EventPortDef (
        POA_CORBA::ComponentIR::EventPortDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::EventDef> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->event (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::EventPortDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::EventPortDef::_set_event_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_val _tao_event;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_event)
    };
  
  POA_CORBA::ComponentIR::EventPortDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::EventPortDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_event_EventPortDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class is_a_EventPortDef
      : public TAO::Upcall_Command
    {
    public:
      inline is_a_EventPortDef (
        POA_CORBA::ComponentIR::EventPortDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::ACE_InputCDR::to_boolean> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        retval =
          this->servant_->is_a (
            arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::EventPortDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::EventPortDef::is_a_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_event_id;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_event_id)
    };
  
  POA_CORBA::ComponentIR::EventPortDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::EventPortDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  is_a_EventPortDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::EventPortDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::EventPortDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::EventPortDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::EventPortDef *
POA_CORBA::ComponentIR::EventPortDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::EventPortDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_EmitsDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::EmitsDef::destroy_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::EmitsDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::EmitsDef::move_skel), nullptr},
  {"_get_event", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_get_event_skel), nullptr},
  {"_set_event", std::addressof(POA_CORBA::ComponentIR::EmitsDef::_set_event_skel), nullptr},
  {"is_a", std::addressof(POA_CORBA::ComponentIR::EmitsDef::is_a_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_EmitsDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (63);
static char _tao_CORBA_ComponentIR_EmitsDef_optable_pool [_tao_CORBA_ComponentIR_EmitsDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_EmitsDef_allocator (_tao_CORBA_ComponentIR_EmitsDef_optable_pool, _tao_CORBA_ComponentIR_EmitsDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_EmitsDef_optable (
    CORBA_ComponentIR_EmitsDef_operations,
    21,
    42,
    &_tao_CORBA_ComponentIR_EmitsDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::EmitsDef::EmitsDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_EmitsDef_optable);
}

POA_CORBA::ComponentIR::EmitsDef::EmitsDef (const EmitsDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::ComponentIR::EventPortDef (rhs)
{
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::EmitsDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/EmitsDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::EmitsDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/EmitsDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::EmitsDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::EmitsDef *
POA_CORBA::ComponentIR::EmitsDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::EmitsDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_PublishesDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::PublishesDef::destroy_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::PublishesDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::PublishesDef::move_skel), nullptr},
  {"_get_event", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_get_event_skel), nullptr},
  {"_set_event", std::addressof(POA_CORBA::ComponentIR::PublishesDef::_set_event_skel), nullptr},
  {"is_a", std::addressof(POA_CORBA::ComponentIR::PublishesDef::is_a_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_PublishesDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (63);
static char _tao_CORBA_ComponentIR_PublishesDef_optable_pool [_tao_CORBA_ComponentIR_PublishesDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_PublishesDef_allocator (_tao_CORBA_ComponentIR_PublishesDef_optable_pool, _tao_CORBA_ComponentIR_PublishesDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_PublishesDef_optable (
    CORBA_ComponentIR_PublishesDef_operations,
    21,
    42,
    &_tao_CORBA_ComponentIR_PublishesDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::PublishesDef::PublishesDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_PublishesDef_optable);
}

POA_CORBA::ComponentIR::PublishesDef::PublishesDef (const PublishesDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::ComponentIR::EventPortDef (rhs)
{
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::PublishesDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/PublishesDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::PublishesDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/PublishesDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::PublishesDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::PublishesDef *
POA_CORBA::ComponentIR::PublishesDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::PublishesDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_ConsumesDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::destroy_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::move_skel), nullptr},
  {"_get_event", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_get_event_skel), nullptr},
  {"_set_event", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::_set_event_skel), nullptr},
  {"is_a", std::addressof(POA_CORBA::ComponentIR::ConsumesDef::is_a_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_ConsumesDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (63);
static char _tao_CORBA_ComponentIR_ConsumesDef_optable_pool [_tao_CORBA_ComponentIR_ConsumesDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_ConsumesDef_allocator (_tao_CORBA_ComponentIR_ConsumesDef_optable_pool, _tao_CORBA_ComponentIR_ConsumesDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_ConsumesDef_optable (
    CORBA_ComponentIR_ConsumesDef_operations,
    21,
    42,
    &_tao_CORBA_ComponentIR_ConsumesDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::ConsumesDef::ConsumesDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_ConsumesDef_optable);
}

POA_CORBA::ComponentIR::ConsumesDef::ConsumesDef (const ConsumesDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::ComponentIR::EventPortDef (rhs)
{
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::ConsumesDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/ConsumesDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::ConsumesDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/ConsumesDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::ConsumesDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::ConsumesDef *
POA_CORBA::ComponentIR::ConsumesDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::ConsumesDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_ComponentDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::ComponentDef::destroy_skel), nullptr},
  {"lookup", std::addressof(POA_CORBA::ComponentIR::ComponentDef::lookup_skel), nullptr},
  {"contents", std::addressof(POA_CORBA::ComponentIR::ComponentDef::contents_skel), nullptr},
  {"lookup_name", std::addressof(POA_CORBA::ComponentIR::ComponentDef::lookup_name_skel), nullptr},
  {"describe_contents", std::addressof(POA_CORBA::ComponentIR::ComponentDef::describe_contents_skel), nullptr},
  {"create_module", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_module_skel), nullptr},
  {"create_constant", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_constant_skel), nullptr},
  {"create_struct", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_struct_skel), nullptr},
  {"create_union", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_union_skel), nullptr},
  {"create_enum", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_enum_skel), nullptr},
  {"create_alias", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_alias_skel), nullptr},
  {"create_interface", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_interface_skel), nullptr},
  {"create_value", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_value_skel), nullptr},
  {"create_value_box", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_value_box_skel), nullptr},
  {"create_exception", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_exception_skel), nullptr},
  {"create_native", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_native_skel), nullptr},
  {"create_abstract_interface", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_abstract_interface_skel), nullptr},
  {"create_local_interface", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_local_interface_skel), nullptr},
  {"create_ext_value", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_ext_value_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::ComponentDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::ComponentDef::move_skel), nullptr},
  {"_get_type", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_type_skel), nullptr},
  {"_get_base_interfaces", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_base_interfaces_skel), nullptr},
  {"_set_base_interfaces", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_set_base_interfaces_skel), nullptr},
  {"is_a", std::addressof(POA_CORBA::ComponentIR::ComponentDef::is_a_skel), nullptr},
  {"describe_interface", std::addressof(POA_CORBA::ComponentIR::ComponentDef::describe_interface_skel), nullptr},
  {"create_attribute", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_attribute_skel), nullptr},
  {"create_operation", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_operation_skel), nullptr},
  {"describe_ext_interface", std::addressof(POA_CORBA::ComponentIR::ComponentDef::describe_ext_interface_skel), nullptr},
  {"create_ext_attribute", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_ext_attribute_skel), nullptr},
  {"_get_base_component", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_base_component_skel), nullptr},
  {"_set_base_component", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_set_base_component_skel), nullptr},
  {"_get_supported_interfaces", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_get_supported_interfaces_skel), nullptr},
  {"_set_supported_interfaces", std::addressof(POA_CORBA::ComponentIR::ComponentDef::_set_supported_interfaces_skel), nullptr},
  {"create_provides", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_provides_skel), nullptr},
  {"create_uses", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_uses_skel), nullptr},
  {"create_emits", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_emits_skel), nullptr},
  {"create_publishes", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_publishes_skel), nullptr},
  {"create_consumes", std::addressof(POA_CORBA::ComponentIR::ComponentDef::create_consumes_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_ComponentDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (162);
static char _tao_CORBA_ComponentIR_ComponentDef_optable_pool [_tao_CORBA_ComponentIR_ComponentDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_ComponentDef_allocator (_tao_CORBA_ComponentIR_ComponentDef_optable_pool, _tao_CORBA_ComponentIR_ComponentDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_ComponentDef_optable (
    CORBA_ComponentIR_ComponentDef_operations,
    54,
    108,
    &_tao_CORBA_ComponentIR_ComponentDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::ComponentDef::ComponentDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_ComponentDef_optable);
}

POA_CORBA::ComponentIR::ComponentDef::ComponentDef (const ComponentDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Container (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::IDLType (rhs),
    POA_CORBA::InterfaceDef (rhs),
    POA_CORBA::InterfaceAttrExtension (rhs),
    POA_CORBA::ExtInterfaceDef (rhs)
{
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_base_component_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_base_component_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::ComponentDef> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->base_component ();
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::_get_base_component_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_base_component_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_base_component_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_base_component_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::ComponentDef> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->base_component (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::_set_base_component_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_val _tao_base_component;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_base_component)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_base_component_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_supported_interfaces_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_supported_interfaces_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::InterfaceDefSeq> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->supported_interfaces ();
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::_get_supported_interfaces_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_supported_interfaces_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_supported_interfaces_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_supported_interfaces_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDefSeq> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->supported_interfaces (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::_set_supported_interfaces_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supported_interfaces;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_supported_interfaces)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_supported_interfaces_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_provides_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline create_provides_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::ProvidesDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::ProvidesDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::InterfaceDef>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDef> (
            this->operation_details_,
            this->args_,
            4);
          
        retval =
          this->servant_->create_provides (
            arg_1
            , arg_2
            , arg_3
            , arg_4);
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::create_provides_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::ProvidesDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::InterfaceDef>::in_arg_val _tao_interface_type;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_interface_type)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_provides_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 5
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_uses_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline create_uses_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::UsesDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::UsesDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::InterfaceDef>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDef> (
            this->operation_details_,
            this->args_,
            4);
          
        TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_5 =
          TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
            this->operation_details_,
            this->args_,
            5);
          
        retval =
          this->servant_->create_uses (
            arg_1
            , arg_2
            , arg_3
            , arg_4
            , arg_5);
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::create_uses_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::UsesDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::InterfaceDef>::in_arg_val _tao_interface_type;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_multiple;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_interface_type),
      std::addressof(_tao_is_multiple)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_uses_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 6
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_emits_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline create_emits_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::EmitsDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::EmitsDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::EventDef> (
            this->operation_details_,
            this->args_,
            4);
          
        retval =
          this->servant_->create_emits (
            arg_1
            , arg_2
            , arg_3
            , arg_4);
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::create_emits_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::EmitsDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_val _tao_event;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_event)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_emits_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 5
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_publishes_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline create_publishes_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::PublishesDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::PublishesDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::EventDef> (
            this->operation_details_,
            this->args_,
            4);
          
        retval =
          this->servant_->create_publishes (
            arg_1
            , arg_2
            , arg_3
            , arg_4);
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::create_publishes_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::PublishesDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_val _tao_event;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_event)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_publishes_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 5
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_consumes_ComponentDef
      : public TAO::Upcall_Command
    {
    public:
      inline create_consumes_ComponentDef (
        POA_CORBA::ComponentIR::ComponentDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::ConsumesDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::ConsumesDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::EventDef> (
            this->operation_details_,
            this->args_,
            4);
          
        retval =
          this->servant_->create_consumes (
            arg_1
            , arg_2
            , arg_3
            , arg_4);
      }
    
    private:
      POA_CORBA::ComponentIR::ComponentDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::ComponentDef::create_consumes_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::ConsumesDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_val _tao_event;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_event)
    };
  
  POA_CORBA::ComponentIR::ComponentDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::ComponentDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_consumes_ComponentDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 5
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::ComponentDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/IDLType:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/InterfaceDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ExtInterfaceDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/ComponentDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::ComponentDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/ComponentDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::ComponentDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::ComponentDef *
POA_CORBA::ComponentIR::ComponentDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::ComponentDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_FactoryDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::FactoryDef::destroy_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::FactoryDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::FactoryDef::move_skel), nullptr},
  {"_get_result", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_result_skel), nullptr},
  {"_get_result_def", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_result_def_skel), nullptr},
  {"_set_result_def", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_set_result_def_skel), nullptr},
  {"_get_params", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_params_skel), nullptr},
  {"_set_params", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_set_params_skel), nullptr},
  {"_get_mode", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_mode_skel), nullptr},
  {"_set_mode", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_set_mode_skel), nullptr},
  {"_get_contexts", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_contexts_skel), nullptr},
  {"_set_contexts", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_set_contexts_skel), nullptr},
  {"_get_exceptions", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_get_exceptions_skel), nullptr},
  {"_set_exceptions", std::addressof(POA_CORBA::ComponentIR::FactoryDef::_set_exceptions_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_FactoryDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (87);
static char _tao_CORBA_ComponentIR_FactoryDef_optable_pool [_tao_CORBA_ComponentIR_FactoryDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_FactoryDef_allocator (_tao_CORBA_ComponentIR_FactoryDef_optable_pool, _tao_CORBA_ComponentIR_FactoryDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_FactoryDef_optable (
    CORBA_ComponentIR_FactoryDef_operations,
    29,
    58,
    &_tao_CORBA_ComponentIR_FactoryDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::FactoryDef::FactoryDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_FactoryDef_optable);
}

POA_CORBA::ComponentIR::FactoryDef::FactoryDef (const FactoryDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::OperationDef (rhs)
{
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::FactoryDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/OperationDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/FactoryDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::FactoryDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/FactoryDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::FactoryDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::FactoryDef *
POA_CORBA::ComponentIR::FactoryDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::FactoryDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_FinderDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::FinderDef::destroy_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::FinderDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::FinderDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::FinderDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::FinderDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::FinderDef::move_skel), nullptr},
  {"_get_result", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_result_skel), nullptr},
  {"_get_result_def", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_result_def_skel), nullptr},
  {"_set_result_def", std::addressof(POA_CORBA::ComponentIR::FinderDef::_set_result_def_skel), nullptr},
  {"_get_params", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_params_skel), nullptr},
  {"_set_params", std::addressof(POA_CORBA::ComponentIR::FinderDef::_set_params_skel), nullptr},
  {"_get_mode", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_mode_skel), nullptr},
  {"_set_mode", std::addressof(POA_CORBA::ComponentIR::FinderDef::_set_mode_skel), nullptr},
  {"_get_contexts", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_contexts_skel), nullptr},
  {"_set_contexts", std::addressof(POA_CORBA::ComponentIR::FinderDef::_set_contexts_skel), nullptr},
  {"_get_exceptions", std::addressof(POA_CORBA::ComponentIR::FinderDef::_get_exceptions_skel), nullptr},
  {"_set_exceptions", std::addressof(POA_CORBA::ComponentIR::FinderDef::_set_exceptions_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_FinderDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (87);
static char _tao_CORBA_ComponentIR_FinderDef_optable_pool [_tao_CORBA_ComponentIR_FinderDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_FinderDef_allocator (_tao_CORBA_ComponentIR_FinderDef_optable_pool, _tao_CORBA_ComponentIR_FinderDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_FinderDef_optable (
    CORBA_ComponentIR_FinderDef_operations,
    29,
    58,
    &_tao_CORBA_ComponentIR_FinderDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::FinderDef::FinderDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_FinderDef_optable);
}

POA_CORBA::ComponentIR::FinderDef::FinderDef (const FinderDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::OperationDef (rhs)
{
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::FinderDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/OperationDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/FinderDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::FinderDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/FinderDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::FinderDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::FinderDef *
POA_CORBA::ComponentIR::FinderDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::FinderDef>::unchecked_narrow (obj.in ());
}

static const TAO_operation_db_entry CORBA_ComponentIR_HomeDef_operations [] = {
  {"_get_def_kind", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_def_kind_skel), nullptr},
  {"destroy", std::addressof(POA_CORBA::ComponentIR::HomeDef::destroy_skel), nullptr},
  {"lookup", std::addressof(POA_CORBA::ComponentIR::HomeDef::lookup_skel), nullptr},
  {"contents", std::addressof(POA_CORBA::ComponentIR::HomeDef::contents_skel), nullptr},
  {"lookup_name", std::addressof(POA_CORBA::ComponentIR::HomeDef::lookup_name_skel), nullptr},
  {"describe_contents", std::addressof(POA_CORBA::ComponentIR::HomeDef::describe_contents_skel), nullptr},
  {"create_module", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_module_skel), nullptr},
  {"create_constant", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_constant_skel), nullptr},
  {"create_struct", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_struct_skel), nullptr},
  {"create_union", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_union_skel), nullptr},
  {"create_enum", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_enum_skel), nullptr},
  {"create_alias", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_alias_skel), nullptr},
  {"create_interface", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_interface_skel), nullptr},
  {"create_value", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_value_skel), nullptr},
  {"create_value_box", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_value_box_skel), nullptr},
  {"create_exception", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_exception_skel), nullptr},
  {"create_native", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_native_skel), nullptr},
  {"create_abstract_interface", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_abstract_interface_skel), nullptr},
  {"create_local_interface", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_local_interface_skel), nullptr},
  {"create_ext_value", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_ext_value_skel), nullptr},
  {"_get_id", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_id_skel), nullptr},
  {"_set_id", std::addressof(POA_CORBA::ComponentIR::HomeDef::_set_id_skel), nullptr},
  {"_get_name", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_name_skel), nullptr},
  {"_set_name", std::addressof(POA_CORBA::ComponentIR::HomeDef::_set_name_skel), nullptr},
  {"_get_version", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_version_skel), nullptr},
  {"_set_version", std::addressof(POA_CORBA::ComponentIR::HomeDef::_set_version_skel), nullptr},
  {"_get_defined_in", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_defined_in_skel), nullptr},
  {"_get_absolute_name", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_absolute_name_skel), nullptr},
  {"_get_containing_repository", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_containing_repository_skel), nullptr},
  {"describe", std::addressof(POA_CORBA::ComponentIR::HomeDef::describe_skel), nullptr},
  {"move", std::addressof(POA_CORBA::ComponentIR::HomeDef::move_skel), nullptr},
  {"_get_type", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_type_skel), nullptr},
  {"_get_base_interfaces", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_base_interfaces_skel), nullptr},
  {"_set_base_interfaces", std::addressof(POA_CORBA::ComponentIR::HomeDef::_set_base_interfaces_skel), nullptr},
  {"is_a", std::addressof(POA_CORBA::ComponentIR::HomeDef::is_a_skel), nullptr},
  {"describe_interface", std::addressof(POA_CORBA::ComponentIR::HomeDef::describe_interface_skel), nullptr},
  {"create_attribute", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_attribute_skel), nullptr},
  {"create_operation", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_operation_skel), nullptr},
  {"describe_ext_interface", std::addressof(POA_CORBA::ComponentIR::HomeDef::describe_ext_interface_skel), nullptr},
  {"create_ext_attribute", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_ext_attribute_skel), nullptr},
  {"_get_base_home", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_base_home_skel), nullptr},
  {"_set_base_home", std::addressof(POA_CORBA::ComponentIR::HomeDef::_set_base_home_skel), nullptr},
  {"_get_supported_interfaces", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_supported_interfaces_skel), nullptr},
  {"_set_supported_interfaces", std::addressof(POA_CORBA::ComponentIR::HomeDef::_set_supported_interfaces_skel), nullptr},
  {"_get_managed_component", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_managed_component_skel), nullptr},
  {"_set_managed_component", std::addressof(POA_CORBA::ComponentIR::HomeDef::_set_managed_component_skel), nullptr},
  {"_get_primary_key", std::addressof(POA_CORBA::ComponentIR::HomeDef::_get_primary_key_skel), nullptr},
  {"_set_primary_key", std::addressof(POA_CORBA::ComponentIR::HomeDef::_set_primary_key_skel), nullptr},
  {"create_factory", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_factory_skel), nullptr},
  {"create_finder", std::addressof(POA_CORBA::ComponentIR::HomeDef::create_finder_skel), nullptr},
  {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
  {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
  {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
  {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
  {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr}
};

static const ::CORBA::Long _tao_CORBA_ComponentIR_HomeDef_optable_size = sizeof (ACE_Hash_Map_Entry<const char *, TAO::Operation_Skeletons>) * (165);
static char _tao_CORBA_ComponentIR_HomeDef_optable_pool [_tao_CORBA_ComponentIR_HomeDef_optable_size];
static ACE_Static_Allocator_Base _tao_CORBA_ComponentIR_HomeDef_allocator (_tao_CORBA_ComponentIR_HomeDef_optable_pool, _tao_CORBA_ComponentIR_HomeDef_optable_size);
static TAO_Dynamic_Hash_OpTable tao_CORBA_ComponentIR_HomeDef_optable (
    CORBA_ComponentIR_HomeDef_operations,
    55,
    110,
    &_tao_CORBA_ComponentIR_HomeDef_allocator
  );



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:89



POA_CORBA::ComponentIR::HomeDef::HomeDef ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_CORBA_ComponentIR_HomeDef_optable);
}

POA_CORBA::ComponentIR::HomeDef::HomeDef (const HomeDef& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_CORBA::IRObject (rhs),
    POA_CORBA::Container (rhs),
    POA_CORBA::Contained (rhs),
    POA_CORBA::IDLType (rhs),
    POA_CORBA::InterfaceDef (rhs),
    POA_CORBA::InterfaceAttrExtension (rhs),
    POA_CORBA::ExtInterfaceDef (rhs)
{
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_base_home_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_base_home_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::HomeDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::HomeDef> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->base_home ();
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::_get_base_home_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::HomeDef>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_base_home_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_base_home_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_base_home_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::HomeDef>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::HomeDef> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->base_home (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::_set_base_home_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::ComponentIR::HomeDef>::in_arg_val _tao_base_home;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_base_home)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_base_home_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_supported_interfaces_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_supported_interfaces_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::InterfaceDefSeq> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->supported_interfaces ();
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::_get_supported_interfaces_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_supported_interfaces_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_supported_interfaces_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_supported_interfaces_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::InterfaceDefSeq> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->supported_interfaces (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::_set_supported_interfaces_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supported_interfaces;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_supported_interfaces)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_supported_interfaces_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_managed_component_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_managed_component_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::ComponentDef> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->managed_component ();
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::_get_managed_component_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_managed_component_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_managed_component_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_managed_component_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ComponentIR::ComponentDef> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->managed_component (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::_set_managed_component_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_val _tao_managed_component;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_managed_component)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_managed_component_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _get_primary_key_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline _get_primary_key_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ValueDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ValueDef> (
            this->operation_details_,
            this->args_);
        
        retval =
          this->servant_->primary_key ();
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::_get_primary_key_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ValueDef>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_primary_key_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class _set_primary_key_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline _set_primary_key_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ValueDef>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ValueDef> (
            this->operation_details_,
            this->args_,
            1);
          
        this->servant_->primary_key (
          arg_1);
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::_set_primary_key_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::ValueDef>::in_arg_val _tao_primary_key;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_primary_key)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_primary_key_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_factory_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline create_factory_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::FactoryDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::FactoryDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::ParDescriptionSeq>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ParDescriptionSeq> (
            this->operation_details_,
            this->args_,
            4);
          
        TAO::SArg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_type arg_5 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ExceptionDefSeq> (
            this->operation_details_,
            this->args_,
            5);
          
        retval =
          this->servant_->create_factory (
            arg_1
            , arg_2
            , arg_3
            , arg_4
            , arg_5);
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::create_factory_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::FactoryDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::ParDescriptionSeq>::in_arg_val _tao_params;
  TAO::SArg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_val _tao_exceptions;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_params),
      std::addressof(_tao_exceptions)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_factory_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 6
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_CORBA
{
  
  namespace ComponentIR
  {
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\upcall_command_ss.cpp:79

    class create_finder_HomeDef
      : public TAO::Upcall_Command
    {
    public:
      inline create_finder_HomeDef (
        POA_CORBA::ComponentIR::HomeDef * servant,
        TAO_Operation_Details const * operation_details,
        TAO::Argument * const args[])
        : servant_ (servant)
          , operation_details_ (operation_details)
          , args_ (args)
      {
      }

      void execute () override
      {
        TAO::SArg_Traits< ::CORBA::ComponentIR::FinderDef>::ret_arg_type retval =
          TAO::Portable_Server::get_ret_arg< ::CORBA::ComponentIR::FinderDef> (
            this->operation_details_,
            this->args_);
        
        TAO::SArg_Traits< char *>::in_arg_type arg_1 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            1);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_2 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            2);
          
        TAO::SArg_Traits< char *>::in_arg_type arg_3 =
          TAO::Portable_Server::get_in_arg< char *> (
            this->operation_details_,
            this->args_,
            3);
          
        TAO::SArg_Traits< ::CORBA::ParDescriptionSeq>::in_arg_type arg_4 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ParDescriptionSeq> (
            this->operation_details_,
            this->args_,
            4);
          
        TAO::SArg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_type arg_5 =
          TAO::Portable_Server::get_in_arg< ::CORBA::ExceptionDefSeq> (
            this->operation_details_,
            this->args_,
            5);
          
        retval =
          this->servant_->create_finder (
            arg_1
            , arg_2
            , arg_3
            , arg_4
            , arg_5);
      }
    
    private:
      POA_CORBA::ComponentIR::HomeDef * const servant_;
      TAO_Operation_Details const * const operation_details_;
      TAO::Argument * const * const args_;
    };
  }
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_ss.cpp:167

void POA_CORBA::ComponentIR::HomeDef::create_finder_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ComponentIR::FinderDef>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_id;
  TAO::SArg_Traits< char *>::in_arg_val _tao_name;
  TAO::SArg_Traits< char *>::in_arg_val _tao_version;
  TAO::SArg_Traits< ::CORBA::ParDescriptionSeq>::in_arg_val _tao_params;
  TAO::SArg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_val _tao_exceptions;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_id),
      std::addressof(_tao_name),
      std::addressof(_tao_version),
      std::addressof(_tao_params),
      std::addressof(_tao_exceptions)
    };
  
  POA_CORBA::ComponentIR::HomeDef * const impl =
    dynamic_cast<POA_CORBA::ComponentIR::HomeDef *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  create_finder_HomeDef command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 6
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:155





::CORBA::Boolean POA_CORBA::ComponentIR::HomeDef::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/CORBA/IRObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Container:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Contained:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/IDLType:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/InterfaceDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ExtInterfaceDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/ComponentIR/HomeDef:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_CORBA::ComponentIR::HomeDef::_interface_repository_id () const
{
  return "IDL:omg.org/CORBA/ComponentIR/HomeDef:1.0";
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:403



void POA_CORBA::ComponentIR::HomeDef::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ss.cpp:354



CORBA::ComponentIR::HomeDef *
POA_CORBA::ComponentIR::HomeDef::_this ()
{
  TAO_Stub *stub = this->_create_stub ();

  TAO_Stub_Auto_Ptr safe_stub (stub);
  ::CORBA::Object_ptr tmp {};

  ::CORBA::Boolean const _tao_opt_colloc =
    stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  
  ACE_NEW_RETURN (
      tmp,
      ::CORBA::Object (stub, _tao_opt_colloc, this),
      nullptr);
  
  ::CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();

  return TAO::Narrow_Utils< ::CORBA::ComponentIR::HomeDef>::unchecked_narrow (obj.in ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* ifndef */

