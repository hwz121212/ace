// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:571

#ifndef _TAO_IDL_IFR_BASES_T_GZPIAU_H_
#define _TAO_IDL_IFR_BASES_T_GZPIAU_H_

#include /**/ "ace/pre.h"

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_root\root_sth.cpp:64

namespace POA_CORBA
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\tie_sh.cpp:70

  // TIE class: Refer to CORBA v2.2, Section 20.34.4
  template <class T>
  class  IRObject_tie : public IRObject
  {
  public:
    /// the T& ctor
    IRObject_tie (T &t);
    /// ctor taking a POA
    IRObject_tie (T &t, PortableServer::POA_ptr poa);
    /// ctor taking pointer and an ownership flag
    IRObject_tie (T *tp, ::CORBA::Boolean release = true);
    /// ctor with T*, ownership flag and a POA
    IRObject_tie (
        T *tp,
        PortableServer::POA_ptr poa,
        ::CORBA::Boolean release = true);
    /// dtor
    ~IRObject_tie ();
    // TIE specific functions
    /// return the underlying object
    T *_tied_object ();
    /// set the underlying object
    void _tied_object (T &obj);
    /// set the underlying object and the ownership flag
    void _tied_object (T *obj, ::CORBA::Boolean release = true);
    /// do we own it
    ::CORBA::Boolean _is_owner ();
    /// set the ownership

    void _is_owner ( ::CORBA::Boolean b);
    // overridden ServantBase operations
    PortableServer::POA_ptr _default_POA ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::DefinitionKind def_kind ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void destroy ();
  
  private:
    T *ptr_;
    PortableServer::POA_var poa_;
    ::CORBA::Boolean rel_;

    IRObject_tie (const IRObject_tie &) = delete;
    void operator= (const IRObject_tie &) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\tie_sh.cpp:70

  // TIE class: Refer to CORBA v2.2, Section 20.34.4
  template <class T>
  class  Contained_tie : public Contained
  {
  public:
    /// the T& ctor
    Contained_tie (T &t);
    /// ctor taking a POA
    Contained_tie (T &t, PortableServer::POA_ptr poa);
    /// ctor taking pointer and an ownership flag
    Contained_tie (T *tp, ::CORBA::Boolean release = true);
    /// ctor with T*, ownership flag and a POA
    Contained_tie (
        T *tp,
        PortableServer::POA_ptr poa,
        ::CORBA::Boolean release = true);
    /// dtor
    ~Contained_tie ();
    // TIE specific functions
    /// return the underlying object
    T *_tied_object ();
    /// set the underlying object
    void _tied_object (T &obj);
    /// set the underlying object and the ownership flag
    void _tied_object (T *obj, ::CORBA::Boolean release = true);
    /// do we own it
    ::CORBA::Boolean _is_owner ();
    /// set the ownership

    void _is_owner ( ::CORBA::Boolean b);
    // overridden ServantBase operations
    PortableServer::POA_ptr _default_POA ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::DefinitionKind def_kind ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void destroy ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    char * id ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void id (
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    char * name ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void name (
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    char * version ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void version (
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::Container_ptr defined_in ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    char * absolute_name ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::Repository_ptr containing_repository ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::Contained::Description * describe ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void move (
      ::CORBA::Container_ptr,
      const char *,
      const char *);
  
  private:
    T *ptr_;
    PortableServer::POA_var poa_;
    ::CORBA::Boolean rel_;

    Contained_tie (const Contained_tie &) = delete;
    void operator= (const Contained_tie &) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\tie_sh.cpp:70

  // TIE class: Refer to CORBA v2.2, Section 20.34.4
  template <class T>
  class  Container_tie : public Container
  {
  public:
    /// the T& ctor
    Container_tie (T &t);
    /// ctor taking a POA
    Container_tie (T &t, PortableServer::POA_ptr poa);
    /// ctor taking pointer and an ownership flag
    Container_tie (T *tp, ::CORBA::Boolean release = true);
    /// ctor with T*, ownership flag and a POA
    Container_tie (
        T *tp,
        PortableServer::POA_ptr poa,
        ::CORBA::Boolean release = true);
    /// dtor
    ~Container_tie ();
    // TIE specific functions
    /// return the underlying object
    T *_tied_object ();
    /// set the underlying object
    void _tied_object (T &obj);
    /// set the underlying object and the ownership flag
    void _tied_object (T *obj, ::CORBA::Boolean release = true);
    /// do we own it
    ::CORBA::Boolean _is_owner ();
    /// set the ownership

    void _is_owner ( ::CORBA::Boolean b);
    // overridden ServantBase operations
    PortableServer::POA_ptr _default_POA ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::DefinitionKind def_kind ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void destroy ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::Contained_ptr lookup (
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::ContainedSeq * contents (
      ::CORBA::DefinitionKind,
      ::CORBA::Boolean);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::ContainedSeq * lookup_name (
      const char *,
      ::CORBA::Long,
      ::CORBA::DefinitionKind,
      ::CORBA::Boolean);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::Container::DescriptionSeq * describe_contents (
      ::CORBA::DefinitionKind,
      ::CORBA::Boolean,
      ::CORBA::Long);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::ModuleDef_ptr create_module (
      const char *,
      const char *,
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::ConstantDef_ptr create_constant (
      const char *,
      const char *,
      const char *,
      ::CORBA::IDLType_ptr,
      const ::CORBA::Any &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::StructDef_ptr create_struct (
      const char *,
      const char *,
      const char *,
      const ::CORBA::StructMemberSeq &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::UnionDef_ptr create_union (
      const char *,
      const char *,
      const char *,
      ::CORBA::IDLType_ptr,
      const ::CORBA::UnionMemberSeq &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::EnumDef_ptr create_enum (
      const char *,
      const char *,
      const char *,
      const ::CORBA::EnumMemberSeq &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::AliasDef_ptr create_alias (
      const char *,
      const char *,
      const char *,
      ::CORBA::IDLType_ptr);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::InterfaceDef_ptr create_interface (
      const char *,
      const char *,
      const char *,
      const ::CORBA::InterfaceDefSeq &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::ValueDef_ptr create_value (
      const char *,
      const char *,
      const char *,
      ::CORBA::Boolean,
      ::CORBA::Boolean,
      ::CORBA::ValueDef_ptr,
      ::CORBA::Boolean,
      const ::CORBA::ValueDefSeq &,
      const ::CORBA::InterfaceDefSeq &,
      const ::CORBA::InitializerSeq &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::ValueBoxDef_ptr create_value_box (
      const char *,
      const char *,
      const char *,
      ::CORBA::IDLType_ptr);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::ExceptionDef_ptr create_exception (
      const char *,
      const char *,
      const char *,
      const ::CORBA::StructMemberSeq &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::NativeDef_ptr create_native (
      const char *,
      const char *,
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::AbstractInterfaceDef_ptr create_abstract_interface (
      const char *,
      const char *,
      const char *,
      const ::CORBA::AbstractInterfaceDefSeq &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::LocalInterfaceDef_ptr create_local_interface (
      const char *,
      const char *,
      const char *,
      const ::CORBA::InterfaceDefSeq &);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::ExtValueDef_ptr create_ext_value (
      const char *,
      const char *,
      const char *,
      ::CORBA::Boolean,
      ::CORBA::Boolean,
      ::CORBA::ValueDef_ptr,
      ::CORBA::Boolean,
      const ::CORBA::ValueDefSeq &,
      const ::CORBA::InterfaceDefSeq &,
      const ::CORBA::ExtInitializerSeq &);
  
  private:
    T *ptr_;
    PortableServer::POA_var poa_;
    ::CORBA::Boolean rel_;

    Container_tie (const Container_tie &) = delete;
    void operator= (const Container_tie &) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\tie_sh.cpp:70

  // TIE class: Refer to CORBA v2.2, Section 20.34.4
  template <class T>
  class  IDLType_tie : public IDLType
  {
  public:
    /// the T& ctor
    IDLType_tie (T &t);
    /// ctor taking a POA
    IDLType_tie (T &t, PortableServer::POA_ptr poa);
    /// ctor taking pointer and an ownership flag
    IDLType_tie (T *tp, ::CORBA::Boolean release = true);
    /// ctor with T*, ownership flag and a POA
    IDLType_tie (
        T *tp,
        PortableServer::POA_ptr poa,
        ::CORBA::Boolean release = true);
    /// dtor
    ~IDLType_tie ();
    // TIE specific functions
    /// return the underlying object
    T *_tied_object ();
    /// set the underlying object
    void _tied_object (T &obj);
    /// set the underlying object and the ownership flag
    void _tied_object (T *obj, ::CORBA::Boolean release = true);
    /// do we own it
    ::CORBA::Boolean _is_owner ();
    /// set the ownership

    void _is_owner ( ::CORBA::Boolean b);
    // overridden ServantBase operations
    PortableServer::POA_ptr _default_POA ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::DefinitionKind def_kind ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void destroy ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::TypeCode_ptr type ();
  
  private:
    T *ptr_;
    PortableServer::POA_var poa_;
    ::CORBA::Boolean rel_;

    IDLType_tie (const IDLType_tie &) = delete;
    void operator= (const IDLType_tie &) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\tie_sh.cpp:70

  // TIE class: Refer to CORBA v2.2, Section 20.34.4
  template <class T>
  class  TypedefDef_tie : public TypedefDef
  {
  public:
    /// the T& ctor
    TypedefDef_tie (T &t);
    /// ctor taking a POA
    TypedefDef_tie (T &t, PortableServer::POA_ptr poa);
    /// ctor taking pointer and an ownership flag
    TypedefDef_tie (T *tp, ::CORBA::Boolean release = true);
    /// ctor with T*, ownership flag and a POA
    TypedefDef_tie (
        T *tp,
        PortableServer::POA_ptr poa,
        ::CORBA::Boolean release = true);
    /// dtor
    ~TypedefDef_tie ();
    // TIE specific functions
    /// return the underlying object
    T *_tied_object ();
    /// set the underlying object
    void _tied_object (T &obj);
    /// set the underlying object and the ownership flag
    void _tied_object (T *obj, ::CORBA::Boolean release = true);
    /// do we own it
    ::CORBA::Boolean _is_owner ();
    /// set the ownership

    void _is_owner ( ::CORBA::Boolean b);
    // overridden ServantBase operations
    PortableServer::POA_ptr _default_POA ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::DefinitionKind def_kind ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void destroy ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    char * id ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void id (
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    char * name ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void name (
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    char * version ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void version (
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::Container_ptr defined_in ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    char * absolute_name ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::Repository_ptr containing_repository ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::Contained::Description * describe ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    void move (
      ::CORBA::Container_ptr,
      const char *,
      const char *);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\tie_sh.cpp:50

    ::CORBA::TypeCode_ptr type ();
  
  private:
    T *ptr_;
    PortableServer::POA_var poa_;
    ::CORBA::Boolean rel_;

    TypedefDef_tie (const TypedefDef_tie &) = delete;
    void operator= (const TypedefDef_tie &) = delete;
  };
} // module CORBA
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1781



TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_TEMPLATES_REQUIRE_SOURCE)
#include "IFR_BaseS_T.cpp"
#endif /* defined REQUIRED SOURCE */

#if defined (ACE_TEMPLATES_REQUIRE_PRAGMA)
#pragma implementation ("IFR_BaseS_T.cpp")
#endif /* defined REQUIRED PRAGMA */

#include /**/ "ace/post.h"
#endif /* ifndef */

