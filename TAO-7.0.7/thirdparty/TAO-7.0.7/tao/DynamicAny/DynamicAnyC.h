// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_DYNAMICANYC_UFECMW_H_
#define _TAO_PIDL_DYNAMICANYC_UFECMW_H_

#include /**/ "ace/pre.h"

#ifndef TAO_DYNAMICANY_SAFE_INCLUDE
#error You should not include DynamicAnyC.h, use tao/DynamicAny/DynamicAny.h
#endif /* TAO_DYNAMICANY_SAFE_INCLUDE */

#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/DynamicAny/dynamicany_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/AbstractBase.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/CDR.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/Typecode_typesA.h"
#include "tao/AnyTypeCode/BooleanSeqA.h"
#include "tao/AnyTypeCode/CharSeqA.h"
#include "tao/AnyTypeCode/DoubleSeqA.h"
#include "tao/AnyTypeCode/FloatSeqA.h"
#include "tao/AnyTypeCode/LongDoubleSeqA.h"
#include "tao/AnyTypeCode/LongLongSeqA.h"
#include "tao/AnyTypeCode/LongSeqA.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/AnyTypeCode/ShortSeqA.h"
#include "tao/AnyTypeCode/ULongLongSeqA.h"
#include "tao/AnyTypeCode/ULongSeqA.h"
#include "tao/AnyTypeCode/UShortSeqA.h"
#include "tao/AnyTypeCode/WCharSeqA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/Typecode_typesC.h"
#include "tao/BooleanSeqC.h"
#include "tao/CharSeqC.h"
#include "tao/DoubleSeqC.h"
#include "tao/FloatSeqC.h"
#include "tao/LongDoubleSeqC.h"
#include "tao/LongLongSeqC.h"
#include "tao/LongSeqC.h"
#include "tao/OctetSeqC.h"
#include "tao/ShortSeqC.h"
#include "tao/ULongLongSeqC.h"
#include "tao/ULongSeqC.h"
#include "tao/UShortSeqC.h"
#include "tao/WCharSeqC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace DynamicAny
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNANY__VAR_OUT_CH_)
#define _DYNAMICANY_DYNANY__VAR_OUT_CH_

  class DynAny;
  using DynAny_ptr = DynAny*;
  using DynAny_var = TAO_Objref_Var_T<DynAny>;
  using DynAny_out = TAO_Objref_Out_T<DynAny>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynAny
    : public virtual ::CORBA::Object
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynAny_ptr;
    using _var_type = DynAny_var;
    using _out_type = DynAny_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynAny_ptr _duplicate (DynAny_ptr obj);

    static void _tao_release (DynAny_ptr obj);

    static DynAny_ptr _narrow (::CORBA::Object_ptr obj);
    static DynAny_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynAny_ptr _nil ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

    

    class TAO_DynamicAny_Export InvalidValue : public ::CORBA::UserException
    {
    public:

      InvalidValue ();
      InvalidValue (const InvalidValue &);
      ~InvalidValue () = default;

      InvalidValue &operator= (const InvalidValue &);

      static void _tao_any_destructor (void *);

      static InvalidValue *_downcast ( ::CORBA::Exception *);
      static const InvalidValue *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc ();

      virtual ::CORBA::Exception *_tao_duplicate () const;

      virtual void _raise () const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_InvalidValue;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

    

    class TAO_DynamicAny_Export TypeMismatch : public ::CORBA::UserException
    {
    public:

      TypeMismatch ();
      TypeMismatch (const TypeMismatch &);
      ~TypeMismatch () = default;

      TypeMismatch &operator= (const TypeMismatch &);

      static void _tao_any_destructor (void *);

      static TypeMismatch *_downcast ( ::CORBA::Exception *);
      static const TypeMismatch *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc ();

      virtual ::CORBA::Exception *_tao_duplicate () const;

      virtual void _raise () const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_TypeMismatch;

    virtual ::CORBA::TypeCode_ptr type () = 0;

    virtual void assign (
      ::DynamicAny::DynAny_ptr dyn_any) = 0;

    virtual void from_any (
      const ::CORBA::Any & value) = 0;

    virtual ::CORBA::Any * to_any () = 0;

    virtual ::CORBA::Boolean equal (
      ::DynamicAny::DynAny_ptr dyn_any) = 0;

    virtual void destroy () = 0;

    virtual ::DynamicAny::DynAny_ptr copy () = 0;

    virtual void insert_boolean (
      ::CORBA::Boolean value) = 0;

    virtual void insert_octet (
      ::CORBA::Octet value) = 0;

    virtual void insert_char (
      ::CORBA::Char value) = 0;

    virtual void insert_short (
      ::CORBA::Short value) = 0;

    virtual void insert_ushort (
      ::CORBA::UShort value) = 0;

    virtual void insert_long (
      ::CORBA::Long value) = 0;

    virtual void insert_ulong (
      ::CORBA::ULong value) = 0;

    virtual void insert_float (
      ::CORBA::Float value) = 0;

    virtual void insert_double (
      ::CORBA::Double value) = 0;

    virtual void insert_string (
      const char * value) = 0;

    virtual void insert_reference (
      ::CORBA::Object_ptr value) = 0;

    virtual void insert_typecode (
      ::CORBA::TypeCode_ptr value) = 0;

    virtual void insert_longlong (
      ::CORBA::LongLong value) = 0;

    virtual void insert_ulonglong (
      ::CORBA::ULongLong value) = 0;

    virtual void insert_longdouble (
      ::CORBA::LongDouble value) = 0;

    virtual void insert_wchar (
      ::CORBA::WChar value) = 0;

    virtual void insert_wstring (
      const ::CORBA::WChar * value) = 0;

    virtual void insert_any (
      const ::CORBA::Any & value) = 0;

    virtual void insert_dyn_any (
      ::DynamicAny::DynAny_ptr value) = 0;

    virtual void insert_val (
      ::CORBA::ValueBase * value) = 0;

    virtual ::CORBA::Boolean get_boolean () = 0;

    virtual ::CORBA::Octet get_octet () = 0;

    virtual ::CORBA::Char get_char () = 0;

    virtual ::CORBA::Short get_short () = 0;

    virtual ::CORBA::UShort get_ushort () = 0;

    virtual ::CORBA::Long get_long () = 0;

    virtual ::CORBA::ULong get_ulong () = 0;

    virtual ::CORBA::Float get_float () = 0;

    virtual ::CORBA::Double get_double () = 0;

    virtual char * get_string () = 0;

    virtual ::CORBA::Object_ptr get_reference () = 0;

    virtual ::CORBA::TypeCode_ptr get_typecode () = 0;

    virtual ::CORBA::LongLong get_longlong () = 0;

    virtual ::CORBA::ULongLong get_ulonglong () = 0;

    virtual ::CORBA::LongDouble get_longdouble () = 0;

    virtual ::CORBA::WChar get_wchar () = 0;

    virtual ::CORBA::WChar * get_wstring () = 0;

    virtual ::CORBA::Any * get_any () = 0;

    virtual ::DynamicAny::DynAny_ptr get_dyn_any () = 0;

    virtual ::CORBA::ValueBase * get_val () = 0;

    virtual ::CORBA::Boolean seek (
      ::CORBA::Long index) = 0;

    virtual void rewind () = 0;

    virtual ::CORBA::Boolean next () = 0;

    virtual ::CORBA::ULong component_count () = 0;

    virtual ::DynamicAny::DynAny_ptr current_component () = 0;

    virtual void insert_abstract (
      ::CORBA::AbstractBase_ptr value) = 0;

    virtual ::CORBA::AbstractBase_ptr get_abstract () = 0;

    virtual void insert_boolean_seq (
      const ::CORBA::BooleanSeq & value) = 0;

    virtual void insert_octet_seq (
      const ::CORBA::OctetSeq & value) = 0;

    virtual void insert_char_seq (
      const ::CORBA::CharSeq & value) = 0;

    virtual void insert_short_seq (
      const ::CORBA::ShortSeq & value) = 0;

    virtual void insert_ushort_seq (
      const ::CORBA::UShortSeq & value) = 0;

    virtual void insert_long_seq (
      const ::CORBA::LongSeq & value) = 0;

    virtual void insert_ulong_seq (
      const ::CORBA::ULongSeq & value) = 0;

    virtual void insert_float_seq (
      const ::CORBA::FloatSeq & value) = 0;

    virtual void insert_double_seq (
      const ::CORBA::DoubleSeq & value) = 0;

    virtual void insert_longlong_seq (
      const ::CORBA::LongLongSeq & value) = 0;

    virtual void insert_ulonglong_seq (
      const ::CORBA::ULongLongSeq & value) = 0;

    virtual void insert_longdouble_seq (
      const ::CORBA::LongDoubleSeq & value) = 0;

    virtual void insert_wchar_seq (
      const ::CORBA::WCharSeq & value) = 0;

    virtual ::CORBA::BooleanSeq * get_boolean_seq () = 0;

    virtual ::CORBA::OctetSeq * get_octet_seq () = 0;

    virtual ::CORBA::CharSeq * get_char_seq () = 0;

    virtual ::CORBA::ShortSeq * get_short_seq () = 0;

    virtual ::CORBA::UShortSeq * get_ushort_seq () = 0;

    virtual ::CORBA::LongSeq * get_long_seq () = 0;

    virtual ::CORBA::ULongSeq * get_ulong_seq () = 0;

    virtual ::CORBA::FloatSeq * get_float_seq () = 0;

    virtual ::CORBA::DoubleSeq * get_double_seq () = 0;

    virtual ::CORBA::LongLongSeq * get_longlong_seq () = 0;

    virtual ::CORBA::ULongLongSeq * get_ulonglong_seq () = 0;

    virtual ::CORBA::LongDoubleSeq * get_longdouble_seq () = 0;

    virtual ::CORBA::WCharSeq * get_wchar_seq () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynAny ();

    

    virtual ~DynAny () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynAny (const DynAny &) = delete;
    DynAny (DynAny &&) = delete;
    DynAny &operator= (const DynAny &) = delete;
    DynAny &operator= (DynAny &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynAny;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNFIXED__VAR_OUT_CH_)
#define _DYNAMICANY_DYNFIXED__VAR_OUT_CH_

  class DynFixed;
  using DynFixed_ptr = DynFixed*;
  using DynFixed_var = TAO_Objref_Var_T<DynFixed>;
  using DynFixed_out = TAO_Objref_Out_T<DynFixed>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynFixed
    : public virtual ::DynamicAny::DynAny
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynFixed_ptr;
    using _var_type = DynFixed_var;
    using _out_type = DynFixed_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynFixed_ptr _duplicate (DynFixed_ptr obj);

    static void _tao_release (DynFixed_ptr obj);

    static DynFixed_ptr _narrow (::CORBA::Object_ptr obj);
    static DynFixed_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynFixed_ptr _nil ();

    virtual char * get_value () = 0;

    virtual ::CORBA::Boolean set_value (
      const char * val) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynFixed ();

    

    virtual ~DynFixed () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynFixed (const DynFixed &) = delete;
    DynFixed (DynFixed &&) = delete;
    DynFixed &operator= (const DynFixed &) = delete;
    DynFixed &operator= (DynFixed &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynFixed;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNENUM__VAR_OUT_CH_)
#define _DYNAMICANY_DYNENUM__VAR_OUT_CH_

  class DynEnum;
  using DynEnum_ptr = DynEnum*;
  using DynEnum_var = TAO_Objref_Var_T<DynEnum>;
  using DynEnum_out = TAO_Objref_Out_T<DynEnum>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynEnum
    : public virtual ::DynamicAny::DynAny
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynEnum_ptr;
    using _var_type = DynEnum_var;
    using _out_type = DynEnum_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynEnum_ptr _duplicate (DynEnum_ptr obj);

    static void _tao_release (DynEnum_ptr obj);

    static DynEnum_ptr _narrow (::CORBA::Object_ptr obj);
    static DynEnum_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynEnum_ptr _nil ();

    virtual char * get_as_string () = 0;

    virtual void set_as_string (
      const char * value) = 0;

    virtual ::CORBA::ULong get_as_ulong () = 0;

    virtual void set_as_ulong (
      ::CORBA::ULong value) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynEnum ();

    

    virtual ~DynEnum () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynEnum (const DynEnum &) = delete;
    DynEnum (DynEnum &&) = delete;
    DynEnum &operator= (const DynEnum &) = delete;
    DynEnum &operator= (DynEnum &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynEnum;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:399

  typedef char * FieldName;
  typedef ::CORBA::String_var FieldName_var;
  typedef ::CORBA::String_out FieldName_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_FieldName;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct NameValuePair;
  using NameValuePair_var = ::TAO_Var_Var_T<NameValuePair>;
  using NameValuePair_out = ::TAO_Out_T<NameValuePair>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_DynamicAny_Export NameValuePair
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = NameValuePair_var;
    using _out_type = NameValuePair_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager id;
    ::CORBA::Any value;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_NameValuePair;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_DYNAMICANY_NAMEVALUEPAIRSEQ_CH_)
#define _DYNAMICANY_NAMEVALUEPAIRSEQ_CH_

  class NameValuePairSeq;
  typedef ::TAO_VarSeq_Var_T<NameValuePairSeq> NameValuePairSeq_var;
  typedef ::TAO_Seq_Out_T<NameValuePairSeq> NameValuePairSeq_out;
  

  class TAO_DynamicAny_Export NameValuePairSeq
    : public
        ::TAO::unbounded_value_sequence< NameValuePair>
  {
  public:
    NameValuePairSeq () = default;
    NameValuePairSeq ( ::CORBA::ULong max);
    NameValuePairSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      NameValuePair* buffer,
      ::CORBA::Boolean release = false);
    NameValuePairSeq (const NameValuePairSeq &) = default;
    NameValuePairSeq (NameValuePairSeq &&) = default;
    NameValuePairSeq& operator= (const NameValuePairSeq &) = default;
    NameValuePairSeq& operator= (NameValuePairSeq &&) = default;
    virtual ~NameValuePairSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = NameValuePairSeq_var;
    using _out_type = NameValuePairSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_NameValuePairSeq;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct NameDynAnyPair;
  using NameDynAnyPair_var = ::TAO_Var_Var_T<NameDynAnyPair>;
  using NameDynAnyPair_out = ::TAO_Out_T<NameDynAnyPair>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_DynamicAny_Export NameDynAnyPair
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = NameDynAnyPair_var;
    using _out_type = NameDynAnyPair_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager id;
    DynamicAny::DynAny_var value;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_NameDynAnyPair;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_)
#define _DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_

  class NameDynAnyPairSeq;
  typedef ::TAO_VarSeq_Var_T<NameDynAnyPairSeq> NameDynAnyPairSeq_var;
  typedef ::TAO_Seq_Out_T<NameDynAnyPairSeq> NameDynAnyPairSeq_out;
  

  class TAO_DynamicAny_Export NameDynAnyPairSeq
    : public
        ::TAO::unbounded_value_sequence< NameDynAnyPair>
  {
  public:
    NameDynAnyPairSeq () = default;
    NameDynAnyPairSeq ( ::CORBA::ULong max);
    NameDynAnyPairSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      NameDynAnyPair* buffer,
      ::CORBA::Boolean release = false);
    NameDynAnyPairSeq (const NameDynAnyPairSeq &) = default;
    NameDynAnyPairSeq (NameDynAnyPairSeq &&) = default;
    NameDynAnyPairSeq& operator= (const NameDynAnyPairSeq &) = default;
    NameDynAnyPairSeq& operator= (NameDynAnyPairSeq &&) = default;
    virtual ~NameDynAnyPairSeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = NameDynAnyPairSeq_var;
    using _out_type = NameDynAnyPairSeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_NameDynAnyPairSeq;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNSTRUCT__VAR_OUT_CH_)
#define _DYNAMICANY_DYNSTRUCT__VAR_OUT_CH_

  class DynStruct;
  using DynStruct_ptr = DynStruct*;
  using DynStruct_var = TAO_Objref_Var_T<DynStruct>;
  using DynStruct_out = TAO_Objref_Out_T<DynStruct>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynStruct
    : public virtual ::DynamicAny::DynAny
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynStruct_ptr;
    using _var_type = DynStruct_var;
    using _out_type = DynStruct_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynStruct_ptr _duplicate (DynStruct_ptr obj);

    static void _tao_release (DynStruct_ptr obj);

    static DynStruct_ptr _narrow (::CORBA::Object_ptr obj);
    static DynStruct_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynStruct_ptr _nil ();

    virtual char * current_member_name () = 0;

    virtual ::CORBA::TCKind current_member_kind () = 0;

    virtual ::DynamicAny::NameValuePairSeq * get_members () = 0;

    virtual void set_members (
      const ::DynamicAny::NameValuePairSeq & value) = 0;

    virtual ::DynamicAny::NameDynAnyPairSeq * get_members_as_dyn_any () = 0;

    virtual void set_members_as_dyn_any (
      const ::DynamicAny::NameDynAnyPairSeq & value) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynStruct ();

    

    virtual ~DynStruct () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynStruct (const DynStruct &) = delete;
    DynStruct (DynStruct &&) = delete;
    DynStruct &operator= (const DynStruct &) = delete;
    DynStruct &operator= (DynStruct &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynStruct;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNUNION__VAR_OUT_CH_)
#define _DYNAMICANY_DYNUNION__VAR_OUT_CH_

  class DynUnion;
  using DynUnion_ptr = DynUnion*;
  using DynUnion_var = TAO_Objref_Var_T<DynUnion>;
  using DynUnion_out = TAO_Objref_Out_T<DynUnion>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynUnion
    : public virtual ::DynamicAny::DynAny
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynUnion_ptr;
    using _var_type = DynUnion_var;
    using _out_type = DynUnion_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynUnion_ptr _duplicate (DynUnion_ptr obj);

    static void _tao_release (DynUnion_ptr obj);

    static DynUnion_ptr _narrow (::CORBA::Object_ptr obj);
    static DynUnion_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynUnion_ptr _nil ();

    virtual ::DynamicAny::DynAny_ptr get_discriminator () = 0;

    virtual void set_discriminator (
      ::DynamicAny::DynAny_ptr d) = 0;

    virtual void set_to_default_member () = 0;

    virtual void set_to_no_active_member () = 0;

    virtual ::CORBA::Boolean has_no_active_member () = 0;

    virtual ::CORBA::TCKind discriminator_kind () = 0;

    virtual ::DynamicAny::DynAny_ptr member () = 0;

    virtual char * member_name () = 0;

    virtual ::CORBA::TCKind member_kind () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynUnion ();

    

    virtual ~DynUnion () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynUnion (const DynUnion &) = delete;
    DynUnion (DynUnion &&) = delete;
    DynUnion &operator= (const DynUnion &) = delete;
    DynUnion &operator= (DynUnion &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynUnion;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_DYNAMICANY_ANYSEQ_CH_)
#define _DYNAMICANY_ANYSEQ_CH_

  class AnySeq;
  typedef ::TAO_VarSeq_Var_T<AnySeq> AnySeq_var;
  typedef ::TAO_Seq_Out_T<AnySeq> AnySeq_out;
  

  class TAO_DynamicAny_Export AnySeq
    : public
        ::TAO::unbounded_value_sequence< ::CORBA::Any>
  {
  public:
    AnySeq () = default;
    AnySeq ( ::CORBA::ULong max);
    AnySeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Any* buffer,
      ::CORBA::Boolean release = false);
    AnySeq (const AnySeq &) = default;
    AnySeq (AnySeq &&) = default;
    AnySeq& operator= (const AnySeq &) = default;
    AnySeq& operator= (AnySeq &&) = default;
    virtual ~AnySeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = AnySeq_var;
    using _out_type = AnySeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_AnySeq;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_DYNAMICANY_DYNANYSEQ_CH_)
#define _DYNAMICANY_DYNANYSEQ_CH_

  class DynAnySeq;
  typedef ::TAO_VarSeq_Var_T<DynAnySeq> DynAnySeq_var;
  typedef ::TAO_Seq_Out_T<DynAnySeq> DynAnySeq_out;
  

  class TAO_DynamicAny_Export DynAnySeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            DynAny,
            DynAny_var
          >
  {
  public:
    DynAnySeq () = default;
    DynAnySeq ( ::CORBA::ULong max);
    DynAnySeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      DynAny_ptr* buffer,
      ::CORBA::Boolean release = false);
    DynAnySeq (const DynAnySeq &) = default;
    DynAnySeq (DynAnySeq &&) = default;
    DynAnySeq& operator= (const DynAnySeq &) = default;
    DynAnySeq& operator= (DynAnySeq &&) = default;
    virtual ~DynAnySeq () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = DynAnySeq_var;
    using _out_type = DynAnySeq_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynAnySeq;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNSEQUENCE__VAR_OUT_CH_)
#define _DYNAMICANY_DYNSEQUENCE__VAR_OUT_CH_

  class DynSequence;
  using DynSequence_ptr = DynSequence*;
  using DynSequence_var = TAO_Objref_Var_T<DynSequence>;
  using DynSequence_out = TAO_Objref_Out_T<DynSequence>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynSequence
    : public virtual ::DynamicAny::DynAny
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynSequence_ptr;
    using _var_type = DynSequence_var;
    using _out_type = DynSequence_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynSequence_ptr _duplicate (DynSequence_ptr obj);

    static void _tao_release (DynSequence_ptr obj);

    static DynSequence_ptr _narrow (::CORBA::Object_ptr obj);
    static DynSequence_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynSequence_ptr _nil ();

    virtual ::CORBA::ULong get_length () = 0;

    virtual void set_length (
      ::CORBA::ULong len) = 0;

    virtual ::DynamicAny::AnySeq * get_elements () = 0;

    virtual void set_elements (
      const ::DynamicAny::AnySeq & value) = 0;

    virtual ::DynamicAny::DynAnySeq * get_elements_as_dyn_any () = 0;

    virtual void set_elements_as_dyn_any (
      const ::DynamicAny::DynAnySeq & value) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynSequence ();

    

    virtual ~DynSequence () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynSequence (const DynSequence &) = delete;
    DynSequence (DynSequence &&) = delete;
    DynSequence &operator= (const DynSequence &) = delete;
    DynSequence &operator= (DynSequence &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynSequence;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNARRAY__VAR_OUT_CH_)
#define _DYNAMICANY_DYNARRAY__VAR_OUT_CH_

  class DynArray;
  using DynArray_ptr = DynArray*;
  using DynArray_var = TAO_Objref_Var_T<DynArray>;
  using DynArray_out = TAO_Objref_Out_T<DynArray>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynArray
    : public virtual ::DynamicAny::DynAny
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynArray_ptr;
    using _var_type = DynArray_var;
    using _out_type = DynArray_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynArray_ptr _duplicate (DynArray_ptr obj);

    static void _tao_release (DynArray_ptr obj);

    static DynArray_ptr _narrow (::CORBA::Object_ptr obj);
    static DynArray_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynArray_ptr _nil ();

    virtual ::DynamicAny::AnySeq * get_elements () = 0;

    virtual void set_elements (
      const ::DynamicAny::AnySeq & value) = 0;

    virtual ::DynamicAny::DynAnySeq * get_elements_as_dyn_any () = 0;

    virtual void set_elements_as_dyn_any (
      const ::DynamicAny::DynAnySeq & value) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynArray ();

    

    virtual ~DynArray () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynArray (const DynArray &) = delete;
    DynArray (DynArray &&) = delete;
    DynArray &operator= (const DynArray &) = delete;
    DynArray &operator= (DynArray &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynArray;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNVALUECOMMON__VAR_OUT_CH_)
#define _DYNAMICANY_DYNVALUECOMMON__VAR_OUT_CH_

  class DynValueCommon;
  using DynValueCommon_ptr = DynValueCommon*;
  using DynValueCommon_var = TAO_Objref_Var_T<DynValueCommon>;
  using DynValueCommon_out = TAO_Objref_Out_T<DynValueCommon>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynValueCommon
    : public virtual ::DynamicAny::DynAny
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynValueCommon_ptr;
    using _var_type = DynValueCommon_var;
    using _out_type = DynValueCommon_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynValueCommon_ptr _duplicate (DynValueCommon_ptr obj);

    static void _tao_release (DynValueCommon_ptr obj);

    static DynValueCommon_ptr _narrow (::CORBA::Object_ptr obj);
    static DynValueCommon_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynValueCommon_ptr _nil ();

    virtual ::CORBA::Boolean is_null () = 0;

    virtual void set_to_null () = 0;

    virtual void set_to_value () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynValueCommon ();

    

    virtual ~DynValueCommon () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynValueCommon (const DynValueCommon &) = delete;
    DynValueCommon (DynValueCommon &&) = delete;
    DynValueCommon &operator= (const DynValueCommon &) = delete;
    DynValueCommon &operator= (DynValueCommon &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynValueCommon;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNVALUE__VAR_OUT_CH_)
#define _DYNAMICANY_DYNVALUE__VAR_OUT_CH_

  class DynValue;
  using DynValue_ptr = DynValue*;
  using DynValue_var = TAO_Objref_Var_T<DynValue>;
  using DynValue_out = TAO_Objref_Out_T<DynValue>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynValue
    : public virtual ::DynamicAny::DynValueCommon
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynValue_ptr;
    using _var_type = DynValue_var;
    using _out_type = DynValue_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynValue_ptr _duplicate (DynValue_ptr obj);

    static void _tao_release (DynValue_ptr obj);

    static DynValue_ptr _narrow (::CORBA::Object_ptr obj);
    static DynValue_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynValue_ptr _nil ();

    virtual char * current_member_name () = 0;

    virtual ::CORBA::TCKind current_member_kind () = 0;

    virtual ::DynamicAny::NameValuePairSeq * get_members () = 0;

    virtual void set_members (
      const ::DynamicAny::NameValuePairSeq & value) = 0;

    virtual ::DynamicAny::NameDynAnyPairSeq * get_members_as_dyn_any () = 0;

    virtual void set_members_as_dyn_any (
      const ::DynamicAny::NameDynAnyPairSeq & value) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynValue ();

    

    virtual ~DynValue () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynValue (const DynValue &) = delete;
    DynValue (DynValue &&) = delete;
    DynValue &operator= (const DynValue &) = delete;
    DynValue &operator= (DynValue &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynValue;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNVALUEBOX__VAR_OUT_CH_)
#define _DYNAMICANY_DYNVALUEBOX__VAR_OUT_CH_

  class DynValueBox;
  using DynValueBox_ptr = DynValueBox*;
  using DynValueBox_var = TAO_Objref_Var_T<DynValueBox>;
  using DynValueBox_out = TAO_Objref_Out_T<DynValueBox>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynValueBox
    : public virtual ::DynamicAny::DynValueCommon
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynValueBox_ptr;
    using _var_type = DynValueBox_var;
    using _out_type = DynValueBox_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynValueBox_ptr _duplicate (DynValueBox_ptr obj);

    static void _tao_release (DynValueBox_ptr obj);

    static DynValueBox_ptr _narrow (::CORBA::Object_ptr obj);
    static DynValueBox_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynValueBox_ptr _nil ();

    virtual ::CORBA::Any * get_boxed_value () = 0;

    virtual void set_boxed_value (
      const ::CORBA::Any & boxed) = 0;

    virtual ::DynamicAny::DynAny_ptr get_boxed_value_as_dyn_any () = 0;

    virtual void set_boxed_value_as_dyn_any (
      ::DynamicAny::DynAny_ptr boxed) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynValueBox ();

    

    virtual ~DynValueBox () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynValueBox (const DynValueBox &) = delete;
    DynValueBox (DynValueBox &&) = delete;
    DynValueBox &operator= (const DynValueBox &) = delete;
    DynValueBox &operator= (DynValueBox &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynValueBox;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

  

  class TAO_DynamicAny_Export MustTruncate : public ::CORBA::UserException
  {
  public:

    MustTruncate ();
    MustTruncate (const MustTruncate &);
    ~MustTruncate () = default;

    MustTruncate &operator= (const MustTruncate &);

    static void _tao_any_destructor (void *);

    static MustTruncate *_downcast ( ::CORBA::Exception *);
    static const MustTruncate *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_MustTruncate;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_DYNAMICANY_DYNANYFACTORY__VAR_OUT_CH_)
#define _DYNAMICANY_DYNANYFACTORY__VAR_OUT_CH_

  class DynAnyFactory;
  using DynAnyFactory_ptr = DynAnyFactory*;
  using DynAnyFactory_var = TAO_Objref_Var_T<DynAnyFactory>;
  using DynAnyFactory_out = TAO_Objref_Out_T<DynAnyFactory>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_DynamicAny_Export DynAnyFactory
    : public virtual ::CORBA::Object
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = DynAnyFactory_ptr;
    using _var_type = DynAnyFactory_var;
    using _out_type = DynAnyFactory_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DynAnyFactory_ptr _duplicate (DynAnyFactory_ptr obj);

    static void _tao_release (DynAnyFactory_ptr obj);

    static DynAnyFactory_ptr _narrow (::CORBA::Object_ptr obj);
    static DynAnyFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DynAnyFactory_ptr _nil ();
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

    

    class TAO_DynamicAny_Export InconsistentTypeCode : public ::CORBA::UserException
    {
    public:

      InconsistentTypeCode ();
      InconsistentTypeCode (const InconsistentTypeCode &);
      ~InconsistentTypeCode () = default;

      InconsistentTypeCode &operator= (const InconsistentTypeCode &);

      static void _tao_any_destructor (void *);

      static InconsistentTypeCode *_downcast ( ::CORBA::Exception *);
      static const InconsistentTypeCode *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc ();

      virtual ::CORBA::Exception *_tao_duplicate () const;

      virtual void _raise () const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_InconsistentTypeCode;

    virtual ::DynamicAny::DynAny_ptr create_dyn_any (
      const ::CORBA::Any & value) = 0;

    virtual ::DynamicAny::DynAny_ptr create_dyn_any_from_type_code (
      ::CORBA::TypeCode_ptr type) = 0;

    virtual ::DynamicAny::DynAny_ptr create_dyn_any_without_truncation (
      const ::CORBA::Any & value) = 0;

    virtual ::DynamicAny::DynAnySeq * create_multiple_dyn_anys (
      const ::DynamicAny::AnySeq & values,
      ::CORBA::Boolean allow_truncate) = 0;

    virtual ::DynamicAny::AnySeq * create_multiple_anys (
      const ::DynamicAny::DynAnySeq & values) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DynAnyFactory ();

    

    virtual ~DynAnyFactory () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    DynAnyFactory (const DynAnyFactory &) = delete;
    DynAnyFactory (DynAnyFactory &&) = delete;
    DynAnyFactory &operator= (const DynAnyFactory &) = delete;
    DynAnyFactory &operator= (DynAnyFactory &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_DynamicAny_Export ::CORBA::TypeCode_ptr const _tc_DynAnyFactory;


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module DynamicAny
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::DynamicAny::NameValuePair>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::NameValuePair,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::DynamicAny::NameValuePairSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::NameValuePairSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::DynamicAny::NameDynAnyPair>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::NameDynAnyPair,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::DynamicAny::NameDynAnyPairSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::NameDynAnyPairSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::DynamicAny::AnySeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::AnySeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::DynamicAny::DynAnySeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DynamicAny::DynAnySeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_DYNAMICANY_DYNANY__TRAITS_)
#define _DYNAMICANY_DYNANY__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynAny>
  {
    static ::DynamicAny::DynAny_ptr duplicate (::DynamicAny::DynAny_ptr p);
    static void release (::DynamicAny::DynAny_ptr p);
    static ::DynamicAny::DynAny_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynAny_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNFIXED__TRAITS_)
#define _DYNAMICANY_DYNFIXED__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynFixed>
  {
    static ::DynamicAny::DynFixed_ptr duplicate (::DynamicAny::DynFixed_ptr p);
    static void release (::DynamicAny::DynFixed_ptr p);
    static ::DynamicAny::DynFixed_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynFixed_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNENUM__TRAITS_)
#define _DYNAMICANY_DYNENUM__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynEnum>
  {
    static ::DynamicAny::DynEnum_ptr duplicate (::DynamicAny::DynEnum_ptr p);
    static void release (::DynamicAny::DynEnum_ptr p);
    static ::DynamicAny::DynEnum_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynEnum_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNSTRUCT__TRAITS_)
#define _DYNAMICANY_DYNSTRUCT__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynStruct>
  {
    static ::DynamicAny::DynStruct_ptr duplicate (::DynamicAny::DynStruct_ptr p);
    static void release (::DynamicAny::DynStruct_ptr p);
    static ::DynamicAny::DynStruct_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynStruct_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNUNION__TRAITS_)
#define _DYNAMICANY_DYNUNION__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynUnion>
  {
    static ::DynamicAny::DynUnion_ptr duplicate (::DynamicAny::DynUnion_ptr p);
    static void release (::DynamicAny::DynUnion_ptr p);
    static ::DynamicAny::DynUnion_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynUnion_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNSEQUENCE__TRAITS_)
#define _DYNAMICANY_DYNSEQUENCE__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynSequence>
  {
    static ::DynamicAny::DynSequence_ptr duplicate (::DynamicAny::DynSequence_ptr p);
    static void release (::DynamicAny::DynSequence_ptr p);
    static ::DynamicAny::DynSequence_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynSequence_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNARRAY__TRAITS_)
#define _DYNAMICANY_DYNARRAY__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynArray>
  {
    static ::DynamicAny::DynArray_ptr duplicate (::DynamicAny::DynArray_ptr p);
    static void release (::DynamicAny::DynArray_ptr p);
    static ::DynamicAny::DynArray_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynArray_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNVALUECOMMON__TRAITS_)
#define _DYNAMICANY_DYNVALUECOMMON__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynValueCommon>
  {
    static ::DynamicAny::DynValueCommon_ptr duplicate (::DynamicAny::DynValueCommon_ptr p);
    static void release (::DynamicAny::DynValueCommon_ptr p);
    static ::DynamicAny::DynValueCommon_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynValueCommon_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNVALUE__TRAITS_)
#define _DYNAMICANY_DYNVALUE__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynValue>
  {
    static ::DynamicAny::DynValue_ptr duplicate (::DynamicAny::DynValue_ptr p);
    static void release (::DynamicAny::DynValue_ptr p);
    static ::DynamicAny::DynValue_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynValue_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNVALUEBOX__TRAITS_)
#define _DYNAMICANY_DYNVALUEBOX__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynValueBox>
  {
    static ::DynamicAny::DynValueBox_ptr duplicate (::DynamicAny::DynValueBox_ptr p);
    static void release (::DynamicAny::DynValueBox_ptr p);
    static ::DynamicAny::DynValueBox_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynValueBox_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DYNAMICANY_DYNANYFACTORY__TRAITS_)
#define _DYNAMICANY_DYNANYFACTORY__TRAITS_

  template<>
  struct TAO_DynamicAny_Export Objref_Traits< ::DynamicAny::DynAnyFactory>
  {
    static ::DynamicAny::DynAnyFactory_ptr duplicate (::DynamicAny::DynAnyFactory_ptr p);
    static void release (::DynamicAny::DynAnyFactory_ptr p);
    static ::DynamicAny::DynAnyFactory_ptr nil ();
    static ::CORBA::Boolean marshal (const ::DynamicAny::DynAnyFactory_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynAny_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynAny_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynAny_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAny_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAny_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynAny_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  

  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::DynAny::InvalidValue &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::DynAny::InvalidValue*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::DynAny::InvalidValue *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::DynAny::InvalidValue &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAny::InvalidValue*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::DynAny::InvalidValue *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  

  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::DynAny::TypeMismatch &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::DynAny::TypeMismatch*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::DynAny::TypeMismatch *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::DynAny::TypeMismatch &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAny::TypeMismatch*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::DynAny::TypeMismatch *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynFixed_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynFixed_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynFixed_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynFixed_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynFixed_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynFixed_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynEnum_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynEnum_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynEnum_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynEnum_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynEnum_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynEnum_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::NameValuePair &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::NameValuePair*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::NameValuePair *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::NameValuePair &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::NameValuePair*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::NameValuePair *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const ::DynamicAny::NameValuePairSeq &); // copying version
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, ::DynamicAny::NameValuePairSeq*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::NameValuePairSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const DynamicAny::NameValuePairSeq &); // copying version
TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynamicAny::NameValuePairSeq*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::NameValuePairSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::NameDynAnyPair &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::NameDynAnyPair*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::NameDynAnyPair *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::NameDynAnyPair &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::NameDynAnyPair*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::NameDynAnyPair *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const ::DynamicAny::NameDynAnyPairSeq &); // copying version
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, ::DynamicAny::NameDynAnyPairSeq*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::NameDynAnyPairSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const DynamicAny::NameDynAnyPairSeq &); // copying version
TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynamicAny::NameDynAnyPairSeq*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::NameDynAnyPairSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynStruct_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynStruct_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynStruct_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynStruct_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynStruct_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynStruct_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynUnion_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynUnion_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynUnion_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynUnion_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynUnion_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynUnion_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const ::DynamicAny::AnySeq &); // copying version
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, ::DynamicAny::AnySeq*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::AnySeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const DynamicAny::AnySeq &); // copying version
TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynamicAny::AnySeq*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::AnySeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const ::DynamicAny::DynAnySeq &); // copying version
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, ::DynamicAny::DynAnySeq*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::DynAnySeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, const DynamicAny::DynAnySeq &); // copying version
TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynamicAny::DynAnySeq*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::DynAnySeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynSequence_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynSequence_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynSequence_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynSequence_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynSequence_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynSequence_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynArray_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynArray_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynArray_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynArray_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynArray_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynArray_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValueCommon_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValueCommon_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynValueCommon_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValueCommon_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValueCommon_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynValueCommon_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValue_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValue_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynValue_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValue_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValue_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynValue_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValueBox_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynValueBox_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynValueBox_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValueBox_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynValueBox_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynValueBox_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  

  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::MustTruncate &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::MustTruncate*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::MustTruncate *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::MustTruncate &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::MustTruncate*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::MustTruncate *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynAnyFactory_ptr); // copying
  TAO_DynamicAny_Export void operator<<= ( ::CORBA::Any &, DynAnyFactory_ptr *); // non-copying
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynAnyFactory_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAnyFactory_ptr); // copying
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAnyFactory_ptr *); // non-copying
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DynamicAny::DynAnyFactory_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DynamicAny
{
  

  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const ::DynamicAny::DynAnyFactory::InconsistentTypeCode &); // copying version
  TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, ::DynamicAny::DynAnyFactory::InconsistentTypeCode*); // noncopying version
  TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DynamicAny::DynAnyFactory::InconsistentTypeCode *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, const DynamicAny::DynAnyFactory::InconsistentTypeCode &); // copying version
TAO_DynamicAny_Export void operator<<= (::CORBA::Any &, DynamicAny::DynAnyFactory::InconsistentTypeCode*); // noncopying version
TAO_DynamicAny_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DynamicAny::DynAnyFactory::InconsistentTypeCode *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_DynamicAny_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DynamicAny::NameValuePair &);
TAO_DynamicAny_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DynamicAny::NameValuePair &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_DynamicAny_NameValuePairSeq_H_
#define _TAO_CDR_OP_DynamicAny_NameValuePairSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_DynamicAny_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DynamicAny::NameValuePairSeq &_tao_sequence);
TAO_DynamicAny_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DynamicAny::NameValuePairSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_DynamicAny_NameValuePairSeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_DynamicAny_AnySeq_H_
#define _TAO_CDR_OP_DynamicAny_AnySeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_DynamicAny_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DynamicAny::AnySeq &_tao_sequence);
TAO_DynamicAny_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DynamicAny::AnySeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_DynamicAny_AnySeq_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:36



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_DynamicAny_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DynamicAny::MustTruncate &);
TAO_DynamicAny_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DynamicAny::MustTruncate &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */

