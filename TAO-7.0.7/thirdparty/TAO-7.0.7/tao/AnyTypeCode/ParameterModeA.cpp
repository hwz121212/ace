// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

#include "ParameterModeA.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Enum_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any_Basic_Impl_T.h"

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\enum_typecode.cpp:27

static char const * const _tao_enumerators_CORBA_ParameterMode[] =
  {
    "PARAM_IN",
    "PARAM_OUT",
    "PARAM_INOUT"
    
  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ParameterMode (
    "IDL:omg.org/CORBA/ParameterMode:1.0",
    "ParameterMode",
    _tao_enumerators_CORBA_ParameterMode,
    3);
  

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ParameterMode =
    &_tao_tc_CORBA_ParameterMode;
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\any_op_cs.cpp:34



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CORBA
{
  void operator<<= (
      ::CORBA::Any &_tao_any,
      ::CORBA::ParameterMode _tao_elem)
  {
    TAO::Any_Basic_Impl_T< ::CORBA::ParameterMode>::insert (
        _tao_any,
        ::CORBA::_tc_ParameterMode,
        _tao_elem);
  }

  ::CORBA::Boolean operator>>= (
      const ::CORBA::Any &_tao_any,
      ::CORBA::ParameterMode &_tao_elem)
  {
    return
      TAO::Any_Basic_Impl_T< ::CORBA::ParameterMode>::extract (
          _tao_any,
          ::CORBA::_tc_ParameterMode,
          _tao_elem);
  }
}

#else


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

void operator<<= (
    ::CORBA::Any &_tao_any,
    CORBA::ParameterMode _tao_elem)
{
  TAO::Any_Basic_Impl_T<CORBA::ParameterMode>::insert (
      _tao_any,
      CORBA::_tc_ParameterMode,
      _tao_elem);
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    CORBA::ParameterMode &_tao_elem)
{
  return
    TAO::Any_Basic_Impl_T<CORBA::ParameterMode>::extract (
        _tao_any,
        CORBA::_tc_ParameterMode,
        _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

TAO_END_VERSIONED_NAMESPACE_DECL


