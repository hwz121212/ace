// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:363


#include "CONV_FRAMEC.h"
#include "tao/CDR.h"

TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_cs.cpp:104



#if !defined (_CONV_FRAME_CODESETIDSEQ_CS_)
#define _CONV_FRAME_CODESETIDSEQ_CS_

CONV_FRAME::CodeSetIdSeq::CodeSetIdSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< CodeSetId> (max)
{}

CONV_FRAME::CodeSetIdSeq::CodeSetIdSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::ULong * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< CodeSetId>
    (max, length, buffer, release)
{}

void CONV_FRAME::CodeSetIdSeq::_tao_any_destructor (
    void * _tao_void_pointer)
{
  CodeSetIdSeq * _tao_tmp_pointer =
    static_cast<CodeSetIdSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_cs.cpp:55

void
CONV_FRAME::CodeSetComponent::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CodeSetComponent *_tao_tmp_pointer =
    static_cast<CodeSetComponent *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_cs.cpp:55

void
CONV_FRAME::CodeSetComponentInfo::_tao_any_destructor (
    void *_tao_void_pointer)
{
  CodeSetComponentInfo *_tao_tmp_pointer =
    static_cast<CodeSetComponentInfo *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_CONV_FRAME_CodeSetIdSeq_CPP_
#define _TAO_CDR_OP_CONV_FRAME_CodeSetIdSeq_CPP_


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CONV_FRAME::CodeSetIdSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CONV_FRAME::CodeSetIdSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


#endif /* _TAO_CDR_OP_CONV_FRAME_CodeSetIdSeq_CPP_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_cs.cpp:48



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CONV_FRAME::CodeSetComponent &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.native_code_set) &&
    (strm << _tao_aggregate.conversion_code_sets);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CONV_FRAME::CodeSetComponent &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.native_code_set) &&
    (strm >> _tao_aggregate.conversion_code_sets);
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_cs.cpp:48



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CONV_FRAME::CodeSetComponentInfo &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.ForCharData) &&
    (strm << _tao_aggregate.ForWcharData);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CONV_FRAME::CodeSetComponentInfo &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.ForCharData) &&
    (strm >> _tao_aggregate.ForWcharData);
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





TAO_END_VERSIONED_NAMESPACE_DECL


