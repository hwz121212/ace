// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_MESSAGING_NO_IMPLC_LIC6MP_H_
#define _TAO_PIDL_MESSAGING_NO_IMPLC_LIC6MP_H_

#include /**/ "ace/pre.h"

#ifndef TAO_MESSAGING_SAFE_INCLUDE
#error You should not include Messaging_No_ImplC.h, use tao/Messaging/Messaging.h
#endif /* TAO_MESSAGING_SAFE_INCLUDE */

#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/Messaging/messaging_export.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/TimeBaseC.h"
#include "tao/PolicyC.h"
#include "tao/Messaging/Messaging_TypesC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace Messaging
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:366

  typedef ::CORBA::Short Priority;
  typedef ::CORBA::Short_out Priority_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:366

  typedef ::CORBA::Short RebindMode;
  typedef ::CORBA::Short_out RebindMode_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::Short TRANSPARENT = 0;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::Short NO_REBIND = 1;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::Short NO_RECONNECT = 2;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:366

  typedef ::CORBA::Short RoutingType;
  typedef ::CORBA::Short_out RoutingType_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::Short ROUTE_NONE = 0;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::Short ROUTE_FORWARD = 1;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::Short ROUTE_STORE_AND_FORWARD = 2;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:366

  typedef ::CORBA::UShort Ordering;
  typedef ::CORBA::UShort_out Ordering_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::UShort ORDER_ANY = 1U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::UShort ORDER_TEMPORAL = 2U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::UShort ORDER_PRIORITY = 4U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::UShort ORDER_DEADLINE = 8U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_REBINDPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REBINDPOLICY__VAR_OUT_CH_

  class RebindPolicy;
  using RebindPolicy_ptr = RebindPolicy*;
  using RebindPolicy_var = TAO_Objref_Var_T<RebindPolicy>;
  using RebindPolicy_out = TAO_Objref_Out_T<RebindPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export RebindPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = RebindPolicy_ptr;
    using _var_type = RebindPolicy_var;
    using _out_type = RebindPolicy_out;

    // The static operations.
    static RebindPolicy_ptr _duplicate (RebindPolicy_ptr obj);

    static void _tao_release (RebindPolicy_ptr obj);

    static RebindPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RebindPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RebindPolicy_ptr _nil ();

    virtual ::Messaging::RebindMode rebind_mode () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RebindPolicy ();

    

    virtual ~RebindPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    RebindPolicy (const RebindPolicy &) = delete;
    RebindPolicy (RebindPolicy &&) = delete;
    RebindPolicy &operator= (const RebindPolicy &) = delete;
    RebindPolicy &operator= (RebindPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct PriorityRange;
  using PriorityRange_var = ::TAO_Fixed_Var_T<PriorityRange>;
  using PriorityRange_out = PriorityRange&;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_Messaging_Export PriorityRange
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = PriorityRange_var;
    using _out_type = PriorityRange_out;

    static void _tao_any_destructor (void *);
    
    Messaging::Priority min;
    Messaging::Priority max;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_REQUESTPRIORITYPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REQUESTPRIORITYPOLICY__VAR_OUT_CH_

  class RequestPriorityPolicy;
  using RequestPriorityPolicy_ptr = RequestPriorityPolicy*;
  using RequestPriorityPolicy_var = TAO_Objref_Var_T<RequestPriorityPolicy>;
  using RequestPriorityPolicy_out = TAO_Objref_Out_T<RequestPriorityPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export RequestPriorityPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = RequestPriorityPolicy_ptr;
    using _var_type = RequestPriorityPolicy_var;
    using _out_type = RequestPriorityPolicy_out;

    // The static operations.
    static RequestPriorityPolicy_ptr _duplicate (RequestPriorityPolicy_ptr obj);

    static void _tao_release (RequestPriorityPolicy_ptr obj);

    static RequestPriorityPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestPriorityPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestPriorityPolicy_ptr _nil ();

    virtual ::Messaging::PriorityRange priority_range () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestPriorityPolicy ();

    

    virtual ~RequestPriorityPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    RequestPriorityPolicy (const RequestPriorityPolicy &) = delete;
    RequestPriorityPolicy (RequestPriorityPolicy &&) = delete;
    RequestPriorityPolicy &operator= (const RequestPriorityPolicy &) = delete;
    RequestPriorityPolicy &operator= (RequestPriorityPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_REPLYPRIORITYPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REPLYPRIORITYPOLICY__VAR_OUT_CH_

  class ReplyPriorityPolicy;
  using ReplyPriorityPolicy_ptr = ReplyPriorityPolicy*;
  using ReplyPriorityPolicy_var = TAO_Objref_Var_T<ReplyPriorityPolicy>;
  using ReplyPriorityPolicy_out = TAO_Objref_Out_T<ReplyPriorityPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export ReplyPriorityPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ReplyPriorityPolicy_ptr;
    using _var_type = ReplyPriorityPolicy_var;
    using _out_type = ReplyPriorityPolicy_out;

    // The static operations.
    static ReplyPriorityPolicy_ptr _duplicate (ReplyPriorityPolicy_ptr obj);

    static void _tao_release (ReplyPriorityPolicy_ptr obj);

    static ReplyPriorityPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ReplyPriorityPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReplyPriorityPolicy_ptr _nil ();

    virtual ::Messaging::PriorityRange priority_range () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ReplyPriorityPolicy ();

    

    virtual ~ReplyPriorityPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReplyPriorityPolicy (const ReplyPriorityPolicy &) = delete;
    ReplyPriorityPolicy (ReplyPriorityPolicy &&) = delete;
    ReplyPriorityPolicy &operator= (const ReplyPriorityPolicy &) = delete;
    ReplyPriorityPolicy &operator= (ReplyPriorityPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_REQUESTSTARTTIMEPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REQUESTSTARTTIMEPOLICY__VAR_OUT_CH_

  class RequestStartTimePolicy;
  using RequestStartTimePolicy_ptr = RequestStartTimePolicy*;
  using RequestStartTimePolicy_var = TAO_Objref_Var_T<RequestStartTimePolicy>;
  using RequestStartTimePolicy_out = TAO_Objref_Out_T<RequestStartTimePolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export RequestStartTimePolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = RequestStartTimePolicy_ptr;
    using _var_type = RequestStartTimePolicy_var;
    using _out_type = RequestStartTimePolicy_out;

    // The static operations.
    static RequestStartTimePolicy_ptr _duplicate (RequestStartTimePolicy_ptr obj);

    static void _tao_release (RequestStartTimePolicy_ptr obj);

    static RequestStartTimePolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestStartTimePolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestStartTimePolicy_ptr _nil ();

    virtual ::TimeBase::UtcT start_time () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestStartTimePolicy ();

    

    virtual ~RequestStartTimePolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    RequestStartTimePolicy (const RequestStartTimePolicy &) = delete;
    RequestStartTimePolicy (RequestStartTimePolicy &&) = delete;
    RequestStartTimePolicy &operator= (const RequestStartTimePolicy &) = delete;
    RequestStartTimePolicy &operator= (RequestStartTimePolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_REQUESTENDTIMEPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REQUESTENDTIMEPOLICY__VAR_OUT_CH_

  class RequestEndTimePolicy;
  using RequestEndTimePolicy_ptr = RequestEndTimePolicy*;
  using RequestEndTimePolicy_var = TAO_Objref_Var_T<RequestEndTimePolicy>;
  using RequestEndTimePolicy_out = TAO_Objref_Out_T<RequestEndTimePolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export RequestEndTimePolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = RequestEndTimePolicy_ptr;
    using _var_type = RequestEndTimePolicy_var;
    using _out_type = RequestEndTimePolicy_out;

    // The static operations.
    static RequestEndTimePolicy_ptr _duplicate (RequestEndTimePolicy_ptr obj);

    static void _tao_release (RequestEndTimePolicy_ptr obj);

    static RequestEndTimePolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestEndTimePolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestEndTimePolicy_ptr _nil ();

    virtual ::TimeBase::UtcT end_time () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestEndTimePolicy ();

    

    virtual ~RequestEndTimePolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    RequestEndTimePolicy (const RequestEndTimePolicy &) = delete;
    RequestEndTimePolicy (RequestEndTimePolicy &&) = delete;
    RequestEndTimePolicy &operator= (const RequestEndTimePolicy &) = delete;
    RequestEndTimePolicy &operator= (RequestEndTimePolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_REPLYSTARTTIMEPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REPLYSTARTTIMEPOLICY__VAR_OUT_CH_

  class ReplyStartTimePolicy;
  using ReplyStartTimePolicy_ptr = ReplyStartTimePolicy*;
  using ReplyStartTimePolicy_var = TAO_Objref_Var_T<ReplyStartTimePolicy>;
  using ReplyStartTimePolicy_out = TAO_Objref_Out_T<ReplyStartTimePolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export ReplyStartTimePolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ReplyStartTimePolicy_ptr;
    using _var_type = ReplyStartTimePolicy_var;
    using _out_type = ReplyStartTimePolicy_out;

    // The static operations.
    static ReplyStartTimePolicy_ptr _duplicate (ReplyStartTimePolicy_ptr obj);

    static void _tao_release (ReplyStartTimePolicy_ptr obj);

    static ReplyStartTimePolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ReplyStartTimePolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReplyStartTimePolicy_ptr _nil ();

    virtual ::TimeBase::UtcT start_time () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ReplyStartTimePolicy ();

    

    virtual ~ReplyStartTimePolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReplyStartTimePolicy (const ReplyStartTimePolicy &) = delete;
    ReplyStartTimePolicy (ReplyStartTimePolicy &&) = delete;
    ReplyStartTimePolicy &operator= (const ReplyStartTimePolicy &) = delete;
    ReplyStartTimePolicy &operator= (ReplyStartTimePolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_REPLYENDTIMEPOLICY__VAR_OUT_CH_)
#define _MESSAGING_REPLYENDTIMEPOLICY__VAR_OUT_CH_

  class ReplyEndTimePolicy;
  using ReplyEndTimePolicy_ptr = ReplyEndTimePolicy*;
  using ReplyEndTimePolicy_var = TAO_Objref_Var_T<ReplyEndTimePolicy>;
  using ReplyEndTimePolicy_out = TAO_Objref_Out_T<ReplyEndTimePolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export ReplyEndTimePolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ReplyEndTimePolicy_ptr;
    using _var_type = ReplyEndTimePolicy_var;
    using _out_type = ReplyEndTimePolicy_out;

    // The static operations.
    static ReplyEndTimePolicy_ptr _duplicate (ReplyEndTimePolicy_ptr obj);

    static void _tao_release (ReplyEndTimePolicy_ptr obj);

    static ReplyEndTimePolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ReplyEndTimePolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReplyEndTimePolicy_ptr _nil ();

    virtual ::TimeBase::UtcT end_time () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ReplyEndTimePolicy ();

    

    virtual ~ReplyEndTimePolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReplyEndTimePolicy (const ReplyEndTimePolicy &) = delete;
    ReplyEndTimePolicy (ReplyEndTimePolicy &&) = delete;
    ReplyEndTimePolicy &operator= (const ReplyEndTimePolicy &) = delete;
    ReplyEndTimePolicy &operator= (ReplyEndTimePolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__VAR_OUT_CH_)
#define _MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__VAR_OUT_CH_

  class RelativeRequestTimeoutPolicy;
  using RelativeRequestTimeoutPolicy_ptr = RelativeRequestTimeoutPolicy*;
  using RelativeRequestTimeoutPolicy_var = TAO_Objref_Var_T<RelativeRequestTimeoutPolicy>;
  using RelativeRequestTimeoutPolicy_out = TAO_Objref_Out_T<RelativeRequestTimeoutPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export RelativeRequestTimeoutPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = RelativeRequestTimeoutPolicy_ptr;
    using _var_type = RelativeRequestTimeoutPolicy_var;
    using _out_type = RelativeRequestTimeoutPolicy_out;

    // The static operations.
    static RelativeRequestTimeoutPolicy_ptr _duplicate (RelativeRequestTimeoutPolicy_ptr obj);

    static void _tao_release (RelativeRequestTimeoutPolicy_ptr obj);

    static RelativeRequestTimeoutPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RelativeRequestTimeoutPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RelativeRequestTimeoutPolicy_ptr _nil ();

    virtual ::TimeBase::TimeT relative_expiry () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RelativeRequestTimeoutPolicy ();

    

    virtual ~RelativeRequestTimeoutPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    RelativeRequestTimeoutPolicy (const RelativeRequestTimeoutPolicy &) = delete;
    RelativeRequestTimeoutPolicy (RelativeRequestTimeoutPolicy &&) = delete;
    RelativeRequestTimeoutPolicy &operator= (const RelativeRequestTimeoutPolicy &) = delete;
    RelativeRequestTimeoutPolicy &operator= (RelativeRequestTimeoutPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct RoutingTypeRange;
  using RoutingTypeRange_var = ::TAO_Fixed_Var_T<RoutingTypeRange>;
  using RoutingTypeRange_out = RoutingTypeRange&;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_Messaging_Export RoutingTypeRange
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = RoutingTypeRange_var;
    using _out_type = RoutingTypeRange_out;

    static void _tao_any_destructor (void *);
    
    Messaging::RoutingType min;
    Messaging::RoutingType max;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_ROUTINGPOLICY__VAR_OUT_CH_)
#define _MESSAGING_ROUTINGPOLICY__VAR_OUT_CH_

  class RoutingPolicy;
  using RoutingPolicy_ptr = RoutingPolicy*;
  using RoutingPolicy_var = TAO_Objref_Var_T<RoutingPolicy>;
  using RoutingPolicy_out = TAO_Objref_Out_T<RoutingPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export RoutingPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = RoutingPolicy_ptr;
    using _var_type = RoutingPolicy_var;
    using _out_type = RoutingPolicy_out;

    // The static operations.
    static RoutingPolicy_ptr _duplicate (RoutingPolicy_ptr obj);

    static void _tao_release (RoutingPolicy_ptr obj);

    static RoutingPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static RoutingPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RoutingPolicy_ptr _nil ();

    virtual ::Messaging::RoutingTypeRange routing_range () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RoutingPolicy ();

    

    virtual ~RoutingPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    RoutingPolicy (const RoutingPolicy &) = delete;
    RoutingPolicy (RoutingPolicy &&) = delete;
    RoutingPolicy &operator= (const RoutingPolicy &) = delete;
    RoutingPolicy &operator= (RoutingPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_MAXHOPSPOLICY__VAR_OUT_CH_)
#define _MESSAGING_MAXHOPSPOLICY__VAR_OUT_CH_

  class MaxHopsPolicy;
  using MaxHopsPolicy_ptr = MaxHopsPolicy*;
  using MaxHopsPolicy_var = TAO_Objref_Var_T<MaxHopsPolicy>;
  using MaxHopsPolicy_out = TAO_Objref_Out_T<MaxHopsPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export MaxHopsPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = MaxHopsPolicy_ptr;
    using _var_type = MaxHopsPolicy_var;
    using _out_type = MaxHopsPolicy_out;

    // The static operations.
    static MaxHopsPolicy_ptr _duplicate (MaxHopsPolicy_ptr obj);

    static void _tao_release (MaxHopsPolicy_ptr obj);

    static MaxHopsPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static MaxHopsPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static MaxHopsPolicy_ptr _nil ();

    virtual ::CORBA::UShort max_hops () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    MaxHopsPolicy ();

    

    virtual ~MaxHopsPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    MaxHopsPolicy (const MaxHopsPolicy &) = delete;
    MaxHopsPolicy (MaxHopsPolicy &&) = delete;
    MaxHopsPolicy &operator= (const MaxHopsPolicy &) = delete;
    MaxHopsPolicy &operator= (MaxHopsPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_MESSAGING_QUEUEORDERPOLICY__VAR_OUT_CH_)
#define _MESSAGING_QUEUEORDERPOLICY__VAR_OUT_CH_

  class QueueOrderPolicy;
  using QueueOrderPolicy_ptr = QueueOrderPolicy*;
  using QueueOrderPolicy_var = TAO_Objref_Var_T<QueueOrderPolicy>;
  using QueueOrderPolicy_out = TAO_Objref_Out_T<QueueOrderPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_Messaging_Export QueueOrderPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = QueueOrderPolicy_ptr;
    using _var_type = QueueOrderPolicy_var;
    using _out_type = QueueOrderPolicy_out;

    // The static operations.
    static QueueOrderPolicy_ptr _duplicate (QueueOrderPolicy_ptr obj);

    static void _tao_release (QueueOrderPolicy_ptr obj);

    static QueueOrderPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static QueueOrderPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static QueueOrderPolicy_ptr _nil ();

    virtual ::Messaging::Ordering allowed_orders () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    QueueOrderPolicy ();

    

    virtual ~QueueOrderPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    QueueOrderPolicy (const QueueOrderPolicy &) = delete;
    QueueOrderPolicy (QueueOrderPolicy &&) = delete;
    QueueOrderPolicy &operator= (const QueueOrderPolicy &) = delete;
    QueueOrderPolicy &operator= (QueueOrderPolicy &&) = delete;
  };


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module Messaging
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::Messaging::PriorityRange>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Messaging::PriorityRange,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::Messaging::RoutingTypeRange>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Messaging::RoutingTypeRange,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_MESSAGING_REBINDPOLICY__TRAITS_)
#define _MESSAGING_REBINDPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RebindPolicy>
  {
    static ::Messaging::RebindPolicy_ptr duplicate (::Messaging::RebindPolicy_ptr p);
    static void release (::Messaging::RebindPolicy_ptr p);
    static ::Messaging::RebindPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::RebindPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REQUESTPRIORITYPOLICY__TRAITS_)
#define _MESSAGING_REQUESTPRIORITYPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RequestPriorityPolicy>
  {
    static ::Messaging::RequestPriorityPolicy_ptr duplicate (::Messaging::RequestPriorityPolicy_ptr p);
    static void release (::Messaging::RequestPriorityPolicy_ptr p);
    static ::Messaging::RequestPriorityPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::RequestPriorityPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REPLYPRIORITYPOLICY__TRAITS_)
#define _MESSAGING_REPLYPRIORITYPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::ReplyPriorityPolicy>
  {
    static ::Messaging::ReplyPriorityPolicy_ptr duplicate (::Messaging::ReplyPriorityPolicy_ptr p);
    static void release (::Messaging::ReplyPriorityPolicy_ptr p);
    static ::Messaging::ReplyPriorityPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::ReplyPriorityPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REQUESTSTARTTIMEPOLICY__TRAITS_)
#define _MESSAGING_REQUESTSTARTTIMEPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RequestStartTimePolicy>
  {
    static ::Messaging::RequestStartTimePolicy_ptr duplicate (::Messaging::RequestStartTimePolicy_ptr p);
    static void release (::Messaging::RequestStartTimePolicy_ptr p);
    static ::Messaging::RequestStartTimePolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::RequestStartTimePolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REQUESTENDTIMEPOLICY__TRAITS_)
#define _MESSAGING_REQUESTENDTIMEPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RequestEndTimePolicy>
  {
    static ::Messaging::RequestEndTimePolicy_ptr duplicate (::Messaging::RequestEndTimePolicy_ptr p);
    static void release (::Messaging::RequestEndTimePolicy_ptr p);
    static ::Messaging::RequestEndTimePolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::RequestEndTimePolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REPLYSTARTTIMEPOLICY__TRAITS_)
#define _MESSAGING_REPLYSTARTTIMEPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::ReplyStartTimePolicy>
  {
    static ::Messaging::ReplyStartTimePolicy_ptr duplicate (::Messaging::ReplyStartTimePolicy_ptr p);
    static void release (::Messaging::ReplyStartTimePolicy_ptr p);
    static ::Messaging::ReplyStartTimePolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::ReplyStartTimePolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_REPLYENDTIMEPOLICY__TRAITS_)
#define _MESSAGING_REPLYENDTIMEPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::ReplyEndTimePolicy>
  {
    static ::Messaging::ReplyEndTimePolicy_ptr duplicate (::Messaging::ReplyEndTimePolicy_ptr p);
    static void release (::Messaging::ReplyEndTimePolicy_ptr p);
    static ::Messaging::ReplyEndTimePolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::ReplyEndTimePolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__TRAITS_)
#define _MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RelativeRequestTimeoutPolicy>
  {
    static ::Messaging::RelativeRequestTimeoutPolicy_ptr duplicate (::Messaging::RelativeRequestTimeoutPolicy_ptr p);
    static void release (::Messaging::RelativeRequestTimeoutPolicy_ptr p);
    static ::Messaging::RelativeRequestTimeoutPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::RelativeRequestTimeoutPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_ROUTINGPOLICY__TRAITS_)
#define _MESSAGING_ROUTINGPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::RoutingPolicy>
  {
    static ::Messaging::RoutingPolicy_ptr duplicate (::Messaging::RoutingPolicy_ptr p);
    static void release (::Messaging::RoutingPolicy_ptr p);
    static ::Messaging::RoutingPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::RoutingPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_MAXHOPSPOLICY__TRAITS_)
#define _MESSAGING_MAXHOPSPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::MaxHopsPolicy>
  {
    static ::Messaging::MaxHopsPolicy_ptr duplicate (::Messaging::MaxHopsPolicy_ptr p);
    static void release (::Messaging::MaxHopsPolicy_ptr p);
    static ::Messaging::MaxHopsPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::MaxHopsPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGING_QUEUEORDERPOLICY__TRAITS_)
#define _MESSAGING_QUEUEORDERPOLICY__TRAITS_

  template<>
  struct TAO_Messaging_Export Objref_Traits< ::Messaging::QueueOrderPolicy>
  {
    static ::Messaging::QueueOrderPolicy_ptr duplicate (::Messaging::QueueOrderPolicy_ptr p);
    static void release (::Messaging::QueueOrderPolicy_ptr p);
    static ::Messaging::QueueOrderPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Messaging::QueueOrderPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Messaging_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::PriorityRange &);
TAO_Messaging_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::PriorityRange &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Messaging_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::RoutingTypeRange &);
TAO_Messaging_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::RoutingTypeRange &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */

