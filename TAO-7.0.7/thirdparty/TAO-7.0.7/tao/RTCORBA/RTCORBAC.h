// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_RTCORBAC_L2H10T_H_
#define _TAO_PIDL_RTCORBAC_L2H10T_H_

#include /**/ "ace/pre.h"

#ifndef TAO_RTCORBA_SAFE_INCLUDE
#error You should not include RTCORBAC.h, use tao/RTCORBA/RTCORBA.h
#endif /* TAO_RTCORBA_SAFE_INCLUDE */

#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/RTCORBA/rtcorba_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/IOPA.h"
#include "tao/AnyTypeCode/TimeBaseA.h"
#include "tao/AnyTypeCode/PolicyA.h"
#include "tao/RTCORBA/RT_ProtocolPropertiesA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/IOPC.h"
#include "tao/TimeBaseC.h"
#include "tao/PolicyC.h"
#include "tao/RTCORBA/RT_ProtocolPropertiesC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace RTCORBA
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:366

  typedef ::CORBA::Short NativePriority;
  typedef ::CORBA::Short_out NativePriority_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_NativePriority;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:366

  typedef ::CORBA::Short Priority;
  typedef ::CORBA::Short_out Priority_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_Priority;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::Short minPriority = 0;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::Short maxPriority = 32767;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_native\native_ch.cpp:38

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_native\native_ch.cpp:38

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:366

  typedef ::CORBA::Long NetworkPriority;
  typedef ::CORBA::Long_out NetworkPriority_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_NetworkPriority;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_native\native_ch.cpp:38

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:366

  typedef ::CORBA::ULong ThreadpoolId;
  typedef ::CORBA::ULong_out ThreadpoolId_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ThreadpoolId;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct ThreadpoolLane;
  using ThreadpoolLane_var = ::TAO_Fixed_Var_T<ThreadpoolLane>;
  using ThreadpoolLane_out = ThreadpoolLane&;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_RTCORBA_Export ThreadpoolLane
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ThreadpoolLane_var;
    using _out_type = ThreadpoolLane_out;

    static void _tao_any_destructor (void *);
    
    RTCORBA::Priority lane_priority;
    ::CORBA::ULong static_threads;
    ::CORBA::ULong dynamic_threads;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ThreadpoolLane;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_RTCORBA_THREADPOOLLANES_CH_)
#define _RTCORBA_THREADPOOLLANES_CH_

  class ThreadpoolLanes;
  typedef ::TAO_FixedSeq_Var_T<ThreadpoolLanes> ThreadpoolLanes_var;
  typedef ::TAO_Seq_Out_T<ThreadpoolLanes> ThreadpoolLanes_out;
  

  class TAO_RTCORBA_Export ThreadpoolLanes
    : public
        ::TAO::unbounded_value_sequence< ThreadpoolLane>
  {
  public:
    ThreadpoolLanes () = default;
    ThreadpoolLanes ( ::CORBA::ULong max);
    ThreadpoolLanes (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ThreadpoolLane* buffer,
      ::CORBA::Boolean release = false);
    ThreadpoolLanes (const ThreadpoolLanes &) = default;
    ThreadpoolLanes (ThreadpoolLanes &&) = default;
    ThreadpoolLanes& operator= (const ThreadpoolLanes &) = default;
    ThreadpoolLanes& operator= (ThreadpoolLanes &&) = default;
    virtual ~ThreadpoolLanes () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ThreadpoolLanes_var;
    using _out_type = ThreadpoolLanes_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ThreadpoolLanes;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::ULong PRIORITY_MODEL_POLICY_TYPE = 40U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\enum_ch.cpp:39

  enum PriorityModel
  {
    CLIENT_PROPAGATED,
    SERVER_DECLARED
  };

  typedef PriorityModel &PriorityModel_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityModel;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_PRIORITYMODELPOLICY__VAR_OUT_CH_)
#define _RTCORBA_PRIORITYMODELPOLICY__VAR_OUT_CH_

  class PriorityModelPolicy;
  using PriorityModelPolicy_ptr = PriorityModelPolicy*;
  using PriorityModelPolicy_var = TAO_Objref_Var_T<PriorityModelPolicy>;
  using PriorityModelPolicy_out = TAO_Objref_Out_T<PriorityModelPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export PriorityModelPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = PriorityModelPolicy_ptr;
    using _var_type = PriorityModelPolicy_var;
    using _out_type = PriorityModelPolicy_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PriorityModelPolicy_ptr _duplicate (PriorityModelPolicy_ptr obj);

    static void _tao_release (PriorityModelPolicy_ptr obj);

    static PriorityModelPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static PriorityModelPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PriorityModelPolicy_ptr _nil ();

    virtual ::RTCORBA::PriorityModel priority_model () = 0;

    virtual ::RTCORBA::Priority server_priority () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    PriorityModelPolicy ();

    

    virtual ~PriorityModelPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    PriorityModelPolicy (const PriorityModelPolicy &) = delete;
    PriorityModelPolicy (PriorityModelPolicy &&) = delete;
    PriorityModelPolicy &operator= (const PriorityModelPolicy &) = delete;
    PriorityModelPolicy &operator= (PriorityModelPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityModelPolicy;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::ULong THREADPOOL_POLICY_TYPE = 41U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_THREADPOOLPOLICY__VAR_OUT_CH_)
#define _RTCORBA_THREADPOOLPOLICY__VAR_OUT_CH_

  class ThreadpoolPolicy;
  using ThreadpoolPolicy_ptr = ThreadpoolPolicy*;
  using ThreadpoolPolicy_var = TAO_Objref_Var_T<ThreadpoolPolicy>;
  using ThreadpoolPolicy_out = TAO_Objref_Out_T<ThreadpoolPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export ThreadpoolPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ThreadpoolPolicy_ptr;
    using _var_type = ThreadpoolPolicy_var;
    using _out_type = ThreadpoolPolicy_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ThreadpoolPolicy_ptr _duplicate (ThreadpoolPolicy_ptr obj);

    static void _tao_release (ThreadpoolPolicy_ptr obj);

    static ThreadpoolPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ThreadpoolPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ThreadpoolPolicy_ptr _nil ();

    virtual ::RTCORBA::ThreadpoolId threadpool () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ThreadpoolPolicy ();

    

    virtual ~ThreadpoolPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ThreadpoolPolicy (const ThreadpoolPolicy &) = delete;
    ThreadpoolPolicy (ThreadpoolPolicy &&) = delete;
    ThreadpoolPolicy &operator= (const ThreadpoolPolicy &) = delete;
    ThreadpoolPolicy &operator= (ThreadpoolPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ThreadpoolPolicy;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct Protocol;
  using Protocol_var = ::TAO_Var_Var_T<Protocol>;
  using Protocol_out = ::TAO_Out_T<Protocol>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_RTCORBA_Export Protocol
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = Protocol_var;
    using _out_type = Protocol_out;

    static void _tao_any_destructor (void *);
    
    IOP::ProfileId protocol_type;
    RTCORBA::ProtocolProperties_var orb_protocol_properties;
    RTCORBA::ProtocolProperties_var transport_protocol_properties;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_Protocol;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_RTCORBA_PROTOCOLLIST_CH_)
#define _RTCORBA_PROTOCOLLIST_CH_

  class ProtocolList;
  typedef ::TAO_VarSeq_Var_T<ProtocolList> ProtocolList_var;
  typedef ::TAO_Seq_Out_T<ProtocolList> ProtocolList_out;
  

  class TAO_RTCORBA_Export ProtocolList
    : public
        ::TAO::unbounded_value_sequence< Protocol>
  {
  public:
    ProtocolList () = default;
    ProtocolList ( ::CORBA::ULong max);
    ProtocolList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Protocol* buffer,
      ::CORBA::Boolean release = false);
    ProtocolList (const ProtocolList &) = default;
    ProtocolList (ProtocolList &&) = default;
    ProtocolList& operator= (const ProtocolList &) = default;
    ProtocolList& operator= (ProtocolList &&) = default;
    virtual ~ProtocolList () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ProtocolList_var;
    using _out_type = ProtocolList_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ProtocolList;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::ULong SERVER_PROTOCOL_POLICY_TYPE = 42U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_SERVERPROTOCOLPOLICY__VAR_OUT_CH_)
#define _RTCORBA_SERVERPROTOCOLPOLICY__VAR_OUT_CH_

  class ServerProtocolPolicy;
  using ServerProtocolPolicy_ptr = ServerProtocolPolicy*;
  using ServerProtocolPolicy_var = TAO_Objref_Var_T<ServerProtocolPolicy>;
  using ServerProtocolPolicy_out = TAO_Objref_Out_T<ServerProtocolPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export ServerProtocolPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ServerProtocolPolicy_ptr;
    using _var_type = ServerProtocolPolicy_var;
    using _out_type = ServerProtocolPolicy_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ServerProtocolPolicy_ptr _duplicate (ServerProtocolPolicy_ptr obj);

    static void _tao_release (ServerProtocolPolicy_ptr obj);

    static ServerProtocolPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ServerProtocolPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ServerProtocolPolicy_ptr _nil ();

    virtual ::RTCORBA::ProtocolList * protocols () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ServerProtocolPolicy ();

    

    virtual ~ServerProtocolPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ServerProtocolPolicy (const ServerProtocolPolicy &) = delete;
    ServerProtocolPolicy (ServerProtocolPolicy &&) = delete;
    ServerProtocolPolicy &operator= (const ServerProtocolPolicy &) = delete;
    ServerProtocolPolicy &operator= (ServerProtocolPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ServerProtocolPolicy;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::ULong CLIENT_PROTOCOL_POLICY_TYPE = 43U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_CLIENTPROTOCOLPOLICY__VAR_OUT_CH_)
#define _RTCORBA_CLIENTPROTOCOLPOLICY__VAR_OUT_CH_

  class ClientProtocolPolicy;
  using ClientProtocolPolicy_ptr = ClientProtocolPolicy*;
  using ClientProtocolPolicy_var = TAO_Objref_Var_T<ClientProtocolPolicy>;
  using ClientProtocolPolicy_out = TAO_Objref_Out_T<ClientProtocolPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export ClientProtocolPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ClientProtocolPolicy_ptr;
    using _var_type = ClientProtocolPolicy_var;
    using _out_type = ClientProtocolPolicy_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ClientProtocolPolicy_ptr _duplicate (ClientProtocolPolicy_ptr obj);

    static void _tao_release (ClientProtocolPolicy_ptr obj);

    static ClientProtocolPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ClientProtocolPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ClientProtocolPolicy_ptr _nil ();

    virtual ::RTCORBA::ProtocolList * protocols () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ClientProtocolPolicy ();

    

    virtual ~ClientProtocolPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ClientProtocolPolicy (const ClientProtocolPolicy &) = delete;
    ClientProtocolPolicy (ClientProtocolPolicy &&) = delete;
    ClientProtocolPolicy &operator= (const ClientProtocolPolicy &) = delete;
    ClientProtocolPolicy &operator= (ClientProtocolPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ClientProtocolPolicy;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::ULong PRIVATE_CONNECTION_POLICY_TYPE = 44U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_PRIVATECONNECTIONPOLICY__VAR_OUT_CH_)
#define _RTCORBA_PRIVATECONNECTIONPOLICY__VAR_OUT_CH_

  class PrivateConnectionPolicy;
  using PrivateConnectionPolicy_ptr = PrivateConnectionPolicy*;
  using PrivateConnectionPolicy_var = TAO_Objref_Var_T<PrivateConnectionPolicy>;
  using PrivateConnectionPolicy_out = TAO_Objref_Out_T<PrivateConnectionPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export PrivateConnectionPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = PrivateConnectionPolicy_ptr;
    using _var_type = PrivateConnectionPolicy_var;
    using _out_type = PrivateConnectionPolicy_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PrivateConnectionPolicy_ptr _duplicate (PrivateConnectionPolicy_ptr obj);

    static void _tao_release (PrivateConnectionPolicy_ptr obj);

    static PrivateConnectionPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static PrivateConnectionPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PrivateConnectionPolicy_ptr _nil ();

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    PrivateConnectionPolicy ();

    

    virtual ~PrivateConnectionPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    PrivateConnectionPolicy (const PrivateConnectionPolicy &) = delete;
    PrivateConnectionPolicy (PrivateConnectionPolicy &&) = delete;
    PrivateConnectionPolicy &operator= (const PrivateConnectionPolicy &) = delete;
    PrivateConnectionPolicy &operator= (PrivateConnectionPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PrivateConnectionPolicy;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_TCPPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_TCPPROTOCOLPROPERTIES__VAR_OUT_CH_

  class TCPProtocolProperties;
  using TCPProtocolProperties_ptr = TCPProtocolProperties*;
  using TCPProtocolProperties_var = TAO_Objref_Var_T<TCPProtocolProperties>;
  using TCPProtocolProperties_out = TAO_Objref_Out_T<TCPProtocolProperties>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export TCPProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = TCPProtocolProperties_ptr;
    using _var_type = TCPProtocolProperties_var;
    using _out_type = TCPProtocolProperties_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TCPProtocolProperties_ptr _duplicate (TCPProtocolProperties_ptr obj);

    static void _tao_release (TCPProtocolProperties_ptr obj);

    static TCPProtocolProperties_ptr _narrow (::CORBA::Object_ptr obj);
    static TCPProtocolProperties_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TCPProtocolProperties_ptr _nil ();

    virtual ::CORBA::Long send_buffer_size () = 0;

    virtual void send_buffer_size (
      ::CORBA::Long send_buffer_size) = 0;

    virtual ::CORBA::Long recv_buffer_size () = 0;

    virtual void recv_buffer_size (
      ::CORBA::Long recv_buffer_size) = 0;

    virtual ::CORBA::Boolean keep_alive () = 0;

    virtual void keep_alive (
      ::CORBA::Boolean keep_alive) = 0;

    virtual ::CORBA::Boolean dont_route () = 0;

    virtual void dont_route (
      ::CORBA::Boolean dont_route) = 0;

    virtual ::CORBA::Boolean no_delay () = 0;

    virtual void no_delay (
      ::CORBA::Boolean no_delay) = 0;

    virtual ::CORBA::Boolean enable_network_priority () = 0;

    virtual void enable_network_priority (
      ::CORBA::Boolean enable_network_priority) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    TCPProtocolProperties ();

    

    virtual ~TCPProtocolProperties () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    TCPProtocolProperties (const TCPProtocolProperties &) = delete;
    TCPProtocolProperties (TCPProtocolProperties &&) = delete;
    TCPProtocolProperties &operator= (const TCPProtocolProperties &) = delete;
    TCPProtocolProperties &operator= (TCPProtocolProperties &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_TCPProtocolProperties;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_GIOPPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_GIOPPROTOCOLPROPERTIES__VAR_OUT_CH_

  class GIOPProtocolProperties;
  using GIOPProtocolProperties_ptr = GIOPProtocolProperties*;
  using GIOPProtocolProperties_var = TAO_Objref_Var_T<GIOPProtocolProperties>;
  using GIOPProtocolProperties_out = TAO_Objref_Out_T<GIOPProtocolProperties>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export GIOPProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = GIOPProtocolProperties_ptr;
    using _var_type = GIOPProtocolProperties_var;
    using _out_type = GIOPProtocolProperties_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static GIOPProtocolProperties_ptr _duplicate (GIOPProtocolProperties_ptr obj);

    static void _tao_release (GIOPProtocolProperties_ptr obj);

    static GIOPProtocolProperties_ptr _narrow (::CORBA::Object_ptr obj);
    static GIOPProtocolProperties_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static GIOPProtocolProperties_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    GIOPProtocolProperties ();

    

    virtual ~GIOPProtocolProperties () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    GIOPProtocolProperties (const GIOPProtocolProperties &) = delete;
    GIOPProtocolProperties (GIOPProtocolProperties &&) = delete;
    GIOPProtocolProperties &operator= (const GIOPProtocolProperties &) = delete;
    GIOPProtocolProperties &operator= (GIOPProtocolProperties &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_GIOPProtocolProperties;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__VAR_OUT_CH_

  class UnixDomainProtocolProperties;
  using UnixDomainProtocolProperties_ptr = UnixDomainProtocolProperties*;
  using UnixDomainProtocolProperties_var = TAO_Objref_Var_T<UnixDomainProtocolProperties>;
  using UnixDomainProtocolProperties_out = TAO_Objref_Out_T<UnixDomainProtocolProperties>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export UnixDomainProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = UnixDomainProtocolProperties_ptr;
    using _var_type = UnixDomainProtocolProperties_var;
    using _out_type = UnixDomainProtocolProperties_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static UnixDomainProtocolProperties_ptr _duplicate (UnixDomainProtocolProperties_ptr obj);

    static void _tao_release (UnixDomainProtocolProperties_ptr obj);

    static UnixDomainProtocolProperties_ptr _narrow (::CORBA::Object_ptr obj);
    static UnixDomainProtocolProperties_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static UnixDomainProtocolProperties_ptr _nil ();

    virtual ::CORBA::Long send_buffer_size () = 0;

    virtual void send_buffer_size (
      ::CORBA::Long send_buffer_size) = 0;

    virtual ::CORBA::Long recv_buffer_size () = 0;

    virtual void recv_buffer_size (
      ::CORBA::Long recv_buffer_size) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    UnixDomainProtocolProperties ();

    

    virtual ~UnixDomainProtocolProperties () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    UnixDomainProtocolProperties (const UnixDomainProtocolProperties &) = delete;
    UnixDomainProtocolProperties (UnixDomainProtocolProperties &&) = delete;
    UnixDomainProtocolProperties &operator= (const UnixDomainProtocolProperties &) = delete;
    UnixDomainProtocolProperties &operator= (UnixDomainProtocolProperties &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_UnixDomainProtocolProperties;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__VAR_OUT_CH_

  class SharedMemoryProtocolProperties;
  using SharedMemoryProtocolProperties_ptr = SharedMemoryProtocolProperties*;
  using SharedMemoryProtocolProperties_var = TAO_Objref_Var_T<SharedMemoryProtocolProperties>;
  using SharedMemoryProtocolProperties_out = TAO_Objref_Out_T<SharedMemoryProtocolProperties>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export SharedMemoryProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = SharedMemoryProtocolProperties_ptr;
    using _var_type = SharedMemoryProtocolProperties_var;
    using _out_type = SharedMemoryProtocolProperties_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SharedMemoryProtocolProperties_ptr _duplicate (SharedMemoryProtocolProperties_ptr obj);

    static void _tao_release (SharedMemoryProtocolProperties_ptr obj);

    static SharedMemoryProtocolProperties_ptr _narrow (::CORBA::Object_ptr obj);
    static SharedMemoryProtocolProperties_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SharedMemoryProtocolProperties_ptr _nil ();

    virtual ::CORBA::Long send_buffer_size () = 0;

    virtual void send_buffer_size (
      ::CORBA::Long send_buffer_size) = 0;

    virtual ::CORBA::Long recv_buffer_size () = 0;

    virtual void recv_buffer_size (
      ::CORBA::Long recv_buffer_size) = 0;

    virtual ::CORBA::Boolean keep_alive () = 0;

    virtual void keep_alive (
      ::CORBA::Boolean keep_alive) = 0;

    virtual ::CORBA::Boolean dont_route () = 0;

    virtual void dont_route (
      ::CORBA::Boolean dont_route) = 0;

    virtual ::CORBA::Boolean no_delay () = 0;

    virtual void no_delay (
      ::CORBA::Boolean no_delay) = 0;

    virtual ::CORBA::Long preallocate_buffer_size () = 0;

    virtual void preallocate_buffer_size (
      ::CORBA::Long preallocate_buffer_size) = 0;

    virtual char * mmap_filename () = 0;

    virtual void mmap_filename (
      const char * mmap_filename) = 0;

    virtual char * mmap_lockname () = 0;

    virtual void mmap_lockname (
      const char * mmap_lockname) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    SharedMemoryProtocolProperties ();

    

    virtual ~SharedMemoryProtocolProperties () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    SharedMemoryProtocolProperties (const SharedMemoryProtocolProperties &) = delete;
    SharedMemoryProtocolProperties (SharedMemoryProtocolProperties &&) = delete;
    SharedMemoryProtocolProperties &operator= (const SharedMemoryProtocolProperties &) = delete;
    SharedMemoryProtocolProperties &operator= (SharedMemoryProtocolProperties &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_SharedMemoryProtocolProperties;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES__VAR_OUT_CH_

  class UserDatagramProtocolProperties;
  using UserDatagramProtocolProperties_ptr = UserDatagramProtocolProperties*;
  using UserDatagramProtocolProperties_var = TAO_Objref_Var_T<UserDatagramProtocolProperties>;
  using UserDatagramProtocolProperties_out = TAO_Objref_Out_T<UserDatagramProtocolProperties>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export UserDatagramProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = UserDatagramProtocolProperties_ptr;
    using _var_type = UserDatagramProtocolProperties_var;
    using _out_type = UserDatagramProtocolProperties_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static UserDatagramProtocolProperties_ptr _duplicate (UserDatagramProtocolProperties_ptr obj);

    static void _tao_release (UserDatagramProtocolProperties_ptr obj);

    static UserDatagramProtocolProperties_ptr _narrow (::CORBA::Object_ptr obj);
    static UserDatagramProtocolProperties_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static UserDatagramProtocolProperties_ptr _nil ();

    virtual ::CORBA::Long send_buffer_size () = 0;

    virtual void send_buffer_size (
      ::CORBA::Long send_buffer_size) = 0;

    virtual ::CORBA::Long recv_buffer_size () = 0;

    virtual void recv_buffer_size (
      ::CORBA::Long recv_buffer_size) = 0;

    virtual ::CORBA::Boolean enable_network_priority () = 0;

    virtual void enable_network_priority (
      ::CORBA::Boolean enable_network_priority) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    UserDatagramProtocolProperties ();

    

    virtual ~UserDatagramProtocolProperties () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    UserDatagramProtocolProperties (const UserDatagramProtocolProperties &) = delete;
    UserDatagramProtocolProperties (UserDatagramProtocolProperties &&) = delete;
    UserDatagramProtocolProperties &operator= (const UserDatagramProtocolProperties &) = delete;
    UserDatagramProtocolProperties &operator= (UserDatagramProtocolProperties &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_UserDatagramProtocolProperties;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES__VAR_OUT_CH_

  class StreamControlProtocolProperties;
  using StreamControlProtocolProperties_ptr = StreamControlProtocolProperties*;
  using StreamControlProtocolProperties_var = TAO_Objref_Var_T<StreamControlProtocolProperties>;
  using StreamControlProtocolProperties_out = TAO_Objref_Out_T<StreamControlProtocolProperties>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export StreamControlProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = StreamControlProtocolProperties_ptr;
    using _var_type = StreamControlProtocolProperties_var;
    using _out_type = StreamControlProtocolProperties_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static StreamControlProtocolProperties_ptr _duplicate (StreamControlProtocolProperties_ptr obj);

    static void _tao_release (StreamControlProtocolProperties_ptr obj);

    static StreamControlProtocolProperties_ptr _narrow (::CORBA::Object_ptr obj);
    static StreamControlProtocolProperties_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static StreamControlProtocolProperties_ptr _nil ();

    virtual ::CORBA::Long send_buffer_size () = 0;

    virtual void send_buffer_size (
      ::CORBA::Long send_buffer_size) = 0;

    virtual ::CORBA::Long recv_buffer_size () = 0;

    virtual void recv_buffer_size (
      ::CORBA::Long recv_buffer_size) = 0;

    virtual ::CORBA::Boolean keep_alive () = 0;

    virtual void keep_alive (
      ::CORBA::Boolean keep_alive) = 0;

    virtual ::CORBA::Boolean dont_route () = 0;

    virtual void dont_route (
      ::CORBA::Boolean dont_route) = 0;

    virtual ::CORBA::Boolean no_delay () = 0;

    virtual void no_delay (
      ::CORBA::Boolean no_delay) = 0;

    virtual ::CORBA::Boolean enable_network_priority () = 0;

    virtual void enable_network_priority (
      ::CORBA::Boolean enable_network_priority) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    StreamControlProtocolProperties ();

    

    virtual ~StreamControlProtocolProperties () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    StreamControlProtocolProperties (const StreamControlProtocolProperties &) = delete;
    StreamControlProtocolProperties (StreamControlProtocolProperties &&) = delete;
    StreamControlProtocolProperties &operator= (const StreamControlProtocolProperties &) = delete;
    StreamControlProtocolProperties &operator= (StreamControlProtocolProperties &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_StreamControlProtocolProperties;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct PriorityBand;
  using PriorityBand_var = ::TAO_Fixed_Var_T<PriorityBand>;
  using PriorityBand_out = PriorityBand&;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_RTCORBA_Export PriorityBand
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = PriorityBand_var;
    using _out_type = PriorityBand_out;

    static void _tao_any_destructor (void *);
    
    RTCORBA::Priority low;
    RTCORBA::Priority high;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityBand;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_RTCORBA_PRIORITYBANDS_CH_)
#define _RTCORBA_PRIORITYBANDS_CH_

  class PriorityBands;
  typedef ::TAO_FixedSeq_Var_T<PriorityBands> PriorityBands_var;
  typedef ::TAO_Seq_Out_T<PriorityBands> PriorityBands_out;
  

  class TAO_RTCORBA_Export PriorityBands
    : public
        ::TAO::unbounded_value_sequence< PriorityBand>
  {
  public:
    PriorityBands () = default;
    PriorityBands ( ::CORBA::ULong max);
    PriorityBands (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      PriorityBand* buffer,
      ::CORBA::Boolean release = false);
    PriorityBands (const PriorityBands &) = default;
    PriorityBands (PriorityBands &&) = default;
    PriorityBands& operator= (const PriorityBands &) = default;
    PriorityBands& operator= (PriorityBands &&) = default;
    virtual ~PriorityBands () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = PriorityBands_var;
    using _out_type = PriorityBands_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityBands;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_constant\constant_ch.cpp:34

  

  const CORBA::ULong PRIORITY_BANDED_CONNECTION_POLICY_TYPE = 45U;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__VAR_OUT_CH_)
#define _RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__VAR_OUT_CH_

  class PriorityBandedConnectionPolicy;
  using PriorityBandedConnectionPolicy_ptr = PriorityBandedConnectionPolicy*;
  using PriorityBandedConnectionPolicy_var = TAO_Objref_Var_T<PriorityBandedConnectionPolicy>;
  using PriorityBandedConnectionPolicy_out = TAO_Objref_Out_T<PriorityBandedConnectionPolicy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export PriorityBandedConnectionPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = PriorityBandedConnectionPolicy_ptr;
    using _var_type = PriorityBandedConnectionPolicy_var;
    using _out_type = PriorityBandedConnectionPolicy_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PriorityBandedConnectionPolicy_ptr _duplicate (PriorityBandedConnectionPolicy_ptr obj);

    static void _tao_release (PriorityBandedConnectionPolicy_ptr obj);

    static PriorityBandedConnectionPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static PriorityBandedConnectionPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PriorityBandedConnectionPolicy_ptr _nil ();

    virtual ::RTCORBA::PriorityBands * priority_bands () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    PriorityBandedConnectionPolicy ();

    

    virtual ~PriorityBandedConnectionPolicy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    PriorityBandedConnectionPolicy (const PriorityBandedConnectionPolicy &) = delete;
    PriorityBandedConnectionPolicy (PriorityBandedConnectionPolicy &&) = delete;
    PriorityBandedConnectionPolicy &operator= (const PriorityBandedConnectionPolicy &) = delete;
    PriorityBandedConnectionPolicy &operator= (PriorityBandedConnectionPolicy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityBandedConnectionPolicy;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_CURRENT__VAR_OUT_CH_)
#define _RTCORBA_CURRENT__VAR_OUT_CH_

  class Current;
  using Current_ptr = Current*;
  using Current_var = TAO_Objref_Var_T<Current>;
  using Current_out = TAO_Objref_Out_T<Current>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export Current
    : public virtual ::CORBA::Current
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = Current_ptr;
    using _var_type = Current_var;
    using _out_type = Current_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Current_ptr _duplicate (Current_ptr obj);

    static void _tao_release (Current_ptr obj);

    static Current_ptr _narrow (::CORBA::Object_ptr obj);
    static Current_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Current_ptr _nil ();

    virtual ::RTCORBA::Priority the_priority () = 0;

    virtual void the_priority (
      ::RTCORBA::Priority the_priority) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Current ();

    

    virtual ~Current () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    Current (const Current &) = delete;
    Current (Current &&) = delete;
    Current &operator= (const Current &) = delete;
    Current &operator= (Current &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_Current;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_MUTEX__VAR_OUT_CH_)
#define _RTCORBA_MUTEX__VAR_OUT_CH_

  class Mutex;
  using Mutex_ptr = Mutex*;
  using Mutex_var = TAO_Objref_Var_T<Mutex>;
  using Mutex_out = TAO_Objref_Out_T<Mutex>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export Mutex
    : public virtual ::CORBA::Object
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = Mutex_ptr;
    using _var_type = Mutex_var;
    using _out_type = Mutex_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Mutex_ptr _duplicate (Mutex_ptr obj);

    static void _tao_release (Mutex_ptr obj);

    static Mutex_ptr _narrow (::CORBA::Object_ptr obj);
    static Mutex_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Mutex_ptr _nil ();

    virtual void lock () = 0;

    virtual void unlock () = 0;

    virtual ::CORBA::Boolean try_lock (
      ::TimeBase::TimeT max_wait) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Mutex ();

    

    virtual ~Mutex () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    Mutex (const Mutex &) = delete;
    Mutex (Mutex &&) = delete;
    Mutex &operator= (const Mutex &) = delete;
    Mutex &operator= (Mutex &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_Mutex;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_RTCORBA_RTORB__VAR_OUT_CH_)
#define _RTCORBA_RTORB__VAR_OUT_CH_

  class RTORB;
  using RTORB_ptr = RTORB*;
  using RTORB_var = TAO_Objref_Var_T<RTORB>;
  using RTORB_out = TAO_Objref_Out_T<RTORB>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_RTCORBA_Export RTORB
    : public virtual ::CORBA::Object
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = RTORB_ptr;
    using _var_type = RTORB_var;
    using _out_type = RTORB_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static RTORB_ptr _duplicate (RTORB_ptr obj);

    static void _tao_release (RTORB_ptr obj);

    static RTORB_ptr _narrow (::CORBA::Object_ptr obj);
    static RTORB_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RTORB_ptr _nil ();

    virtual ::RTCORBA::Mutex_ptr create_mutex () = 0;

    virtual void destroy_mutex (
      ::RTCORBA::Mutex_ptr the_mutex) = 0;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

    

    class TAO_RTCORBA_Export MutexNotFound : public ::CORBA::UserException
    {
    public:

      MutexNotFound ();
      MutexNotFound (const MutexNotFound &);
      ~MutexNotFound () = default;

      MutexNotFound &operator= (const MutexNotFound &);

      static void _tao_any_destructor (void *);

      static MutexNotFound *_downcast ( ::CORBA::Exception *);
      static const MutexNotFound *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc ();

      virtual ::CORBA::Exception *_tao_duplicate () const;

      virtual void _raise () const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_MutexNotFound;

    virtual ::RTCORBA::Mutex_ptr create_named_mutex (
      const char * name,
      ::CORBA::Boolean_out created_flag) = 0;

    virtual ::RTCORBA::Mutex_ptr open_named_mutex (
      const char * name) = 0;

    virtual ::RTCORBA::TCPProtocolProperties_ptr create_tcp_protocol_properties (
      ::CORBA::Long send_buffer_size,
      ::CORBA::Long recv_buffer_size,
      ::CORBA::Boolean keep_alive,
      ::CORBA::Boolean dont_route,
      ::CORBA::Boolean no_delay,
      ::CORBA::Boolean enable_network_priority) = 0;

    virtual ::RTCORBA::UnixDomainProtocolProperties_ptr create_unix_domain_protocol_properties (
      ::CORBA::Long send_buffer_size,
      ::CORBA::Long recv_buffer_size) = 0;

    virtual ::RTCORBA::SharedMemoryProtocolProperties_ptr create_shared_memory_protocol_properties (
      ::CORBA::Long send_buffer_size,
      ::CORBA::Long recv_buffer_size,
      ::CORBA::Boolean keep_alive,
      ::CORBA::Boolean dont_route,
      ::CORBA::Boolean no_delay,
      ::CORBA::Long preallocate_buffer_size,
      const char * mmap_filename,
      const char * mmap_lockname) = 0;

    virtual ::RTCORBA::UserDatagramProtocolProperties_ptr create_user_datagram_protocol_properties (
      ::CORBA::Long send_buffer_size,
      ::CORBA::Long recv_buffer_size,
      ::CORBA::Boolean enable_network_priority) = 0;

    virtual ::RTCORBA::StreamControlProtocolProperties_ptr create_stream_control_protocol_properties (
      ::CORBA::Long send_buffer_size,
      ::CORBA::Long recv_buffer_size,
      ::CORBA::Boolean keep_alive,
      ::CORBA::Boolean dont_route,
      ::CORBA::Boolean no_delay,
      ::CORBA::Boolean enable_network_priority) = 0;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

    

    class TAO_RTCORBA_Export InvalidThreadpool : public ::CORBA::UserException
    {
    public:

      InvalidThreadpool ();
      InvalidThreadpool (const InvalidThreadpool &);
      ~InvalidThreadpool () = default;

      InvalidThreadpool &operator= (const InvalidThreadpool &);

      static void _tao_any_destructor (void *);

      static InvalidThreadpool *_downcast ( ::CORBA::Exception *);
      static const InvalidThreadpool *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc ();

      virtual ::CORBA::Exception *_tao_duplicate () const;

      virtual void _raise () const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_InvalidThreadpool;

    virtual ::RTCORBA::ThreadpoolId create_threadpool (
      ::CORBA::ULong stacksize,
      ::CORBA::ULong static_threads,
      ::CORBA::ULong dynamic_threads,
      ::RTCORBA::Priority default_priority,
      ::CORBA::Boolean allow_request_buffering,
      ::CORBA::ULong max_buffered_requests,
      ::CORBA::ULong max_request_buffer_size) = 0;

    virtual ::RTCORBA::ThreadpoolId create_threadpool_with_lanes (
      ::CORBA::ULong stacksize,
      const ::RTCORBA::ThreadpoolLanes & lanes,
      ::CORBA::Boolean allow_borrowing,
      ::CORBA::Boolean allow_request_buffering,
      ::CORBA::ULong max_buffered_requests,
      ::CORBA::ULong max_request_buffer_size) = 0;

    virtual void destroy_threadpool (
      ::RTCORBA::ThreadpoolId threadpool) = 0;

    virtual ::RTCORBA::PriorityModelPolicy_ptr create_priority_model_policy (
      ::RTCORBA::PriorityModel priority_model,
      ::RTCORBA::Priority server_priority) = 0;

    virtual ::RTCORBA::ThreadpoolPolicy_ptr create_threadpool_policy (
      ::RTCORBA::ThreadpoolId threadpool) = 0;

    virtual ::RTCORBA::PriorityBandedConnectionPolicy_ptr create_priority_banded_connection_policy (
      const ::RTCORBA::PriorityBands & priority_bands) = 0;

    virtual ::RTCORBA::ServerProtocolPolicy_ptr create_server_protocol_policy (
      const ::RTCORBA::ProtocolList & protocols) = 0;

    virtual ::RTCORBA::ClientProtocolPolicy_ptr create_client_protocol_policy (
      const ::RTCORBA::ProtocolList & protocols) = 0;

    virtual ::RTCORBA::PrivateConnectionPolicy_ptr create_private_connection_policy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RTORB ();

    

    virtual ~RTORB () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    RTORB (const RTORB &) = delete;
    RTORB (RTORB &&) = delete;
    RTORB &operator= (const RTORB &) = delete;
    RTORB &operator= (RTORB &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_RTORB;


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module RTCORBA
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::RTCORBA::ThreadpoolLane>
    : public
        Fixed_Size_Arg_Traits_T<
            ::RTCORBA::ThreadpoolLane,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::RTCORBA::ThreadpoolLanes>
    : public
        Var_Size_Arg_Traits_T<
            ::RTCORBA::ThreadpoolLanes,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::RTCORBA::PriorityModel>
    : public
        Basic_Arg_Traits_T<
            ::RTCORBA::PriorityModel,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::RTCORBA::Protocol>
    : public
        Var_Size_Arg_Traits_T<
            ::RTCORBA::Protocol,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::RTCORBA::ProtocolList>
    : public
        Var_Size_Arg_Traits_T<
            ::RTCORBA::ProtocolList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::RTCORBA::PriorityBand>
    : public
        Fixed_Size_Arg_Traits_T<
            ::RTCORBA::PriorityBand,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::RTCORBA::PriorityBands>
    : public
        Var_Size_Arg_Traits_T<
            ::RTCORBA::PriorityBands,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_RTCORBA_PRIORITYMODELPOLICY__TRAITS_)
#define _RTCORBA_PRIORITYMODELPOLICY__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::PriorityModelPolicy>
  {
    static ::RTCORBA::PriorityModelPolicy_ptr duplicate (::RTCORBA::PriorityModelPolicy_ptr p);
    static void release (::RTCORBA::PriorityModelPolicy_ptr p);
    static ::RTCORBA::PriorityModelPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::PriorityModelPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_THREADPOOLPOLICY__TRAITS_)
#define _RTCORBA_THREADPOOLPOLICY__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::ThreadpoolPolicy>
  {
    static ::RTCORBA::ThreadpoolPolicy_ptr duplicate (::RTCORBA::ThreadpoolPolicy_ptr p);
    static void release (::RTCORBA::ThreadpoolPolicy_ptr p);
    static ::RTCORBA::ThreadpoolPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::ThreadpoolPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_SERVERPROTOCOLPOLICY__TRAITS_)
#define _RTCORBA_SERVERPROTOCOLPOLICY__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::ServerProtocolPolicy>
  {
    static ::RTCORBA::ServerProtocolPolicy_ptr duplicate (::RTCORBA::ServerProtocolPolicy_ptr p);
    static void release (::RTCORBA::ServerProtocolPolicy_ptr p);
    static ::RTCORBA::ServerProtocolPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::ServerProtocolPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_CLIENTPROTOCOLPOLICY__TRAITS_)
#define _RTCORBA_CLIENTPROTOCOLPOLICY__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::ClientProtocolPolicy>
  {
    static ::RTCORBA::ClientProtocolPolicy_ptr duplicate (::RTCORBA::ClientProtocolPolicy_ptr p);
    static void release (::RTCORBA::ClientProtocolPolicy_ptr p);
    static ::RTCORBA::ClientProtocolPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::ClientProtocolPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_PRIVATECONNECTIONPOLICY__TRAITS_)
#define _RTCORBA_PRIVATECONNECTIONPOLICY__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::PrivateConnectionPolicy>
  {
    static ::RTCORBA::PrivateConnectionPolicy_ptr duplicate (::RTCORBA::PrivateConnectionPolicy_ptr p);
    static void release (::RTCORBA::PrivateConnectionPolicy_ptr p);
    static ::RTCORBA::PrivateConnectionPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::PrivateConnectionPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_TCPPROTOCOLPROPERTIES__TRAITS_)
#define _RTCORBA_TCPPROTOCOLPROPERTIES__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::TCPProtocolProperties>
  {
    static ::RTCORBA::TCPProtocolProperties_ptr duplicate (::RTCORBA::TCPProtocolProperties_ptr p);
    static void release (::RTCORBA::TCPProtocolProperties_ptr p);
    static ::RTCORBA::TCPProtocolProperties_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::TCPProtocolProperties_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_GIOPPROTOCOLPROPERTIES__TRAITS_)
#define _RTCORBA_GIOPPROTOCOLPROPERTIES__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::GIOPProtocolProperties>
  {
    static ::RTCORBA::GIOPProtocolProperties_ptr duplicate (::RTCORBA::GIOPProtocolProperties_ptr p);
    static void release (::RTCORBA::GIOPProtocolProperties_ptr p);
    static ::RTCORBA::GIOPProtocolProperties_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::GIOPProtocolProperties_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__TRAITS_)
#define _RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::UnixDomainProtocolProperties>
  {
    static ::RTCORBA::UnixDomainProtocolProperties_ptr duplicate (::RTCORBA::UnixDomainProtocolProperties_ptr p);
    static void release (::RTCORBA::UnixDomainProtocolProperties_ptr p);
    static ::RTCORBA::UnixDomainProtocolProperties_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::UnixDomainProtocolProperties_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__TRAITS_)
#define _RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::SharedMemoryProtocolProperties>
  {
    static ::RTCORBA::SharedMemoryProtocolProperties_ptr duplicate (::RTCORBA::SharedMemoryProtocolProperties_ptr p);
    static void release (::RTCORBA::SharedMemoryProtocolProperties_ptr p);
    static ::RTCORBA::SharedMemoryProtocolProperties_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::SharedMemoryProtocolProperties_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES__TRAITS_)
#define _RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::UserDatagramProtocolProperties>
  {
    static ::RTCORBA::UserDatagramProtocolProperties_ptr duplicate (::RTCORBA::UserDatagramProtocolProperties_ptr p);
    static void release (::RTCORBA::UserDatagramProtocolProperties_ptr p);
    static ::RTCORBA::UserDatagramProtocolProperties_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::UserDatagramProtocolProperties_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES__TRAITS_)
#define _RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::StreamControlProtocolProperties>
  {
    static ::RTCORBA::StreamControlProtocolProperties_ptr duplicate (::RTCORBA::StreamControlProtocolProperties_ptr p);
    static void release (::RTCORBA::StreamControlProtocolProperties_ptr p);
    static ::RTCORBA::StreamControlProtocolProperties_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::StreamControlProtocolProperties_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__TRAITS_)
#define _RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::PriorityBandedConnectionPolicy>
  {
    static ::RTCORBA::PriorityBandedConnectionPolicy_ptr duplicate (::RTCORBA::PriorityBandedConnectionPolicy_ptr p);
    static void release (::RTCORBA::PriorityBandedConnectionPolicy_ptr p);
    static ::RTCORBA::PriorityBandedConnectionPolicy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::PriorityBandedConnectionPolicy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_CURRENT__TRAITS_)
#define _RTCORBA_CURRENT__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::Current>
  {
    static ::RTCORBA::Current_ptr duplicate (::RTCORBA::Current_ptr p);
    static void release (::RTCORBA::Current_ptr p);
    static ::RTCORBA::Current_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::Current_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_MUTEX__TRAITS_)
#define _RTCORBA_MUTEX__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::Mutex>
  {
    static ::RTCORBA::Mutex_ptr duplicate (::RTCORBA::Mutex_ptr p);
    static void release (::RTCORBA::Mutex_ptr p);
    static ::RTCORBA::Mutex_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::Mutex_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_RTORB__TRAITS_)
#define _RTCORBA_RTORB__TRAITS_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::RTORB>
  {
    static ::RTCORBA::RTORB_ptr duplicate (::RTCORBA::RTORB_ptr p);
    static void release (::RTCORBA::RTORB_ptr p);
    static ::RTCORBA::RTORB_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RTCORBA::RTORB_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const ::RTCORBA::ThreadpoolLane &); // copying version
  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, ::RTCORBA::ThreadpoolLane*); // noncopying version
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RTCORBA::ThreadpoolLane *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const RTCORBA::ThreadpoolLane &); // copying version
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::ThreadpoolLane*); // noncopying version
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RTCORBA::ThreadpoolLane *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, const ::RTCORBA::ThreadpoolLanes &); // copying version
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ::RTCORBA::ThreadpoolLanes*); // noncopying version
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RTCORBA::ThreadpoolLanes *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, const RTCORBA::ThreadpoolLanes &); // copying version
TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, RTCORBA::ThreadpoolLanes*); // noncopying version
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RTCORBA::ThreadpoolLanes *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\any_op_ch.cpp:31



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  

  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, ::RTCORBA::PriorityModel);
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::RTCORBA::PriorityModel &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::PriorityModel);
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::PriorityModel &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, PriorityModelPolicy_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, PriorityModelPolicy_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PriorityModelPolicy_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ThreadpoolPolicy_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ThreadpoolPolicy_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ThreadpoolPolicy_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const ::RTCORBA::Protocol &); // copying version
  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, ::RTCORBA::Protocol*); // noncopying version
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RTCORBA::Protocol *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const RTCORBA::Protocol &); // copying version
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::Protocol*); // noncopying version
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RTCORBA::Protocol *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, const ::RTCORBA::ProtocolList &); // copying version
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ::RTCORBA::ProtocolList*); // noncopying version
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RTCORBA::ProtocolList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, const RTCORBA::ProtocolList &); // copying version
TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, RTCORBA::ProtocolList*); // noncopying version
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RTCORBA::ProtocolList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ServerProtocolPolicy_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ServerProtocolPolicy_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ServerProtocolPolicy_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ClientProtocolPolicy_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ClientProtocolPolicy_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ClientProtocolPolicy_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, PrivateConnectionPolicy_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, PrivateConnectionPolicy_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PrivateConnectionPolicy_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, TCPProtocolProperties_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, TCPProtocolProperties_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TCPProtocolProperties_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, GIOPProtocolProperties_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, GIOPProtocolProperties_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GIOPProtocolProperties_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, UnixDomainProtocolProperties_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, UnixDomainProtocolProperties_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, UnixDomainProtocolProperties_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, SharedMemoryProtocolProperties_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, SharedMemoryProtocolProperties_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SharedMemoryProtocolProperties_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, UserDatagramProtocolProperties_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, UserDatagramProtocolProperties_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, UserDatagramProtocolProperties_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::UserDatagramProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::UserDatagramProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::UserDatagramProtocolProperties_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, StreamControlProtocolProperties_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, StreamControlProtocolProperties_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StreamControlProtocolProperties_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::StreamControlProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::StreamControlProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::StreamControlProtocolProperties_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const ::RTCORBA::PriorityBand &); // copying version
  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, ::RTCORBA::PriorityBand*); // noncopying version
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RTCORBA::PriorityBand *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const RTCORBA::PriorityBand &); // copying version
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::PriorityBand*); // noncopying version
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RTCORBA::PriorityBand *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, const ::RTCORBA::PriorityBands &); // copying version
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, ::RTCORBA::PriorityBands*); // noncopying version
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RTCORBA::PriorityBands *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, const RTCORBA::PriorityBands &); // copying version
TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, RTCORBA::PriorityBands*); // noncopying version
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RTCORBA::PriorityBands *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, PriorityBandedConnectionPolicy_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, PriorityBandedConnectionPolicy_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PriorityBandedConnectionPolicy_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, Current_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, Current_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Current_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::Current_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::Current_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::Current_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, Mutex_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, Mutex_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Mutex_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::Mutex_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::Mutex_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::Mutex_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, RTORB_ptr); // copying
  TAO_RTCORBA_Export void operator<<= ( ::CORBA::Any &, RTORB_ptr *); // non-copying
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTORB_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::RTORB_ptr); // copying
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::RTORB_ptr *); // non-copying
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RTCORBA::RTORB_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  

  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const ::RTCORBA::RTORB::MutexNotFound &); // copying version
  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, ::RTCORBA::RTORB::MutexNotFound*); // noncopying version
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RTCORBA::RTORB::MutexNotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const RTCORBA::RTORB::MutexNotFound &); // copying version
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::RTORB::MutexNotFound*); // noncopying version
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RTCORBA::RTORB::MutexNotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RTCORBA
{
  

  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const ::RTCORBA::RTORB::InvalidThreadpool &); // copying version
  TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, ::RTCORBA::RTORB::InvalidThreadpool*); // noncopying version
  TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::RTCORBA::RTORB::InvalidThreadpool *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, const RTCORBA::RTORB::InvalidThreadpool &); // copying version
TAO_RTCORBA_Export void operator<<= (::CORBA::Any &, RTCORBA::RTORB::InvalidThreadpool*); // noncopying version
TAO_RTCORBA_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RTCORBA::RTORB::InvalidThreadpool *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RTCORBA::ThreadpoolLane &);
TAO_RTCORBA_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::ThreadpoolLane &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_
#define _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_RTCORBA_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const RTCORBA::ThreadpoolLanes &_tao_sequence);
TAO_RTCORBA_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    RTCORBA::ThreadpoolLanes &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:33



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, RTCORBA::PriorityModel _tao_enumerator);
TAO_RTCORBA_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, RTCORBA::PriorityModel &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTCORBA_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RTCORBA::PriorityBand &);
TAO_RTCORBA_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::PriorityBand &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_RTCORBA_PriorityBands_H_
#define _TAO_CDR_OP_RTCORBA_PriorityBands_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_RTCORBA_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const RTCORBA::PriorityBands &_tao_sequence);
TAO_RTCORBA_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    RTCORBA::PriorityBands &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_RTCORBA_PriorityBands_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */

