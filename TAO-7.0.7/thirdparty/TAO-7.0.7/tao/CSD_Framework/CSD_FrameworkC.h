// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_CSD_FRAMEWORKC_CQ9EQN_H_
#define _TAO_PIDL_CSD_FRAMEWORKC_CQ9EQN_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/CSD_Framework/CSD_FW_Export.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/PortableServer/PortableServer_includeC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace CSD_Framework
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CSD_FRAMEWORK_STRATEGY__VAR_OUT_CH_)
#define _CSD_FRAMEWORK_STRATEGY__VAR_OUT_CH_

  class Strategy;
  using Strategy_ptr = Strategy*;
  using Strategy_var = TAO_Objref_Var_T<Strategy>;
  using Strategy_out = TAO_Objref_Out_T<Strategy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_CSD_FW_Export Strategy
    : public virtual ::CORBA::Object
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = Strategy_ptr;
    using _var_type = Strategy_var;
    using _out_type = Strategy_out;

    // The static operations.
    static Strategy_ptr _duplicate (Strategy_ptr obj);

    static void _tao_release (Strategy_ptr obj);

    static Strategy_ptr _narrow (::CORBA::Object_ptr obj);
    static Strategy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Strategy_ptr _nil ();

    virtual ::CORBA::Boolean apply_to (
      ::PortableServer::POA_ptr p) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Strategy ();

    

    virtual ~Strategy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    Strategy (const Strategy &) = delete;
    Strategy (Strategy &&) = delete;
    Strategy &operator= (const Strategy &) = delete;
    Strategy &operator= (Strategy &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_CSD_FRAMEWORK_POA__VAR_OUT_CH_)
#define _CSD_FRAMEWORK_POA__VAR_OUT_CH_

  class POA;
  using POA_ptr = POA*;
  using POA_var = TAO_Objref_Var_T<POA>;
  using POA_out = TAO_Objref_Out_T<POA>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_CSD_FW_Export POA
    : public virtual ::PortableServer::POA
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = POA_ptr;
    using _var_type = POA_var;
    using _out_type = POA_out;

    // The static operations.
    static POA_ptr _duplicate (POA_ptr obj);

    static void _tao_release (POA_ptr obj);

    static POA_ptr _narrow (::CORBA::Object_ptr obj);
    static POA_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static POA_ptr _nil ();

    virtual void set_csd_strategy (
      ::CSD_Framework::Strategy_ptr s) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    POA ();

    

    virtual ~POA () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    POA (const POA &) = delete;
    POA (POA &&) = delete;
    POA &operator= (const POA &) = delete;
    POA &operator= (POA &&) = delete;
  };


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module CSD_Framework
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CSD_FRAMEWORK_STRATEGY__TRAITS_)
#define _CSD_FRAMEWORK_STRATEGY__TRAITS_

  template<>
  struct TAO_CSD_FW_Export Objref_Traits< ::CSD_Framework::Strategy>
  {
    static ::CSD_Framework::Strategy_ptr duplicate (::CSD_Framework::Strategy_ptr p);
    static void release (::CSD_Framework::Strategy_ptr p);
    static ::CSD_Framework::Strategy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CSD_Framework::Strategy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CSD_FRAMEWORK_POA__TRAITS_)
#define _CSD_FRAMEWORK_POA__TRAITS_

  template<>
  struct TAO_CSD_FW_Export Objref_Traits< ::CSD_Framework::POA>
  {
    static ::CSD_Framework::POA_ptr duplicate (::CSD_Framework::POA_ptr p);
    static void release (::CSD_Framework::POA_ptr p);
    static ::CSD_Framework::POA_ptr nil ();
    static ::CORBA::Boolean marshal (const ::CSD_Framework::POA_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */

