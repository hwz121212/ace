// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_POAMANAGERFACTORYC_HDRWYM_H_
#define _TAO_PIDL_POAMANAGERFACTORYC_HDRWYM_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/PortableServer/portableserver_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/PolicyA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/PolicyC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace PortableServer
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_PORTABLESERVER_POAMANAGER__VAR_OUT_CH_)
#define _PORTABLESERVER_POAMANAGER__VAR_OUT_CH_

  class POAManager;
  using POAManager_ptr = POAManager*;
  using POAManager_var = TAO_Objref_Var_T<POAManager>;
  using POAManager_out = TAO_Objref_Out_T<POAManager>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_PORTABLESERVER_POAMANAGERFACTORY__VAR_OUT_CH_)
#define _PORTABLESERVER_POAMANAGERFACTORY__VAR_OUT_CH_

  class POAManagerFactory;
  using POAManagerFactory_ptr = POAManagerFactory*;
  using POAManagerFactory_var = TAO_Objref_Var_T<POAManagerFactory>;
  using POAManagerFactory_out = TAO_Objref_Out_T<POAManagerFactory>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_PortableServer_Export POAManagerFactory
    : public virtual ::CORBA::Object
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = POAManagerFactory_ptr;
    using _var_type = POAManagerFactory_var;
    using _out_type = POAManagerFactory_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static POAManagerFactory_ptr _duplicate (POAManagerFactory_ptr obj);

    static void _tao_release (POAManagerFactory_ptr obj);

    static POAManagerFactory_ptr _narrow (::CORBA::Object_ptr obj);
    static POAManagerFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static POAManagerFactory_ptr _nil ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

    

#if !defined (_PORTABLESERVER_POAMANAGERFACTORY_POAMANAGERSEQ_CH_)
#define _PORTABLESERVER_POAMANAGERFACTORY_POAMANAGERSEQ_CH_

    class POAManagerSeq;
    typedef ::TAO_VarSeq_Var_T<POAManagerSeq> POAManagerSeq_var;
    typedef ::TAO_Seq_Out_T<POAManagerSeq> POAManagerSeq_out;
    

    class TAO_PortableServer_Export POAManagerSeq
      : public
          ::TAO::unbounded_object_reference_sequence<
              PortableServer::POAManager,
              PortableServer::POAManager_var
            >
    {
    public:
      POAManagerSeq () = default;
      POAManagerSeq ( ::CORBA::ULong max);
      POAManagerSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        PortableServer::POAManager_ptr* buffer,
        ::CORBA::Boolean release = false);
      POAManagerSeq (const POAManagerSeq &) = default;
      POAManagerSeq (POAManagerSeq &&) = default;
      POAManagerSeq& operator= (const POAManagerSeq &) = default;
      POAManagerSeq& operator= (POAManagerSeq &&) = default;
      virtual ~POAManagerSeq () = default;
      
      // TAO_IDL - Generated from
      // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

      
      using _var_type = POAManagerSeq_var;
      using _out_type = POAManagerSeq_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_POAManagerSeq;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

    

    class TAO_PortableServer_Export ManagerAlreadyExists : public ::CORBA::UserException
    {
    public:

      ManagerAlreadyExists ();
      ManagerAlreadyExists (const ManagerAlreadyExists &);
      ~ManagerAlreadyExists () = default;

      ManagerAlreadyExists &operator= (const ManagerAlreadyExists &);

      static void _tao_any_destructor (void *);

      static ManagerAlreadyExists *_downcast ( ::CORBA::Exception *);
      static const ManagerAlreadyExists *_downcast ( ::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc ();

      virtual ::CORBA::Exception *_tao_duplicate () const;

      virtual void _raise () const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    };
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

    static ::CORBA::TypeCode_ptr const _tc_ManagerAlreadyExists;

    virtual ::PortableServer::POAManager_ptr create_POAManager (
      const char * id,
      const ::CORBA::PolicyList & policies) = 0;

    virtual ::PortableServer::POAManagerFactory::POAManagerSeq * list () = 0;

    virtual ::PortableServer::POAManager_ptr find (
      const char * id) = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    POAManagerFactory ();

    

    virtual ~POAManagerFactory () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    POAManagerFactory (const POAManagerFactory &) = delete;
    POAManagerFactory (POAManagerFactory &&) = delete;
    POAManagerFactory &operator= (const POAManagerFactory &) = delete;
    POAManagerFactory &operator= (POAManagerFactory &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_PortableServer_Export ::CORBA::TypeCode_ptr const _tc_POAManagerFactory;


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module PortableServer
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_PORTABLESERVER_POAMANAGER__TRAITS_)
#define _PORTABLESERVER_POAMANAGER__TRAITS_

  template<>
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::POAManager>
  {
    static ::PortableServer::POAManager_ptr duplicate (::PortableServer::POAManager_ptr p);
    static void release (::PortableServer::POAManager_ptr p);
    static ::PortableServer::POAManager_ptr nil ();
    static ::CORBA::Boolean marshal (const ::PortableServer::POAManager_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_PORTABLESERVER_POAMANAGERFACTORY__TRAITS_)
#define _PORTABLESERVER_POAMANAGERFACTORY__TRAITS_

  template<>
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::POAManagerFactory>
  {
    static ::PortableServer::POAManagerFactory_ptr duplicate (::PortableServer::POAManagerFactory_ptr p);
    static void release (::PortableServer::POAManagerFactory_ptr p);
    static ::PortableServer::POAManagerFactory_ptr nil ();
    static ::CORBA::Boolean marshal (const ::PortableServer::POAManagerFactory_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PortableServer
{
  TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, POAManagerFactory_ptr); // copying
  TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, POAManagerFactory_ptr *); // non-copying
  TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, POAManagerFactory_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POAManagerFactory_ptr); // copying
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POAManagerFactory_ptr *); // non-copying
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POAManagerFactory_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PortableServer
{
  TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, const ::PortableServer::POAManagerFactory::POAManagerSeq &); // copying version
  TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, ::PortableServer::POAManagerFactory::POAManagerSeq*); // noncopying version
  TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::PortableServer::POAManagerFactory::POAManagerSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, const PortableServer::POAManagerFactory::POAManagerSeq &); // copying version
TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, PortableServer::POAManagerFactory::POAManagerSeq*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POAManagerFactory::POAManagerSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PortableServer
{
  

  TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const ::PortableServer::POAManagerFactory::ManagerAlreadyExists &); // copying version
  TAO_PortableServer_Export void operator<<= (::CORBA::Any &, ::PortableServer::POAManagerFactory::ManagerAlreadyExists*); // noncopying version
  TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::PortableServer::POAManagerFactory::ManagerAlreadyExists *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POAManagerFactory::ManagerAlreadyExists &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POAManagerFactory::ManagerAlreadyExists*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POAManagerFactory::ManagerAlreadyExists *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */

