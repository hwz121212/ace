// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_IDL_IMPLREPOC_XINTTL_H_
#define _TAO_IDL_IMPLREPOC_XINTTL_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/ImR_Client/imr_client_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/StringSeqA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/ImR_Client/ServerObjectC.h"
#include "tao/StringSeqC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_root\root_ch.cpp:155



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace ImplementationRepository
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

  

  class TAO_IMR_Client_Export AlreadyRegistered : public ::CORBA::UserException
  {
  public:

    AlreadyRegistered ();
    AlreadyRegistered (const AlreadyRegistered &);
    ~AlreadyRegistered () = default;

    AlreadyRegistered &operator= (const AlreadyRegistered &);

    static void _tao_any_destructor (void *);

    static AlreadyRegistered *_downcast ( ::CORBA::Exception *);
    static const AlreadyRegistered *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AlreadyRegistered;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

  

  class TAO_IMR_Client_Export CannotActivate : public ::CORBA::UserException
  {
  public:
    ::TAO::String_Manager reason;

    CannotActivate ();
    CannotActivate (const CannotActivate &);
    ~CannotActivate () = default;

    CannotActivate &operator= (const CannotActivate &);

    static void _tao_any_destructor (void *);

    static CannotActivate *_downcast ( ::CORBA::Exception *);
    static const CannotActivate *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ctor.cpp:50

    

    CannotActivate (
        const char * _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_CannotActivate;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

  

  class TAO_IMR_Client_Export NotFound : public ::CORBA::UserException
  {
  public:

    NotFound ();
    NotFound (const NotFound &);
    ~NotFound () = default;

    NotFound &operator= (const NotFound &);

    static void _tao_any_destructor (void *);

    static NotFound *_downcast ( ::CORBA::Exception *);
    static const NotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_NotFound;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ch.cpp:40

  

  class TAO_IMR_Client_Export CannotComplete : public ::CORBA::UserException
  {
  public:
    ::TAO::String_Manager reason;

    CannotComplete ();
    CannotComplete (const CannotComplete &);
    ~CannotComplete () = default;

    CannotComplete &operator= (const CannotComplete &);

    static void _tao_any_destructor (void *);

    static CannotComplete *_downcast ( ::CORBA::Exception *);
    static const CannotComplete *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\exception_ctor.cpp:50

    

    CannotComplete (
        const char * _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_CannotComplete;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct EnvironmentVariable;
  using EnvironmentVariable_var = ::TAO_Var_Var_T<EnvironmentVariable>;
  using EnvironmentVariable_out = ::TAO_Out_T<EnvironmentVariable>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IMR_Client_Export EnvironmentVariable
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = EnvironmentVariable_var;
    using _out_type = EnvironmentVariable_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager value;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_EnvironmentVariable;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CH_)
#define _IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CH_

  class EnvironmentList;
  typedef ::TAO_VarSeq_Var_T<EnvironmentList> EnvironmentList_var;
  typedef ::TAO_Seq_Out_T<EnvironmentList> EnvironmentList_out;
  

  class TAO_IMR_Client_Export EnvironmentList
    : public
        ::TAO::unbounded_value_sequence< EnvironmentVariable>
  {
  public:
    EnvironmentList () = default;
    EnvironmentList ( ::CORBA::ULong max);
    EnvironmentList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      EnvironmentVariable* buffer,
      ::CORBA::Boolean release = false);
    EnvironmentList (const EnvironmentList &) = default;
    EnvironmentList (EnvironmentList &&) = default;
    EnvironmentList& operator= (const EnvironmentList &) = default;
    EnvironmentList& operator= (EnvironmentList &&) = default;
    virtual ~EnvironmentList () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = EnvironmentList_var;
    using _out_type = EnvironmentList_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_EnvironmentList;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\enum_ch.cpp:39

  enum ActivationMode
  {
    NORMAL,
    MANUAL,
    PER_CLIENT,
    AUTO_START
  };

  typedef ActivationMode &ActivationMode_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ActivationMode;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct StartupOptions;
  using StartupOptions_var = ::TAO_Var_Var_T<StartupOptions>;
  using StartupOptions_out = ::TAO_Out_T<StartupOptions>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IMR_Client_Export StartupOptions
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = StartupOptions_var;
    using _out_type = StartupOptions_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager command_line;
    ImplementationRepository::EnvironmentList environment;
    ::TAO::String_Manager working_directory;
    ImplementationRepository::ActivationMode activation;
    ::TAO::String_Manager activator;
    ::CORBA::Long start_limit;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_StartupOptions;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\enum_ch.cpp:39

  enum ServerActiveStatus
  {
    ACTIVE_MAYBE,
    ACTIVE_YES,
    ACTIVE_NO
  };

  typedef ServerActiveStatus &ServerActiveStatus_out;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ServerActiveStatus;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:257

  

  struct ServerInformation;
  using ServerInformation_var = ::TAO_Var_Var_T<ServerInformation>;
  using ServerInformation_out = ::TAO_Out_T<ServerInformation>;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\structure_ch.cpp:47

  

  struct TAO_IMR_Client_Export ServerInformation
  {
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ServerInformation_var;
    using _out_type = ServerInformation_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager server;
    ImplementationRepository::StartupOptions startup;
    ::TAO::String_Manager partial_ior;
    ImplementationRepository::ServerActiveStatus activeStatus;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ServerInformation;

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CH_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CH_

  class ServerInformationList;
  typedef ::TAO_VarSeq_Var_T<ServerInformationList> ServerInformationList_var;
  typedef ::TAO_Seq_Out_T<ServerInformationList> ServerInformationList_out;
  

  class TAO_IMR_Client_Export ServerInformationList
    : public
        ::TAO::unbounded_value_sequence< ServerInformation>
  {
  public:
    ServerInformationList () = default;
    ServerInformationList ( ::CORBA::ULong max);
    ServerInformationList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ServerInformation* buffer,
      ::CORBA::Boolean release = false);
    ServerInformationList (const ServerInformationList &) = default;
    ServerInformationList (ServerInformationList &&) = default;
    ServerInformationList& operator= (const ServerInformationList &) = default;
    ServerInformationList& operator= (ServerInformationList &&) = default;
    virtual ~ServerInformationList () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = ServerInformationList_var;
    using _out_type = ServerInformationList_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ServerInformationList;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__VAR_OUT_CH_

  class ServerInformationIterator;
  using ServerInformationIterator_ptr = ServerInformationIterator*;
  using ServerInformationIterator_var = TAO_Objref_Var_T<ServerInformationIterator>;
  using ServerInformationIterator_out = TAO_Objref_Out_T<ServerInformationIterator>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IMR_Client_Export ServerInformationIterator
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ServerInformationIterator>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = ServerInformationIterator_ptr;
    using _var_type = ServerInformationIterator_var;
    using _out_type = ServerInformationIterator_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ServerInformationIterator_ptr _duplicate (ServerInformationIterator_ptr obj);

    static void _tao_release (ServerInformationIterator_ptr obj);

    static ServerInformationIterator_ptr _narrow (::CORBA::Object_ptr obj);
    static ServerInformationIterator_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ServerInformationIterator_ptr _nil ();

    virtual ::CORBA::Boolean next_n (
      ::CORBA::ULong how_many,
      ::ImplementationRepository::ServerInformationList_out servers);

    virtual void destroy ();

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ServerInformationIterator ();

    // Concrete non-local interface only.
    ServerInformationIterator (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ServerInformationIterator (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ServerInformationIterator () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ServerInformationIterator (const ServerInformationIterator &) = delete;
    ServerInformationIterator (ServerInformationIterator &&) = delete;
    ServerInformationIterator &operator= (const ServerInformationIterator &) = delete;
    ServerInformationIterator &operator= (ServerInformationIterator &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ServerInformationIterator;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATION__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATION__VAR_OUT_CH_

  class Administration;
  using Administration_ptr = Administration*;
  using Administration_var = TAO_Objref_Var_T<Administration>;
  using Administration_out = TAO_Objref_Out_T<Administration>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IMR_Client_Export Administration
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Administration>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = Administration_ptr;
    using _var_type = Administration_var;
    using _out_type = Administration_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Administration_ptr _duplicate (Administration_ptr obj);

    static void _tao_release (Administration_ptr obj);

    static Administration_ptr _narrow (::CORBA::Object_ptr obj);
    static Administration_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Administration_ptr _nil ();

    virtual void activate_server (
      const char * server);

    virtual void add_or_update_server (
      const char * server,
      const ::ImplementationRepository::StartupOptions & options);

    virtual void remove_server (
      const char * server);

    virtual void shutdown_server (
      const char * server);

    virtual void server_is_running (
      const char * server,
      const char * partial_ior,
      ::ImplementationRepository::ServerObject_ptr server_object);

    virtual void server_is_shutting_down (
      const char * server);

    virtual void find (
      const char * server,
      ::ImplementationRepository::ServerInformation_out info);

    virtual void list (
      ::CORBA::ULong how_many,
      ::CORBA::Boolean determine_active_status,
      ::ImplementationRepository::ServerInformationList_out server_list,
      ::ImplementationRepository::ServerInformationIterator_out server_iterator);

    virtual void shutdown (
      ::CORBA::Boolean activators,
      ::CORBA::Boolean servers);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    Administration ();

    // Concrete non-local interface only.
    Administration (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Administration (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~Administration () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    Administration (const Administration &) = delete;
    Administration (Administration &&) = delete;
    Administration &operator= (const Administration &) = delete;
    Administration &operator= (Administration &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_Administration;
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__VAR_OUT_CH_

  class AdministrationExt;
  using AdministrationExt_ptr = AdministrationExt*;
  using AdministrationExt_var = TAO_Objref_Var_T<AdministrationExt>;
  using AdministrationExt_out = TAO_Objref_Out_T<AdministrationExt>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_IMR_Client_Export AdministrationExt
    : public virtual ::ImplementationRepository::Administration
  
  {
  public:
    friend class TAO::Narrow_Utils<AdministrationExt>;
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = AdministrationExt_ptr;
    using _var_type = AdministrationExt_var;
    using _out_type = AdministrationExt_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static AdministrationExt_ptr _duplicate (AdministrationExt_ptr obj);

    static void _tao_release (AdministrationExt_ptr obj);

    static AdministrationExt_ptr _narrow (::CORBA::Object_ptr obj);
    static AdministrationExt_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AdministrationExt_ptr _nil ();

    virtual void link_servers (
      const char * server,
      const ::CORBA::StringSeq & peers);

    virtual void kill_server (
      const char * server,
      ::CORBA::Short signum);

    virtual void force_remove_server (
      const char * server,
      ::CORBA::Short signum);

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    AdministrationExt ();

    // Concrete non-local interface only.
    AdministrationExt (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    AdministrationExt (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~AdministrationExt () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    AdministrationExt (const AdministrationExt &) = delete;
    AdministrationExt (AdministrationExt &&) = delete;
    AdministrationExt &operator= (const AdministrationExt &) = delete;
    AdministrationExt &operator= (AdministrationExt &&) = delete;
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:33

  extern TAO_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AdministrationExt;


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module ImplementationRepository
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::ImplementationRepository::EnvironmentVariable>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::EnvironmentVariable,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::ImplementationRepository::EnvironmentList>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::EnvironmentList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::ImplementationRepository::ActivationMode>
    : public
        Basic_Arg_Traits_T<
            ::ImplementationRepository::ActivationMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::ImplementationRepository::StartupOptions>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::StartupOptions,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::ImplementationRepository::ServerActiveStatus>
    : public
        Basic_Arg_Traits_T<
            ::ImplementationRepository::ServerActiveStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::ImplementationRepository::ServerInformation>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::ServerInformation,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::ImplementationRepository::ServerInformationList>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::ServerInformationList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ImplementationRepository::ServerInformationIterator>
    : public Object_Arg_Traits_T<
        ::ImplementationRepository::ServerInformationIterator_ptr,
        ::ImplementationRepository::ServerInformationIterator_var,
        ::ImplementationRepository::ServerInformationIterator_out,
        TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATION__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATION__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ImplementationRepository::Administration>
    : public Object_Arg_Traits_T<
        ::ImplementationRepository::Administration_ptr,
        ::ImplementationRepository::Administration_var,
        ::ImplementationRepository::Administration_out,
        TAO::Objref_Traits<ImplementationRepository::Administration>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ImplementationRepository::AdministrationExt>
    : public Object_Arg_Traits_T<
        ::ImplementationRepository::AdministrationExt_ptr,
        ::ImplementationRepository::AdministrationExt_var,
        ::ImplementationRepository::AdministrationExt_out,
        TAO::Objref_Traits<ImplementationRepository::AdministrationExt>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__TRAITS_

  template<>
  struct TAO_IMR_Client_Export Objref_Traits< ::ImplementationRepository::ServerInformationIterator>
  {
    static ::ImplementationRepository::ServerInformationIterator_ptr duplicate (::ImplementationRepository::ServerInformationIterator_ptr p);
    static void release (::ImplementationRepository::ServerInformationIterator_ptr p);
    static ::ImplementationRepository::ServerInformationIterator_ptr nil ();
    static ::CORBA::Boolean marshal (const ::ImplementationRepository::ServerInformationIterator_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATION__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATION__TRAITS_

  template<>
  struct TAO_IMR_Client_Export Objref_Traits< ::ImplementationRepository::Administration>
  {
    static ::ImplementationRepository::Administration_ptr duplicate (::ImplementationRepository::Administration_ptr p);
    static void release (::ImplementationRepository::Administration_ptr p);
    static ::ImplementationRepository::Administration_ptr nil ();
    static ::CORBA::Boolean marshal (const ::ImplementationRepository::Administration_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__TRAITS_

  template<>
  struct TAO_IMR_Client_Export Objref_Traits< ::ImplementationRepository::AdministrationExt>
  {
    static ::ImplementationRepository::AdministrationExt_ptr duplicate (::ImplementationRepository::AdministrationExt_ptr p);
    static void release (::ImplementationRepository::AdministrationExt_ptr p);
    static ::ImplementationRepository::AdministrationExt_ptr nil ();
    static ::CORBA::Boolean marshal (const ::ImplementationRepository::AdministrationExt_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::AlreadyRegistered &); // copying version
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::AlreadyRegistered*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::AlreadyRegistered *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::AlreadyRegistered &); // copying version
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AlreadyRegistered*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::AlreadyRegistered *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::CannotActivate &); // copying version
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::CannotActivate*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::CannotActivate *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::CannotActivate &); // copying version
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::CannotActivate*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::CannotActivate *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::NotFound &); // copying version
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::NotFound*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::NotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::NotFound &); // copying version
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::NotFound*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::NotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\any_op_ch.cpp:36



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::CannotComplete &); // copying version
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::CannotComplete*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::CannotComplete *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::CannotComplete &); // copying version
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::CannotComplete*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::CannotComplete *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::EnvironmentVariable &); // copying version
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::EnvironmentVariable*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::EnvironmentVariable *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::EnvironmentVariable &); // copying version
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::EnvironmentVariable*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::EnvironmentVariable *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, const ::ImplementationRepository::EnvironmentList &); // copying version
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ::ImplementationRepository::EnvironmentList*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::EnvironmentList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, const ImplementationRepository::EnvironmentList &); // copying version
TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ImplementationRepository::EnvironmentList*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::EnvironmentList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\any_op_ch.cpp:31



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::ActivationMode);
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ImplementationRepository::ActivationMode &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ActivationMode);
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::ActivationMode &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::StartupOptions &); // copying version
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::StartupOptions*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::StartupOptions *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::StartupOptions &); // copying version
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::StartupOptions*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::StartupOptions *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\any_op_ch.cpp:31



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::ServerActiveStatus);
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ImplementationRepository::ServerActiveStatus &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ServerActiveStatus);
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::ServerActiveStatus &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::ServerInformation &); // copying version
  TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::ServerInformation*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::ServerInformation *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::ServerInformation &); // copying version
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ServerInformation*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::ServerInformation *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:46





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, const ::ImplementationRepository::ServerInformationList &); // copying version
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ::ImplementationRepository::ServerInformationList*); // noncopying version
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::ServerInformationList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, const ImplementationRepository::ServerInformationList &); // copying version
TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ImplementationRepository::ServerInformationList*); // noncopying version
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::ServerInformationList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ServerInformationIterator_ptr); // copying
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ServerInformationIterator_ptr *); // non-copying
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ServerInformationIterator_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ServerInformationIterator_ptr); // copying
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ServerInformationIterator_ptr *); // non-copying
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::ServerInformationIterator_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, Administration_ptr); // copying
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, Administration_ptr *); // non-copying
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Administration_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::Administration_ptr); // copying
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::Administration_ptr *); // non-copying
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::Administration_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_ch.cpp:40





#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AdministrationExt_ptr); // copying
  TAO_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AdministrationExt_ptr *); // non-copying
  TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AdministrationExt_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AdministrationExt_ptr); // copying
TAO_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AdministrationExt_ptr *); // non-copying
TAO_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AdministrationExt_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:36



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AlreadyRegistered &);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AlreadyRegistered &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:36



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::CannotActivate &);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::CannotActivate &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:36



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::NotFound &);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::NotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:36



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::CannotComplete &);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::CannotComplete &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::EnvironmentVariable &);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::EnvironmentVariable &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_ImplementationRepository_EnvironmentList_H_
#define _TAO_CDR_OP_ImplementationRepository_EnvironmentList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IMR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::EnvironmentList &_tao_sequence);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::EnvironmentList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_ImplementationRepository_EnvironmentList_H_ */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:33



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ImplementationRepository::ActivationMode _tao_enumerator);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::ActivationMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::StartupOptions &);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::StartupOptions &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:33



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ImplementationRepository::ServerActiveStatus _tao_enumerator);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::ServerActiveStatus &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::ServerInformation &);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::ServerInformation &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_ImplementationRepository_ServerInformationList_H_
#define _TAO_CDR_OP_ImplementationRepository_ServerInformationList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IMR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerInformationList &_tao_sequence);
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerInformationList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_ImplementationRepository_ServerInformationList_H_ */


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::ServerInformationIterator_ptr );
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::ServerInformationIterator_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::Administration_ptr );
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::Administration_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:40




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AdministrationExt_ptr );
TAO_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AdministrationExt_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "ImplRepoC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

