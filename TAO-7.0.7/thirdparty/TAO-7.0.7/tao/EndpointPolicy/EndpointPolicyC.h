// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:148

#ifndef _TAO_PIDL_ENDPOINTPOLICYC_BYAJBX_H_
#define _TAO_PIDL_ENDPOINTPOLICYC_BYAJBX_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/EndpointPolicy/EndpointPolicy_Export.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/PolicyC.h"
#include "tao/EndpointPolicy/EndpointPolicyTypeC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 7
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:34

namespace EndpointPolicy
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_ENDPOINTPOLICY_ENDPOINTVALUEBASE__VAR_OUT_CH_)
#define _ENDPOINTPOLICY_ENDPOINTVALUEBASE__VAR_OUT_CH_

  class EndpointValueBase;
  using EndpointValueBase_ptr = EndpointValueBase*;
  using EndpointValueBase_var = TAO_Objref_Var_T<EndpointValueBase>;
  using EndpointValueBase_out = TAO_Objref_Out_T<EndpointValueBase>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_EndpointPolicy_Export EndpointValueBase
    : public virtual ::CORBA::Object
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = EndpointValueBase_ptr;
    using _var_type = EndpointValueBase_var;
    using _out_type = EndpointValueBase_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static EndpointValueBase_ptr _duplicate (EndpointValueBase_ptr obj);

    static void _tao_release (EndpointValueBase_ptr obj);

    static EndpointValueBase_ptr _narrow (::CORBA::Object_ptr obj);
    static EndpointValueBase_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static EndpointValueBase_ptr _nil ();

    virtual ::CORBA::ULong protocol_tag () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    EndpointValueBase ();

    

    virtual ~EndpointValueBase () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    EndpointValueBase (const EndpointValueBase &) = delete;
    EndpointValueBase (EndpointValueBase &&) = delete;
    EndpointValueBase &operator= (const EndpointValueBase &) = delete;
    EndpointValueBase &operator= (EndpointValueBase &&) = delete;
  };

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:98

  

#if !defined (_ENDPOINTPOLICY_ENDPOINTLIST_CH_)
#define _ENDPOINTPOLICY_ENDPOINTLIST_CH_

  class EndpointList;
  typedef ::TAO_VarSeq_Var_T<EndpointList> EndpointList_var;
  typedef ::TAO_Seq_Out_T<EndpointList> EndpointList_out;
  

  class TAO_EndpointPolicy_Export EndpointList
    : public
        ::TAO::unbounded_object_reference_sequence<
            EndpointValueBase,
            EndpointValueBase_var
          >
  {
  public:
    EndpointList () = default;
    EndpointList ( ::CORBA::ULong max);
    EndpointList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      EndpointValueBase_ptr* buffer,
      ::CORBA::Boolean release = false);
    EndpointList (const EndpointList &) = default;
    EndpointList (EndpointList &&) = default;
    EndpointList& operator= (const EndpointList &) = default;
    EndpointList& operator= (EndpointList &&) = default;
    virtual ~EndpointList () = default;
    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    
    using _var_type = EndpointList_var;
    using _out_type = EndpointList_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_interface.cpp:747

  

#if !defined (_ENDPOINTPOLICY_POLICY__VAR_OUT_CH_)
#define _ENDPOINTPOLICY_POLICY__VAR_OUT_CH_

  class Policy;
  using Policy_ptr = Policy*;
  using Policy_var = TAO_Objref_Var_T<Policy>;
  using Policy_out = TAO_Objref_Out_T<Policy>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:39

  

  class TAO_EndpointPolicy_Export Policy
    : public virtual ::CORBA::Policy
  
  {
  public:
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_type.cpp:296

    using _ptr_type = Policy_ptr;
    using _var_type = Policy_var;
    using _out_type = Policy_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Policy_ptr _duplicate (Policy_ptr obj);

    static void _tao_release (Policy_ptr obj);

    static Policy_ptr _narrow (::CORBA::Object_ptr obj);
    static Policy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Policy_ptr _nil ();

    virtual ::EndpointPolicy::EndpointList * value () = 0;

    virtual ::CORBA::Policy_ptr copy () = 0;

    virtual void destroy () = 0;

    
    // TAO_IDL - Generated from
    // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Policy ();

    

    virtual ~Policy () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    Policy (const Policy &) = delete;
    Policy (Policy &&) = delete;
    Policy &operator= (const Policy &) = delete;
    Policy &operator= (Policy &&) = delete;
  };


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_module\module_ch.cpp:62


} // module EndpointPolicy
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:64




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::EndpointPolicy::EndpointList>
    : public
        Var_Size_Arg_Traits_T<
            ::EndpointPolicy::EndpointList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_traits.cpp:58




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_ENDPOINTPOLICY_ENDPOINTVALUEBASE__TRAITS_)
#define _ENDPOINTPOLICY_ENDPOINTVALUEBASE__TRAITS_

  template<>
  struct TAO_EndpointPolicy_Export Objref_Traits< ::EndpointPolicy::EndpointValueBase>
  {
    static ::EndpointPolicy::EndpointValueBase_ptr duplicate (::EndpointPolicy::EndpointValueBase_ptr p);
    static void release (::EndpointPolicy::EndpointValueBase_ptr p);
    static ::EndpointPolicy::EndpointValueBase_ptr nil ();
    static ::CORBA::Boolean marshal (const ::EndpointPolicy::EndpointValueBase_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_ENDPOINTPOLICY_POLICY__TRAITS_)
#define _ENDPOINTPOLICY_POLICY__TRAITS_

  template<>
  struct TAO_EndpointPolicy_Export Objref_Traits< ::EndpointPolicy::Policy>
  {
    static ::EndpointPolicy::Policy_ptr duplicate (::EndpointPolicy::Policy_ptr p);
    static void release (::EndpointPolicy::Policy_ptr p);
    static ::EndpointPolicy::Policy_ptr nil ();
    static ::CORBA::Boolean marshal (const ::EndpointPolicy::Policy_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:1639



TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */

