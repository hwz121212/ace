// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:363


#include "CosTypedEventCommC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "cstring"

#if !defined (__ACE_INLINE__)
#include "CosTypedEventCommC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for CosTypedEventComm::TypedPushConsumer.

CosTypedEventComm::TypedPushConsumer_ptr
TAO::Objref_Traits<CosTypedEventComm::TypedPushConsumer>::duplicate (CosTypedEventComm::TypedPushConsumer_ptr p)
{
  return CosTypedEventComm::TypedPushConsumer::_duplicate (p);
}

void
TAO::Objref_Traits<CosTypedEventComm::TypedPushConsumer>::release (CosTypedEventComm::TypedPushConsumer_ptr p)
{
  ::CORBA::release (p);
}

CosTypedEventComm::TypedPushConsumer_ptr
TAO::Objref_Traits<CosTypedEventComm::TypedPushConsumer>::nil ()
{
  return CosTypedEventComm::TypedPushConsumer::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CosTypedEventComm::TypedPushConsumer>::marshal (const CosTypedEventComm::TypedPushConsumer_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_cs.cpp:87

::CORBA::Object_ptr
CosTypedEventComm::TypedPushConsumer::get_typed_consumer ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::CORBA::Object>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "get_typed_consumer",
      18,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}

CosTypedEventComm::TypedPushConsumer::TypedPushConsumer ()
{
}
void
CosTypedEventComm::TypedPushConsumer::_tao_any_destructor (void *_tao_void_pointer)
{
  TypedPushConsumer *_tao_tmp_pointer =
    static_cast<TypedPushConsumer *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

CosTypedEventComm::TypedPushConsumer_ptr
CosTypedEventComm::TypedPushConsumer::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<TypedPushConsumer>::narrow (_tao_objref, "IDL:omg.org/CosTypedEventComm/TypedPushConsumer:1.0");
}

CosTypedEventComm::TypedPushConsumer_ptr
CosTypedEventComm::TypedPushConsumer::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<TypedPushConsumer>::unchecked_narrow (_tao_objref);
}

CosTypedEventComm::TypedPushConsumer_ptr
CosTypedEventComm::TypedPushConsumer::_nil ()
{
  return nullptr;
}

CosTypedEventComm::TypedPushConsumer_ptr
CosTypedEventComm::TypedPushConsumer::_duplicate (TypedPushConsumer_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CosTypedEventComm::TypedPushConsumer::_tao_release (TypedPushConsumer_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CosTypedEventComm::TypedPushConsumer::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/CosEventComm/PushConsumer:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CosTypedEventComm/TypedPushConsumer:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* CosTypedEventComm::TypedPushConsumer::_interface_repository_id () const
{
  return "IDL:omg.org/CosTypedEventComm/TypedPushConsumer:1.0";
}

::CORBA::Boolean
CosTypedEventComm::TypedPushConsumer::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CosTypedEventComm_TypedPushConsumer (
    ::CORBA::tk_objref,
    "IDL:omg.org/CosTypedEventComm/TypedPushConsumer:1.0",
    "TypedPushConsumer");
  

namespace CosTypedEventComm
{
  ::CORBA::TypeCode_ptr const _tc_TypedPushConsumer =
    &_tao_tc_CosTypedEventComm_TypedPushConsumer;
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for CosTypedEventComm::TypedPullSupplier.

CosTypedEventComm::TypedPullSupplier_ptr
TAO::Objref_Traits<CosTypedEventComm::TypedPullSupplier>::duplicate (CosTypedEventComm::TypedPullSupplier_ptr p)
{
  return CosTypedEventComm::TypedPullSupplier::_duplicate (p);
}

void
TAO::Objref_Traits<CosTypedEventComm::TypedPullSupplier>::release (CosTypedEventComm::TypedPullSupplier_ptr p)
{
  ::CORBA::release (p);
}

CosTypedEventComm::TypedPullSupplier_ptr
TAO::Objref_Traits<CosTypedEventComm::TypedPullSupplier>::nil ()
{
  return CosTypedEventComm::TypedPullSupplier::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CosTypedEventComm::TypedPullSupplier>::marshal (const CosTypedEventComm::TypedPullSupplier_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_operation\operation_cs.cpp:87

::CORBA::Object_ptr
CosTypedEventComm::TypedPullSupplier::get_typed_supplier ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::CORBA::Object>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "get_typed_supplier",
      18,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}

CosTypedEventComm::TypedPullSupplier::TypedPullSupplier ()
{
}
void
CosTypedEventComm::TypedPullSupplier::_tao_any_destructor (void *_tao_void_pointer)
{
  TypedPullSupplier *_tao_tmp_pointer =
    static_cast<TypedPullSupplier *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

CosTypedEventComm::TypedPullSupplier_ptr
CosTypedEventComm::TypedPullSupplier::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<TypedPullSupplier>::narrow (_tao_objref, "IDL:omg.org/CosTypedEventComm/TypedPullSupplier:1.0");
}

CosTypedEventComm::TypedPullSupplier_ptr
CosTypedEventComm::TypedPullSupplier::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<TypedPullSupplier>::unchecked_narrow (_tao_objref);
}

CosTypedEventComm::TypedPullSupplier_ptr
CosTypedEventComm::TypedPullSupplier::_nil ()
{
  return nullptr;
}

CosTypedEventComm::TypedPullSupplier_ptr
CosTypedEventComm::TypedPullSupplier::_duplicate (TypedPullSupplier_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CosTypedEventComm::TypedPullSupplier::_tao_release (TypedPullSupplier_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CosTypedEventComm::TypedPullSupplier::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/CosEventComm/PullSupplier:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CosTypedEventComm/TypedPullSupplier:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* CosTypedEventComm::TypedPullSupplier::_interface_repository_id () const
{
  return "IDL:omg.org/CosTypedEventComm/TypedPullSupplier:1.0";
}

::CORBA::Boolean
CosTypedEventComm::TypedPullSupplier::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CosTypedEventComm_TypedPullSupplier (
    ::CORBA::tk_objref,
    "IDL:omg.org/CosTypedEventComm/TypedPullSupplier:1.0",
    "TypedPullSupplier");
  

namespace CosTypedEventComm
{
  ::CORBA::TypeCode_ptr const _tc_TypedPullSupplier =
    &_tao_tc_CosTypedEventComm_TypedPullSupplier;
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<CosTypedEventComm::TypedPushConsumer>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventComm
{
  

  /// Copying insertion.
  void
  operator<<= (
    ::CORBA::Any &_tao_any,
    TypedPushConsumer_ptr _tao_elem)
  {
    TypedPushConsumer_ptr _tao_objptr =
      TypedPushConsumer::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
    ::CORBA::Any &_tao_any,
    TypedPushConsumer_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<TypedPushConsumer>::insert (
      _tao_any,
      TypedPushConsumer::_tao_any_destructor,
      _tc_TypedPushConsumer,
      *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      TypedPushConsumer_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<TypedPushConsumer>::extract (
          _tao_any,
          TypedPushConsumer::_tao_any_destructor,
          _tc_TypedPushConsumer,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  CosTypedEventComm::TypedPushConsumer_ptr _tao_elem)
{
  CosTypedEventComm::TypedPushConsumer_ptr _tao_objptr =
    CosTypedEventComm::TypedPushConsumer::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  CosTypedEventComm::TypedPushConsumer_ptr *_tao_elem)
{
  TAO::Any_Impl_T<CosTypedEventComm::TypedPushConsumer>::insert (
    _tao_any,
    CosTypedEventComm::TypedPushConsumer::_tao_any_destructor,
    CosTypedEventComm::_tc_TypedPushConsumer,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    CosTypedEventComm::TypedPushConsumer_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<CosTypedEventComm::TypedPushConsumer>::extract (
        _tao_any,
        CosTypedEventComm::TypedPushConsumer::_tao_any_destructor,
        CosTypedEventComm::_tc_TypedPushConsumer,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<CosTypedEventComm::TypedPullSupplier>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventComm
{
  

  /// Copying insertion.
  void
  operator<<= (
    ::CORBA::Any &_tao_any,
    TypedPullSupplier_ptr _tao_elem)
  {
    TypedPullSupplier_ptr _tao_objptr =
      TypedPullSupplier::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
    ::CORBA::Any &_tao_any,
    TypedPullSupplier_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<TypedPullSupplier>::insert (
      _tao_any,
      TypedPullSupplier::_tao_any_destructor,
      _tc_TypedPullSupplier,
      *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      TypedPullSupplier_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<TypedPullSupplier>::extract (
          _tao_any,
          TypedPullSupplier::_tao_any_destructor,
          _tc_TypedPullSupplier,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  CosTypedEventComm::TypedPullSupplier_ptr _tao_elem)
{
  CosTypedEventComm::TypedPullSupplier_ptr _tao_objptr =
    CosTypedEventComm::TypedPullSupplier::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  CosTypedEventComm::TypedPullSupplier_ptr *_tao_elem)
{
  TAO::Any_Impl_T<CosTypedEventComm::TypedPullSupplier>::insert (
    _tao_any,
    CosTypedEventComm::TypedPullSupplier::_tao_any_destructor,
    CosTypedEventComm::_tc_TypedPullSupplier,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    CosTypedEventComm::TypedPullSupplier_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<CosTypedEventComm::TypedPullSupplier>::extract (
        _tao_any,
        CosTypedEventComm::TypedPullSupplier::_tao_any_destructor,
        CosTypedEventComm::_tc_TypedPullSupplier,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTypedEventComm::TypedPushConsumer_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTypedEventComm::TypedPushConsumer_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::CosTypedEventComm::TypedPushConsumer>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTypedEventComm::TypedPullSupplier_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTypedEventComm::TypedPullSupplier_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::CosTypedEventComm::TypedPullSupplier>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



