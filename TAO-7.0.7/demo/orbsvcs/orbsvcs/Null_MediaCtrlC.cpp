// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.0.7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_codegen.cpp:363


#include "Null_MediaCtrlC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/Object_T.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "cstring"

#if !defined (__ACE_INLINE__)
#include "Null_MediaCtrlC.inl"
#endif /* !defined INLINE */

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\interface_cs.cpp:47



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for Null_MediaCtrl.

Null_MediaCtrl_ptr
TAO::Objref_Traits<Null_MediaCtrl>::duplicate (Null_MediaCtrl_ptr p)
{
  return Null_MediaCtrl::_duplicate (p);
}

void
TAO::Objref_Traits<Null_MediaCtrl>::release (Null_MediaCtrl_ptr p)
{
  ::CORBA::release (p);
}

Null_MediaCtrl_ptr
TAO::Objref_Traits<Null_MediaCtrl>::nil ()
{
  return Null_MediaCtrl::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Null_MediaCtrl>::marshal (const Null_MediaCtrl_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




Null_MediaCtrl::Null_MediaCtrl ()
{
}
void
Null_MediaCtrl::_tao_any_destructor (void *_tao_void_pointer)
{
  Null_MediaCtrl *_tao_tmp_pointer =
    static_cast<Null_MediaCtrl *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

Null_MediaCtrl_ptr
Null_MediaCtrl::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Null_MediaCtrl>::narrow (_tao_objref, "IDL:Null_MediaCtrl:1.0");
}

Null_MediaCtrl_ptr
Null_MediaCtrl::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Null_MediaCtrl>::unchecked_narrow (_tao_objref);
}

Null_MediaCtrl_ptr
Null_MediaCtrl::_nil ()
{
  return nullptr;
}

Null_MediaCtrl_ptr
Null_MediaCtrl::_duplicate (Null_MediaCtrl_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Null_MediaCtrl::_tao_release (Null_MediaCtrl_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Null_MediaCtrl::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:Null_MediaCtrl:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Null_MediaCtrl::_interface_repository_id () const
{
  return "IDL:Null_MediaCtrl:1.0";
}

::CORBA::Boolean
Null_MediaCtrl::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_typecode\objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_Null_MediaCtrl (
    ::CORBA::tk_objref,
    "IDL:Null_MediaCtrl:1.0",
    "Null_MediaCtrl");
  
::CORBA::TypeCode_ptr const _tc_Null_MediaCtrl =
  &_tao_tc_Null_MediaCtrl;
// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\any_op_cs.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Null_MediaCtrl>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  Null_MediaCtrl_ptr _tao_elem)
{
  Null_MediaCtrl_ptr _tao_objptr =
    Null_MediaCtrl::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  Null_MediaCtrl_ptr *_tao_elem)
{
  TAO::Any_Impl_T<Null_MediaCtrl>::insert (
    _tao_any,
    Null_MediaCtrl::_tao_any_destructor,
    _tc_Null_MediaCtrl,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    Null_MediaCtrl_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<Null_MediaCtrl>::extract (
        _tao_any,
        Null_MediaCtrl::_tao_any_destructor,
        _tc_Null_MediaCtrl,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\hanwenzhi_code\ace\tao-7.0.7\thirdparty\tao-7.0.7\tao_idl\be\be_visitor_interface\cdr_op_cs.cpp:50



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Null_MediaCtrl_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Null_MediaCtrl_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::Null_MediaCtrl>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





TAO_END_VERSIONED_NAMESPACE_DECL


